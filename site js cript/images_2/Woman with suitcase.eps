%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (1) ()
%%Title: (traveller woman sitting on suitcase.eps)
%%CreationDate: 6/16/2012 7:40 PM
%%Canvassize: 16383
%%BoundingBox: 193 14 1266 1413
%%HiResBoundingBox: 193.9897 14.2168 1265.3633 1412.4375
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 1 1 1 1 ([\721\756\742\754\745\771\745\755\750\745])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 709.5 707.8203 709.5 707.8203
%AI3_TileBox: 411.0601 287.7002 1006.2598 1129.6201
%AI3_DocumentPreview: Header
%AI5_ArtSize: 1417.3203 1417.3203
%AI5_RulerUnits: 4
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -1328.3843 2532.6836 0.3333 1858 927 18 0 0 7 118 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 100 128 8
%%BeginData: 17677 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD25FFCDCCCCCECECFFD5CFFCEA4CCC7CCA4FEC6CCA6CFFD55FFA8
%A8A8CEFECCC7CCCCCCC7CCCCCCC6CEFD51FF7D7C5157515757A5A5CCA4CC
%A5CCA4CCA5CCA4CEFD4EFFAE7B58577C577B577C577CA5FD09CCCDFD4DFF
%8257815D8157815757517B5757A5CCC7CCA5CCC7CCA4CCCFFD4BFFAD5D81
%8182818181825D7B577C577BA5CCCCCCC7CCCCCCC6CEFD4AFFA757815D81
%57815D8157817B7B5157517BA4CCA5CCA4CCA5CCA5FD4AFF818281828182
%81827BA6A6C9A6C2757C57A6FD08CCCFFD48FFA78157815D8157817BA0A7
%CFCFCFA0BB755751A5C7CCA5CCC7CCA4CDCECFCFFD45FFAD5D8181828181
%75754475A0CFC9C9996F575757CCCCCCC7CCCCCCC6CCCCCDC8CECFFD42FF
%82815D81578157766F44444475C97544204B57577BCCA5CCA4CCA5CCA4CC
%A4CCA4CCA5CEA7FD3FFFAD5D828182818275A044444475A06F4444444B57
%7CA5FD0DCCC6CCCDCFFD3DFF83815D8157815D7C6F6F444A6FC26F442044
%446F517BC7CCA5CCC7CCA5CCC7CCA5CCC7CCA5CCC6CEFD3CFFCF5D828181
%818281A075756FC2C8C86F6F4A756FA051A6CCCCC7CCCCCCC7CCCCCCC7CC
%CCCCC7CCCCFD3DFF8257815D8157817BC2A0C299C2A0C2999A759A939951
%A5C7CCA4CCA5CCA4CCA5CCA4CCA5CCA4CCCFFD3DFFAD5D825D828182A0C9
%C2C2C2C9C8C9C2C39999939F7BA5FD05CCC8A5FD08CCFD3FFFCF82825781
%5DA6A0C299C299C2A0C39A999993749F75A5A5C8A5CCA5999FCCA5CCC7CC
%A4CDCFFD41FFCFA7AEC9C9C2BC9ABC93C3C2C3C2C9939F9F9F99A59F9A99
%C8C79AA5CCC7CCCCFECEFD45FFCF9FC299BB99C2A0C8C2C89999759F9F9F
%999F99A0939F759FC6CCA4FEA6FD46FFA7A0A0C9C8C9C2C9C2C2999A999F
%A0C8A0A69FCFCAC2999A99CCCCCDCEFD42FFCFFFCFCFA0A09FA0A0C9C2C2
%9999939A99999FA09FA69FC9FFFFC99F939AC9FFCFFD42FFCAC8A0C8A0A0
%9FA6A0A099C2999999C8C29999C8A6C9A0C9FFFFFFCFC2999AFD46FFA7A0
%7BA09FA07BA07599939999C2A0C2759FA6C9A7C9A8FFFFFFA0C299A1FD48
%FFC9A0C2A0A075A099BCA0C9C2C9999FA7CFC9CECFFD04FFC9C29ACAFD48
%FFC2C9C2C8A0C2759999C9C2C89F99A0CEA7CECAFD04FFCFA0C29AFD48FF
%C9C9C2C9C2C9C2C299C2C2C9C2C2A0CFC9CFCFFD05FFCAC8A0C9FD47FF7D
%A1C2C2A0C8C2C875C199C2A0C299C8A7FD09FFA0C29ACAFD45FF5252A0C9
%C2C9C2C9C2A0C1C9A0C9A0C299CAFD0AFFC3C29AC9FD42FF7DF852A8C9C2
%C8C2C9C2C875BBC2C8A0C299A0A7FD0BFFA1C2A0A0A1FD3EFFA85227A8FF
%FFC2C9C2C9C2C9C276BAC8C8C9C2C9A0CAFD0CFFC9C9C2C29AC9FD3BFF52
%2752FFFFFFCAC8A0C8C2C2A0C251BB99C9C2C8A0C9A0C9CAFD0BFFA7C2A0
%C299A0A0CAFD35FFCFA82027A8FD04FFCFC2C9C2C899C8A076BBC1C2C9C2
%C9C8C8BBC9C9CFCAFD09FFCFC9C2C9C2C299A1A7FD32FF8258F852A8FD05
%FFCAC8C2C9A0A099A051BB98C2C2C8C2C9C2C198C8C2C8C2C9C9CAC9CFCF
%FD04FFC9A0C3C2C2999A75A1A8FD2EFF837CF8A0CCCFFD05FFCFC2C9C2C8
%9FC27576BBBBBBC9C2C9C2C9C2BBBBC9C2C9C2C9C2C8C2C9C2C9C9CFCAC9
%C2C9C2C9C2C2999A9ACAFD2BFF5227F852A4CCA4A6A8FFFFFFCAC9C2C8A0
%A0937575BB98BB9FC9C2C8A0C999BB99C9C2C2A0C2A0C2A0C2A0C29FC2A0
%C2A0C2A0C2A0C9A09975FD2AFF52FD0427A6A5A5BAC1A7FFFFFFC8C9C2C8
%A09975A0BBC1BBC1C2C9C2C9C8C8BAC1C2C99AC2A0C29AC2A0C29AC2A0C2
%A0C2C2C9C2C9C2C9C2C9FD29FF7C27F827F8272DA59EC19E8283FFFFC9C2
%C8A0A099754BBB98BB98C2C2C8C2C9C2C198BB99A099A099A099A099A099
%A099A099A09AC2A0C2C2C2A0FD28FF82825227F827277C9EC1C18281FFCA
%ADC2C9C2C299BB757698C1BBBBBBC9C2C9C2C9C2BBBAC1A0A09AC2A0A09A
%C2A0C29AC2A0C29AC2A0C3A0C9C9FD28FF7B5D57272727F8529FC198A557
%A7A8AE57C8A0C9A0A09276519998BB98BB99C9C2C8A0C898BB98C2A8CFA8
%CFA8CFA8FFCFFFA8FFCFFFA8FFFFFFCAFD28FF8282815227CCA6A6A5C1C0
%C75DA7CAFF8282C2C9C2C899BB517693C1BBC1BAC1C1C9C2C9C2C1BAC1BB
%C9FD39FF7B825D52F8A6C6CC81C1BAC15782A8FFA7829FC2C2C9C2A09252
%519392BBBABB98BBBBC199BB98BB98BB98FD38FF82825D7C277CC6CCA59F
%BAC18182A7FFCA8281C1C2C9C2C999C12776939993BBBBBBBABBBBBBBAC1
%BBBBBAC2FD37FF7C815782F852A4CCA5A598C17A5D82CFA8A7579F98C2C2
%C8A0999F27519392999299929998BB98BB98BB92BBC9FD36FF8282818227
%52CCCCC7A6C1C19F8281CFCAFF8182C0C1C1C9C2C9997605A6BBBB99BB99
%BB99C8BBBBBBC1BBC9CAFD36FF838157815127A5CCC7A59EC1C08157A7CA
%FF82829FC198C2C2C8A0A020587BBB98C1C1BB98C1C1C198C198C9FD37FF
%A782818258277CCCC7CC9FC1BAA55D82A8FFA8827BC1C1C19FC9C2C99927
%27A6BABBC1C7BABBC1C7BAC1C1C1CAFD36FFA87B5781572751CCC6CC7BC1
%989F5781A7FFA8A7579F98C19EA6A0C9A09AF8279FC192C1C1BB98C1C1BB
%98C1C2FD37FF825D82815227CDCCCC81C1C1C1818282FFCACF5DA5C0C1C1
%A5A5C9C2C8752751C1C1BBBBC8BBBBC1C1BBC1C1CAFD36FFA757815758F8
%A6A4CCA59F98C19F5D5DCFA8FF82829EC198C181CCC2C9C276F87C98C198
%C1C1C198C1C1BB98C2FD37FF57825D82F87CFECCA5A5C1C19E825DADCAFF
%A7827BC1C1C17BABC7C9C2C99F7CA7C1C1C1BAC8BBBBC1C1BBC1C9FD36FF
%7D5757812727A4CCA5A598C19E815782A8CFA88257C198C19E81A4CCC2C2
%A0A582FF99C198BB9FC198C198C1C1FD37FF825D825827A6CCCCAB9FC1C1
%A55D82A8FFCAAE5DA5C0C1C1A5A5CCC7C9C2C97BAEFFC9BBC1BBC7BBFD04
%C1C9FD37FF5781572752FEC6CC7BC198C15D8182FFA8CF81819EC198C181
%CCA4CDA0C8A0A6AEFFC2BBBBBB9FC1BAC198C1CAFD15FFA8C99AA099C9CA
%FD1BFF7C5D52F8CDCCCC81C1C1C17B8282CFA8FFA7829FC1C1C17BACCCCC
%7CC9C2C8A7FFFFC9BAC1BBC1BAC1C1BBC2FD14FFCAA0A099BB99999AC3CA
%FD1AFF7C57F87CA4CCA59F98C19F8157AEA8CFA88257C198C19E81A5CCA5
%76A0C8A0CFFFFF9FBB98BB9FBB98C198C9FD12FFA1A0FD0799C29AC2CAFD
%1AFF7C7CCCCCCCA5C0C1C1825DADCFFFCAAD5DA5C0C1C1A5A5CCFE7C7CC9
%C2C9CFFFCFC1BBC1BBC1BBC1BBC1CFFD0FFFCAC9999999C299C299C299C2
%C2C3C2C9FD1BFF82A5C6AB9EC198A55781A8FFA8AE57819EC198C181CCA4
%C827C2C2C9A0FFFFC298C198C1BABB9FBBC2FD0EFFCAA0FD06999AFD0499
%9AC2A0C2A1FD1CFFA7A59FC1C1C15D82A7FFA8FF82829FC1C1C19FACCCCC
%5152C2C9C2C9FFC298C1BBBBC1BBC1C1BACFFD0CFFC9C29999999A99C299
%9A99C2999A99C2C2C2A0C9FD1DFFA89F98C17B5D82FFA8FFA7817BC198C1
%9EA5A5CCA52776C8C2C29AC298C19FBB98C198C198C1CFFD09FFA8C3FD10
%999AC2A0C2A1FD1FFFA77B8281CFCFFFCAAD5DA5C0C1C1A5A5CCFE7CF8C9
%C2C9C2BCBBC1C1C1BBC1BAC1C1C1C9FD08FFCFA0A099C299C299C299C299
%C299C299C2999A99C3C2C2A0CAFD20FFAE7B82CAFFCAA857819EC198C181
%CCA4CDF852A0C9C2C299C7C1BB98C1BBBBC1C1BBFD07FFC3A0FD05999A99
%99999A9999999A9999999A99A0A0C2A0C2A7FD22FFA7A7A8FF82829FC1C1
%C19FACCCCC52277CC8C2C9A0A0C1C1BBC1C1BBC1C1BAC9FD04FFC9C2BBBB
%999A99C2999A99C2999A99C2999A99C299A0999A9AC2A0C3C2CAFD23FFA8
%A77C815DC198C198A5A5CCA5272DA6C2C8A0A099BB98C1C1BB98C198BBCA
%FFCAC299BB98BB98FD0F996FA1A89999C2A0C29AC2A7FD25FFCF82A5C0C1
%C1C7A5CCFE7C2082A0C9C2C999BBBBC1C1C1BBC1C1BBC1C9C1FD04BBC1C1
%C1999A99C299C299C299C299C299996FCAFFC999C2A0C3A0C3C2CFFD27FF
%A8A698C19FCCA4C8F85257C9C2C8A09998BB9FC198C1C1BBBAC192BBBAC1
%99C1C1C19FC1FD0C9975CAFFFFA09999C2A0C29AC2C9FD29FFCFA0A6FEFE
%522757A6C2C9C8C293C1C1C1BAC1C1C1BAC1BBC1BBC1C1C1BBC1BBBB99C2
%A0C2A0C3A0C2A0C3A0C29ACACFCFC9C299999AC3C2C2A0CFFD2BFFA8A7A6
%2751829FC8A0C999999EC198BB98C198BB98BB98BB98BB98BB98BB98C2A0
%C9C2C9A0C9C9C9A7C9C9C9A1C9C9C9999999A09AC2A0C2A7FD2EFFA8FFC9
%C2C2C9C299BBC8BBBBBBC8BBBBFD04C1BBC1BBBBBAC1BBC1C2C9C2C9C2C9
%C2C9C2C9C2C9C2C9C8C9C2C2999A9AC3C2C2A0C9CFFD2FFFC2C2C8C2A093
%C198BB98C19FBBBAC198FD05C1BBBB98BB98C2C2C9C2C8C2C9C2C8C2C9C2
%C8C2C8C2C2999A99C2A0C2A0C2A0CAFD2FFFC2C8C2C993C1C1C1BAC1C1C1
%BAC1C1C1BABBBBC1C1C8C1C7C1C1C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9
%999999C2A0C2A0C3A0C3C9FD2EFFCAC2A0C9999398C198BB98C198BB98C1
%C1C198BB98BB98C199C19FC8C2C8A0C8C2C8A0C8C2C8A0C8C2C8A0A09999
%99C2A0C29AC2A0C9C9FD26FFA0C9FD06FFC2C9C89A99C1C1BBBBC1C1BBBB
%FD05C1BBBBBAC1BBBBBBC1C2C9C2C9C2C9C2C9C2C9C2C9C2C9C2C9999A99
%C2A0C3A0C3A0C3C9CFFD25FFCAC299C9FD04FFCFC8C2C293BB98C198BB98
%C198BB98C7BBBBC1C198BB98BB98BB99C9C2C8C2C9C2C8C2C9C2C8C2C9C2
%C8C2C2999999C2A0C2A0C2A0C9C9FD25FFC9C2C99FC9FD04FFC2C999BBBB
%C1C1C1BBC1C1C1BBBBC1C8BBBBC1C8BBBBBAC1BBC2C2C9C2C9C2C9C8C9C2
%C9C2C8A0C299A099C299999AC3C2C29AC2C9C9CAFD23FFC999C9C2C29FC2
%A8FFCAC9A09398BB98C198BB98C198BB98C19FC198BB9FC798BB98BBC2C8
%A0C2A0C299A099996F996F9975A0A0A0999999A09AC2A0A099C9C9C9FD23
%FFA0C2C9FFC9C9C2C2C9CFC89A93BBBBC1C1C1BBC1C1C1BBC1BAC8C1BBBA
%C1C1C8BBC1999A999A6F936F9A6F9A9AC9A7FD05FFC9BC999A9AC3C2C3A0
%C2C8CAC9FD23FFCFA0C9C9FFC2C8FD04C29399929998C198BB98C199BB98
%BB98C8BABB98BBC1C799936F936FA0A0C9A8FD0AFFCA999999C2A0C2A0C2
%9FFD04C9FD23FFCFC9C9C2C9C2C9C8C99A9999BB99BB99BB99BBC1C1BAC1
%BBC1C1C7BBBBBAC1C1A09AC9CAFD10FFC299C29AC2A0C3A0C2C2C9C9C9CF
%FD19FFA8769A769A769A769AA0C9A0A099A0A0C2996F446E446E446F686F
%68936E936E9992999FC198BB98996F76759A7576759A769A769A769A769A
%769A76A0999999C2A0C29AC2A0C8A0C9C3CAFD18FFA0FD096F996F756F6F
%6F756F44446F446F446F6E756E996EFD0499BB99C299996F75FD156F9999
%C2A0C3A0C3A0C2C2C9C9CAC9FD17FF9A446F6F6F6E996E936E996F996F99
%6EFD04446F6EBBBABB98C1C1BB98BBC1C198BB926F6E996F6F6E996E936E
%FD04446E6E936E996E936E996E936E6F6F9999C2A0C2A0C2A0C8C2C9C9C9
%CAFD15FFCA6F6F6F996F996F996F9993996F99936FFD04446F9992C1BBBB
%BBC8BBBBBAC1C1996E936F996F996F996F999399FD0544996F996F996F99
%6F996F996F99999A99C3C2C29AC2C2C9C2C9C9CAFD15FF766F6E936E996E
%936E996E996E996F93FD0444206F6F9398BB98BB9FC198BB926F6E6F6E99
%6E936E996E936E996E44204444446E996E936E996E936E996E936E9999A0
%9AC2A0A09FC9C2C8A0C9C3CFFD14FFA16F996F996F996F9A999A99996F99
%936FFD04446F996FBBBBC1BAC8C1BB6E6F6F996F996F996F996F996F9993
%99FD05449993996F996F996F996F996F9993A099C3C2C399C8C8C9C2FD04
%C9FD14FF766F6E936E996E996F99939A6F9993996E444444206F6F6F92BB
%98BBC1C16E6F6E996E936E996E936E996E936E996EFD05446E996E936E99
%6E936E996E936E9999A0A0C2A0A0A0C9C2C8C2C9C9C9CAFD13FFA16E996F
%996F999999939999996F99936FFD04446E996F99BAC1BBC16E6F6F996F99
%6F996F996F996F996F996F99FD0544996F996F996F996F996F996F996E99
%9AC2A0C39AC2C2C9C2C9C2C9C9CFFD13FF766F6E996E936E996F996E996F
%6F6FBC6F442044446F6E996EBB98BB6E6E6E996E936E996E936E996E936E
%996E936E44444420446E936E996E936E996E936E996E6F6FC2A0C29AA0A0
%C8A0C8C2C8A0C9C9FD13FFA16E996F996F996F996F99999A99C29A99FD04
%446E996F9998C1936F6E996F996F996F996F996F996F996F996F99FD0544
%996F996F996F996F996F996F996F999AC3A0C39AC2C2C9C2C9C2C9C9C9CA
%FD12FFA06F6E996E936E996E936E9A9A9A99C26FFD04446F6E996E99986F
%6E6F6E996E936E996E936E996E936E996E996E444444206E6E936E996E93
%6E996E936E996E936E9AA0C2A0C2A0C8C2C9C2C8C2C9C9C9FD12FFA16F99
%6F996F996F996F999ABC9A9A996FFD04446F996F9993996E6F6F996F996F
%996F996F996F996F996F999399FD0544996F996F996F996F996F996F996F
%6F75C3C2C299C2C2C9C2C9C2C9C2C9C9FD12FF766F6E936E996E936E9999
%9A99996E9368444444209A9A6F6E996E6F6E996E936E996E936E996E936E
%996E936E996E44204444446E996E936E996E936E996E936E996E99A0C2A0
%A099C8C2C8A0C8C2C8A0C9C9FD11FFA16F996F996F996F9A99BC9A9A6F99
%9A9AFD04446FC36F99936F6E996F996F996F996F996F996F996F996F9993
%99FD05449993996F996F996F996F996F996F6F75C3C2C2C9CFC8C9C2C9C2
%C9C2C9C9C9FD11FF766F6E936E996E99999A9A9A6E996FC36F4444442099
%9A996E996E6F6E996E936E996E936E996E936E996E936E996EFD05446E99
%6E936E996E936E996E936E996F9AA0C2A0CAFFCFC2C2C2C9C2C8C2C9C3CF
%FD10FFA16E996F996F99999A99C299996F99BC99FD04446FC393996F996F
%996F996F996F996F996F996F996F996F996F99FD0544996F996F996F996F
%996F996F996F6F75C2A0C3CAFFFFCFC2C9C2C9C2C9C2C9C9FD10FF766F6E
%996E936E999A99999A6F6F6FBC6F44204420999A996E936E996E936E996E
%936E996E936E996E936E996E936E44444420446E936E996E936E996E936E
%996E994444446F4AA1FFFFFFCAC2C2A0C8C2C8A0C9CAFD0FFFA16E996F99
%6F9993C299BC9A996F999A99FD04446FBC6F996F9993996F996F996F996F
%996F996F996F996F996F99FD0544996F996F996F996F996F9993996E6FFD
%044476FD04FFCFC2C9C2C9C2C9C8CFFD0FFFA06F6E996E99999A999A93BC
%93936E9A6FFD04446F6E996F996F996F996E996E936E996E936E996E936E
%996E996E444444206E6E936E996E936E996E936E6FFD064420A0FD05FFC9
%C2C9C2C8C2C9C9FD0FFFA16F996F9999C29ABC9A9A99BC6F996F6FFD0444
%6E9993996F996F9993996F996F996F996F996F996F996F999399FD054499
%6F996F996F996F996F99FD084476FD06FFC9C2C9C2C9C2C9CAFD0EFF766F
%6E936E99939A999A999A99996E99FD0444206F936F6E996E936E996E996E
%996E936E996E936E996E936E996E44204444446E996E936E996E936E996E
%4420FD05442076FD07FFC9A0C8C2C8A0C9FD0EFFA16F996F9999C29AC299
%BC9AC299996F6FFD04446F9999996F999399999993996F996F996F996F99
%6F996F999399FD05449993996F996F996F996FC875FD07447CFD07FFCFC9
%C2C9C2C9C8FD0EFF766F6E9399C2999A999A999A999A6F99FD0444206F9A
%C39ABC93996F996F996F996E936E996E936E996E936E996EFD05446E996E
%936E996E936E99C8C74AFD0644A1FD08FFC9C8C2C8C2C8C9FD0DFFA16E99
%939A99BC9ABC9AC29AC29A9A936FFD04446FC39AC29AC29AC3FD04996F99
%6F996F996F996F996F996F99FD0544996F996F996F996F99C2C8C1C1FD05
%444AA7FD09FFC2C9C2C9C2C9FD0DFF766F6E99939A999A9A9A6F99999A99
%994444204420939ABC9ABC9ABC9A996E996E936E996E936E996E936E996E
%936E44444420446E936E996E936E9399C89FC7C16F20FD0444FD0AFFCAA0
%C8C2C8A0CAFD0CFFA16E9999BC9ABCBC9A939A6F996FBC996FFD04446FC3
%BCC39AC39A9993996F996F996F996F996F996F996F996F99FD0544996F99
%6F996F9999C8C1C8C1C899FD044475FD0BFFC9C2C9C2C9C9FD0CFFA06F6E
%999A9A99BC6F9A9AC26F6F6EBC6EFD04446F9AC29ABC9ABC6E936E996E93
%6E996E936E996E936E996E996E444444206E6E936E996E936EC2C1C1C1C7
%C1992044444475FD0BFFCAC8C2C8C2C8CAFD0BFFA16F996FC399BC9A996F
%9ABC9A6F99996FFD04446FC39AC3BCC399996F996F996F996F996F996F99
%6F996F999399FD0544996F996F996FA0C1C8C1C8C1C899FD0444A1FD0CFF
%C2C9C2C9C2CAFD0BFF766F6E999A9A99C3999999C293996E996E44444420
%999ABC9ABC93936E996E936E996E936E996E936E996E936E996E44204444
%446E996E936E99C1C79FC7C1C19F9920442044A8FD0CFFCAA0C8C2C2A0FD
%0BFFA16F996FC2BC999AC3BCC39ABCFD0499FD04446FBC99996F996F996F
%996F996F996F996F996F996F996F999399FD05449993996F99C1C8C1C8C1
%C8C1C86E4444446FFD0DFFCFC9C2C9C2C9CFFD0AFF766F6E9393C39A9999
%9A999A9A996E996EFD04446F6F936E996E936E996E936E996E936E996E93
%6E996E936E996EFD05446E996E936FC8C1C7C1C7C1C79944444420A0FD0E
%FFC9C8C2C299A0FD0AFFA16E996F999AC3BCBC99C2BC9A6F99996FFD0444
%6FC3BCC39AC299996F996F996F996F996F996F996F996F996F99FD054499
%6F996F996FC1C7C8C1C8C775FD0444A1FD0EFF9A446F444444A7FD09FF76
%6F6E996F9993BC9ABC99996E936E996E44204444939A9A999A9AC39A9A6F
%996E936E996E996F996E936E996E936E44444420446E936E996E6F6E9FC1
%C79FC76E44204444FD0FFF4A44204444444AFD09FFA16E99939A6F999999
%6F996F996F99996FFD04446E9A999A999A9AC3BCC3BCC29AC29AC29A9A6F
%996F996F996F99FD0544996F996F996F996F99C1C8C7C1446F449AFD0EFF
%A1FD0744A1FD08FFA06F6E996F936E996F996E996F996E9968442044206F
%9AC39AC29A9A99BC9AC39AC29AC39A996E996E936E996E996E4444442044
%6E936E996E936E996E9399C8C1C19AC2C3FD0DFFA84BFD0644206FFD08FF
%A16F996F996F9AFD04996F99939999A0FD047599BC999A9AC39ABC99C39A
%C299996F996F996F996F996F996F9999A0A0A076996F996F996F996F996F
%9399C8C7C8A0C3FD0DFFA0FD0944CAFD07FF766F6E936F999ABC6F996E93
%6E996E99A0A075A0759F6E936E999ABC9A9A9ABC9A996E936E996E936E99
%6E936E9975996F7575A66E936E936E996E936E996E6F6E9FC1C1A0FD0DFF
%4AFD09444BFD07FFA16F996F99999A999A99996F99999A99A04A44446F99
%BC9A9A6F999AC39ABCBCC39A996F996F996F996F996F9993A04A44444B75
%996F996F996F996F996F996F996F9999FD0EFF6F20FD0944A8FD06FF766F
%6E936E999ABC9AC299936E9A999A75FD0444A09A9A6E996FBC9ABC99C29A
%9A93936E996E936E996E936E99754A2044447575996E936E996E936E996E
%936E996E6FFD0EFFA0756E6FFD06442076FD06FFA16E996F999AC39AC29A
%C399999A9A9A9F446F444475C399996F99BCC39ABCBCC299BC6F996F996F
%996F996F996FA04A444A4475996F996F996F996F996F996F996F6F6FFD0F
%FFC8C8C1C16EFD05444AFD06FF766F6E999ABC9AC29ABC9ABC6FBC6FA075
%446E6F449F9ABC6F9999C29A9A99C39A9A99996E936E996E936E996F9975
%754A75449F75936E996E936E996E936E996E936E75FD0EFFCAC8C2C89FC7
%6E4420444444A1FD05FFA16E9999C39AC3BCC29AC39A9ABC9A9AA075A075
%9F99C3BCC39AC3BCC299C3BCBC999A99996F996F999999939A99A0759F75
%9975996F996F996F996F996F996F996F996FFD0FFFC8C8C1C8C1C86EFD04
%44A0FD05FFA06F6E999ABC9AC39A9A9ABC99C393BC6F446F75446F99C39A
%C29AC26F9A9AC399996E9A6F936E9993996E996F996F444A7520686E936E
%996E936E996E936E996E936E75FD0FFFC9C2C8C1C7C1C7FD0544FD05FFA1
%6F996F999AC29AC39AC3999ABC9A999A446F44446F99939A999A6FBCBCC3
%9A999999939A93996F9A99996F99999A444A444444996F996F996F996F99
%6F996F996F6F6FFD0FFFC9C8C2C7C1C8C79FFD0444A1FD04FFA06F6E936E
%99939A99BC9A9A6FC39A996E444444206F9A9A6F9999BC9AC39A936F996E
%996F996F6F6E9993936E996F44204444446E996E936E996E936E996E936E
%996E75FD0FFFC99FC8C1C19FC7C14A2044209AFD04FFCA6F996F996F996F
%99939A99999AC39A6FFD04446E999AC3BCC39AC299996F9A9999939A9999
%93996F996F9A9999FD05449993996F996F996F996F996F99936F76FD0FFF
%C9C8C8C8C1C8C1C875444475C2C9CAFFFFFF9A6E936E99939A999A99996F
%9999C36F444444206F6F936E996F996E996E936F9A6E93999993996F996F
%996F996FFD05446E996E936E996E936E996E936E9968A1FD0FFFCFC1C8C1
%C7C1C7C1C1446FC2C9C2C9FFFFFFCA9A6F9393C3BCC29AC3BCC2999A9A93
%FD044468996F936F996F936F996F939399999A6F999399939993999393FD
%0544996F996F996F996F996F996F936EA0FD10FFCFC8C1C8C1C8C1C8C1C7
%C1C8C2C8C2FD04FFA8A1769A75A09A9A75A09A9A9AA075756F756F75759A
%759A759A759A759A759A9AA0759A759A759A759A759A6F6F4A6F446F7599
%6F9975996F99759975A076A7FD12FFC8C89FC7C1C19FC7C1C79FC7C1C7
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps true put
userdict /_forceToCMYK true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\322\360\340\361\361\350\360\356\342\352\340) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\301\373\361\362\360\340\377 \347\340\353\350\342\352\340") (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe Envelope) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\317\345\360\345\365\356\344") (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (\310\355\361\362\360\363\354\345\355\362\340\360\350\351 Adobe \357\356 \360\340\341\356\362\345 \361 \361\350\354\342\356\353\340\354\350) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\323\347\356\360\367\340\362\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\316\341\372\345\352\362\355\340\377 \352\350\361\362\374") (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (\302\355\345\370\355\350\351 \354\356\344\363\353\374 Adobe "\312\340\353\353\350\343\360\340\364\350\367\345\361\352\340\377 \352\350\361\362\374") (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (\317\356\361\362\360\356\367\355\373\351 \352\356\354\357\356\355\356\342\371\350\352 Adobe) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (\321\356\361\362\340\342\355\373\345 \364\350\343\363\360\373 Adobe) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
12 Bn
%AI5_BeginGradient: (Unnamed gradient 17)
(Unnamed gradient 17) 0 6 Bd
[
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
[
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 18)
(Unnamed gradient 18) 1 6 Bd
[
<
00000000000000010101010101010101010101020202020202020202020202020303030303030303
03030303040404040404040404040404040505050505050505050505050606060606060606060606
06060707070707070707070707070708080808080808080808080809090909090909090909090909
0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D
0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F1010101010
10101010101010101111111111111111111111111212121212121212121212121213131313131313
131313131314141414141414141414
>
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7
F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4
F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1
F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEDEDED
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000
>
1 %_Br
<
1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B
3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
6465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA
>
<
000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C
0D0D0D0D0E0E0E0F0F0F101010111111121212131313131414141515151616161717171818181819
19191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525
262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F3030303131313232
3232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1
F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4
F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8
F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF
>
<
00000000010101010101010102020202020202030303030303030304040404040404050505050505
05050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F101010
10101010111111111111111112121212121212131313131313131314141414141414151515151515
15151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A
>
1 %_Br
<
DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5
D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1
D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCC
CCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7
C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3
>
<
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E
3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B
>
<
1A1A1A1A1A1A19191919191919191818181818181817171717171717171616161616161615151515
15151515141414141414141313131313131313121212121212121211111111111111101010101010
10100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A
0A0A0A0A0A0A0A090909090909090908080808080808070707070707070706060606060606050505
05050505050404040404040403030303030303030202020202020202010101010101010000
>
1 %_Br
<
C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCF
CFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDB
DBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7
E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4
F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
65666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4
B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDC
DDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A3939393939393939393939393939393838383838
38383838383838383837373737373737373737373737373736363636363636363636363636363635
35353535353535353535353535343434343434343434343434343434333333333333333333333333
33333332323232323232323232323232323131313131313131313131313131313030303030303030
3030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E
>
<
00010101010102020202030303030304040404050505050506060606060707070708080808080909
09090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F1010101010111111111212
12121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B
1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F202020202021212121222222222223232323
2424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B
>
1 %_Br
<
FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F
0E0D0C0B0A09080706050403020100
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFE
FEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFB
FBFBFBFBFBFBFBFBFBFBFBFBFBFBFB
>
<
2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D
2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C
2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B
2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A
2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A292929292929
29292929292929292929292929292929292929292929292929292929292929292929292929292929
292928282828282828282828282828
>
<
2B2B2B2B2A2A2A2A2A2A292929292929282828282827272727272726262626262625252525252524
24242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E
1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717
17171616161616161515151515151414141414131313131313121212121212111111111111101010
1010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909
09090909080808080808070707070707060606060606050505050505040404040404030303030303
020202020202010101010101000000
>
1 %_Br
[
0.000031 0.99472 1 0.001282 1 50 0 %_BS
%_0.000031 0.99472 1 0.001282 1 50 0 Bs
0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs
0.85388 0.242313 1 0.102846 1 50 40 %_BS
%_0.85388 0.242313 1 0.102846 1 50 40 Bs
0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS
%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs
0.997467 1 0.178775 0.168856 1 50 80 %_BS
%_0.997467 1 0.178775 0.168856 1 50 80 Bs
0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS
%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 20)
(Unnamed gradient 20) 0 2 Bd
[
<
0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020
212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F404142
4343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263
646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F808182838384
8586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6
A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C
3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A
5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F707071727373747576767778
79797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596
979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD
>
<
000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D
1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B
3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858
595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576
777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394
959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6
>
1 %_Br
[
0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 21)
(Unnamed gradient 21) 0 5 Bd
[
<
04050505050505050505050505060606060606060606060606070707070707070707070707070808
080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B
0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D
0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F
0F0F0F10101010101010101010101010101010101010101010111111111111111111111111111111
11111111111111111111111212121212121212121212121212121212121212121212121212121212
1212121212121212121213131313131313131313131313131313
>
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BF
BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D
9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E
7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A696868676766656564
64636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F
4F4E4E4E4D4D4C4C4B4B4B4A4A494949484848474746464645454544444443434343424242414141
41404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D
>
<
FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFD
FDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFA
FAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000
>
1 %_Br
<
14141414141414141414141313131313131313131313131313131212121212121212121212121212
11111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F
0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A09090909
09090909090909090909090808080808080808080808080808070707070707070707070707070707
060606060606060606060606060605050505050505050505050505050504
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5
>
<
EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0
F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3
F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7
F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFA
FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFD
FDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
>
1 %_Br
<
1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D
1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B
1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A191919191919191919
19191919191919191919191918181818181818181818181818181818181818181717171717171717
17171717171717171717171717161616161616161616161616161616161616161615151515151515
1515151515151515151515151515141414141414
>
<
848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C
6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554
545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C
3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524
232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C
0B0B0A0A09080807070605050404030202010100
>
<
131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F30313233343536373839
3A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061
62636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F80818283848586878889
8A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1
B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9
DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED
>
0.000031
1 %_Br
<
C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99
98979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A79787776757473727170
6F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A4948
47464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A29282726252423222120
1F
>
<
2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F40414142424343
44444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859
595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E
6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F80808181828383
84
>
<
424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636
363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A
2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F
1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A1919191818181817171716161615151515141414131313
13
>
0.000031
1 %_Br
[
0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS
%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs
0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS
%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs
0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS
%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs
0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS
%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs
0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS
%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 396)
(Unnamed gradient 396) 1 2 Bd
[
0.000031
0.000031
0.000031
0.000031
1 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs
0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 72)
(Unnamed gradient 72) 0 2 Bd
[
<
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD
CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECE
CECE
>
<
09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F2021222223242425
26272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F4040414242
4344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60
616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D
7E7F
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFA
FAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4
F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEF
EFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9
E9E9
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F50
5152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778
797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0
A1A2
>
1 %_Br
[
0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS
%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs
0.798978 0.033753 1 0.00119 1 50 0 %_BS
%_0.798978 0.033753 1 0.00119 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\707\740\752\740\762 \742 \757\763\761\762\773\755\745)
(\707\740\752\740\762 \742 \757\763\761\762\773\755\745) 0 6 Bd
[
<
38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455
555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D
6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F
7F7F80808080818181818282828282
>
<
5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B
7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B
9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1
B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5
>
<
2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B
3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646
464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E
4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F
>
0
1 %_Br
<
1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738
>
<
4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657
>
<
5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
>
0
1 %_Br
<
050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D
1E1E1F
>
<
2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F
3F3F40
>
<
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554
535252
>
0
1 %_Br
<
00000000000000000001010101010101010101010101010101010202020202020202020202020202
02020303030303030303030303030303030304040404040404040404040404040405050505050505
050505
>
<
7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B
>
<
9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E
8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C
7B7B7A
>
<
03030202020202020202020202020202020202020202020202020202020202020202020201010101
01010101010101010101010101010101010101010101010101010100000000000000000000000000
000000
>
1 %_Br
<
05050505050505050404040404040404040404030303030303030303030303020202020202020202
020202010101010101010101010101000000000000
>
<
91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382
828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
>
<
2928282726262524242322222121201F1F1E1D1D1C1B1B1A19191818171616151414131212111110
0F0F0E0D0D0C0B0B0A0A0908080706060504040303
>
1 %_Br
[
0.51 0.71 0.31 0 1 50 100 %_BS
%_0.51 0.71 0.31 0 1 50 100 Bs
0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS
%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs
0.12 0.25 0.32 0 1 50 53.6679 %_BS
%_0.12 0.25 0.32 0 1 50 53.6679 Bs
0.02 0.17 0.48 0 1 48 38.764 %_BS
%_0.02 0.17 0.48 0 1 48 38.764 Bs
0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS
%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs
0.02 0.57 0.86 0.16 1 50 0 %_BS
%_0.02 0.57 0.86 0.16 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\707\740\762\745\754\755\745\755\750\745)
(\707\740\762\745\754\755\745\755\750\745) 0 2 Bd
[
0
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 1 1 50 0 %_BS
%_0 0 0 1 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\713\750\755\745\751\755\773\751 \743\760\740\744\750\745\755\762)
(\713\750\755\745\751\755\773\751 \743\760\740\744\750\745\755\762) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\714\745\744\755\773\751 \760\740\744\750\740\753\774\755\773\751)
(\714\745\744\755\773\751 \760\740\744\750\740\753\774\755\773\751) 1 4 Bd
[
0
<
0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F20202122222324
24252627272829292A2B2B2C2D2D2E2F2F303131323333343536
>
<
242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F40414243444546474849
4A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
>
<
0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A
1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B
>
1 %_Br
<
00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F101111121213131415151616
17181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E
2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647
474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959
>
<
3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556
565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778
797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B
9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5
>
<
636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788
898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030
30303030303131313131313131323232323232323232333333333333333334343434343434343535
3535353535353536363636363636363737373737373737383838383838383839393939393939393A
3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D
>
1 %_Br
<
595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363
636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D
6D6E
>
<
B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECF
CFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9
EAEB
>
<
F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEB
EBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1
E1E0
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D
8E8F
>
1 %_Br
[
0 0.04 0.14 0 1 51.0204 0.395812 %_BS
%_0 0.04 0.14 0 1 51.0204 0.395812 Bs
0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS
%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs
0.35 0.71 0.96 0.24 1 50 78.0899 %_BS
%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs
0.43 0.92 0.88 0.56 1 50 100 %_BS
%_0.43 0.92 0.88 0.56 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\714\777\743\752\756\745 \767\745\760\755\756\745 \742\750\755\774\745\762\750\760\756\742\740\755\750\745)
(\714\777\743\752\756\745 \767\745\760\755\756\745 \742\750\755\774\745\762\750\760\756\742\740\755\750\745) 1 3 Bd
[
0.2
0.2
0.2
1
1 %_Br
0.2
0.2
0.2
1
1 %_Br
[
0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS
%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs
0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS
%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs
0.2 0.2 0.2 1 1 50 100 %_BS
%_0.2 0.2 0.2 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\720\740\744\750\740\753\774\755\773\751 \743\760\740\744\750\745\755\762)
(\720\740\744\750\740\753\774\755\773\751 \743\760\740\744\750\745\755\762) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (\723\747\756\760 "\720\773\741\740")
(\723\747\756\760 "\720\773\741\740") 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3609.5 5026.7554 m
-3395.8999 5026.7554 L
-3395.8999 5018.9546 L
-3609.5 5018.9546 L
-3609.5 5026.7554 L
n
0 O
0 0 0 1 k
-3609.5 5022.8555 m
-3599.4856 5025.3472 -3592.6863 5026.6953 -3580.7007 5026.7554 c
-3567.7185 5026.8203 -3502.6997 5026.7554 y
-3437.6816 5026.8203 -3424.6997 5026.7554 v
-3412.7124 5026.6953 -3405.9136 5025.3472 -3395.8999 5022.8555 C
-3405.9136 5020.3638 -3412.7124 5019.0156 -3424.6997 5018.9546 c
-3437.6816 5018.8892 -3502.6997 5018.9546 y
-3567.7185 5018.8892 -3580.7007 5018.9546 v
-3592.6863 5019.0156 -3599.4856 5020.3638 -3609.5 5022.8555 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7482 8899.3203 m
-7384.2451 8899.3203 L
-7384.2451 8878.6045 L
-7482 8878.6045 L
-7482 8899.3203 L
n
0 O
0 g
1 XR
-7384.5586 8894.6387 m
-7399.8247 8880.8506 -7417.5537 8901.7695 -7432.9277 8889.4863 C
-7431.4199 8883.834 -7425.7598 8890.7881 -7423.5176 8886.1416 C
-7423.4341 8884.541 -7426.6313 8886.041 -7426.5127 8883.9209 C
-7424.6245 8880.5117 -7419.8955 8881.0088 -7418.5664 8885.0576 C
-7412.3115 8883.0879 -7405.7734 8877.1445 -7399.7847 8878.9375 C
-7398.2671 8880.2881 -7399.0708 8881.4717 -7398.6211 8882.748 C
-7391.2871 8878.3125 -7382.4644 8887.4482 -7384.5586 8894.6387 C
f
-7428.2842 8896.2529 m
-7428.8247 8896.6289 -7427.9277 8897.7402 -7428.2529 8898.2285 C
-7430.3237 8897.4766 -7432.6919 8893.3984 -7434.4731 8890.6309 C
-7434.2632 8892.1602 -7435.6641 8893.4844 -7437.0781 8891.2529 C
-7437.2383 8890.4355 -7436.3667 8890.1484 -7436.6729 8889.2568 C
-7437.8306 8887.6885 -7438.8472 8889.1738 -7439.7798 8888.9453 C
-7440.3184 8888.1816 -7440.6143 8887.5391 -7440.6816 8887.0146 C
-7434.5537 8884.1943 -7427.9263 8895.9971 -7421.7456 8896.4229 C
-7421.9048 8899.4355 -7425.8555 8901.1211 -7428.2842 8896.2529 C
f
u
u
0 XR
-7425.1602 8890.9805 m
-7440.0142 8884.4404 -7461.4731 8888.6621 -7477.3687 8888.6396 c
-7483.2988 8888.6328 -7472.8965 8888.6416 -7478.8267 8888.6465 c
N
0 O
0 g
-7422.8052 8889.7598 m
-7440.1475 8882.584 -7459.9341 8887.376 -7478.0532 8887.3066 C
-7478.8608 8888.1934 -7479.6685 8889.082 -7480.4751 8889.9678 C
-7479.6973 8889.9678 -7478.9194 8889.9668 -7478.1421 8889.9736 C
-7477.3345 8889.0859 -7476.5273 8888.1992 -7475.7202 8887.3125 C
-7476.3516 8887.3223 -7476.9844 8887.3154 -7477.6157 8887.3154 c
-7479.3735 8887.3184 -7483.9165 8889.9824 -7480.0376 8889.9775 c
-7479.4063 8889.9775 -7478.7734 8889.9844 -7478.1421 8889.9736 c
-7476.4155 8889.9463 -7471.8184 8887.3438 -7475.7202 8887.3125 c
-7476.4976 8887.3037 -7477.2759 8887.3066 -7478.0532 8887.3066 c
-7479.8081 8887.3057 -7484.3574 8889.9531 -7480.4751 8889.9678 c
-7463.1177 8890.0352 -7444.1025 8885.334 -7427.5151 8892.1992 c
-7426.1035 8892.7842 -7420.8081 8890.5869 -7422.8052 8889.7598 c
-7422.8052 8889.7598 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 158)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7482 8899.3203 m
-7470.0078 8899.3203 L
-7470.0078 8888.6836 L
-7482 8888.6836 L
-7482 8899.3203 L
n
-7481.3218 8888.6836 m
-7481.3218 8892.6328 L
-7481.3218 8893.668 L
-7481.3218 8894.3066 L
-7481.3218 8895.4053 L
-7481.3218 8899.3203 L
-7470.6865 8899.3203 L
-7470.6865 8895.4053 L
-7470.6865 8894.3066 L
-7470.6865 8893.668 L
-7470.6865 8892.6328 L
-7470.6865 8888.6836 L
-7481.3218 8888.6836 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-7470.0078 8895.4053 m
-7470.0078 8894.7598 L
-7482 8894.7617 L
-7482 8895.4053 L
-7482 8895.4707 L
-7470.0078 8895.4697 L
-7470.0078 8895.4053 L
f
-7470.0078 8892.6328 m
-7482 8892.6328 L
-7482 8893.3418 L
-7470.0078 8893.3418 L
-7470.0078 8892.6328 L
f
0.15 1 0.9 0.1 k
-7470.0078 8894.3721 m
-7482 8894.3721 L
-7482 8894.7617 L
-7470.0078 8894.7598 L
-7470.0078 8894.3721 L
f
-7470.0078 8893.668 m
-7470.0078 8893.3418 L
-7482 8893.3418 L
-7482 8893.668 L
-7482 8893.7324 L
-7470.0078 8893.7324 L
-7470.0078 8893.668 L
f
0 1 1 0 k
-7470.0078 8894.3066 m
-7470.0078 8893.7324 L
-7482 8893.7324 L
-7482 8894.3066 L
-7482 8894.3721 L
-7470.0078 8894.3721 L
-7470.0078 8894.3066 L
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 160)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7482 8898.125 m
-7471.3638 8898.125 L
-7471.3638 8887.4883 L
-7482 8887.4883 L
-7482 8898.125 L
n
-7482 8887.4883 m
-7482 8891.3789 L
-7482 8892.0889 L
-7482 8892.4717 L
-7482 8893.1133 L
-7482 8893.502 L
-7482 8894.2109 L
-7482 8898.125 L
-7471.3638 8898.125 L
-7471.3638 8887.4883 L
-7482 8887.4883 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-7475.9585 8899.3203 m
-7475.2515 8899.3203 L
-7475.2607 8894.2764 L
-7469.5229 8894.2754 L
-7469.5229 8893.5645 L
-7475.9707 8893.5674 L
-7475.9585 8899.3203 L
f
-7477.6055 8891.8545 m
-7477.8696 8892.1172 -7478.0215 8892.4834 -7478.0215 8892.8564 C
-7478.0073 8899.3203 L
-7477.2979 8899.3203 L
-7477.3125 8892.8564 L
-7477.3125 8892.6699 -7477.2363 8892.4883 -7477.1045 8892.3555 c
-7476.9717 8892.2236 -7476.7891 8892.1484 -7476.6021 8892.1484 C
-7469.5229 8892.1484 L
-7469.5229 8891.4385 L
-7476.6021 8891.4385 L
-7476.9761 8891.4385 -7477.3418 8891.5898 -7477.6055 8891.8545 c
f
0.15 1 0.9 0.1 k
-7476.2827 8899.3203 m
-7475.9585 8899.3203 L
-7475.9707 8893.5674 L
-7469.5229 8893.5645 L
-7469.5229 8893.1758 L
-7476.2827 8893.1758 L
-7476.2827 8899.3203 L
f
-7477.1045 8892.3555 m
-7477.2363 8892.4883 -7477.3125 8892.6699 -7477.3125 8892.8564 C
-7477.2979 8899.3203 L
-7476.9219 8899.3203 L
-7476.9219 8892.8564 L
-7476.9219 8892.7725 -7476.8877 8892.6914 -7476.8281 8892.6309 c
-7476.7695 8892.5723 -7476.6865 8892.5391 -7476.6025 8892.5391 C
-7469.5229 8892.5391 L
-7469.5229 8892.1484 L
-7476.6021 8892.1484 L
-7476.7891 8892.1484 -7476.9717 8892.2236 -7477.1045 8892.3555 c
f
0 1 1 0 k
-7476.8281 8892.6309 m
-7476.8877 8892.6914 -7476.9219 8892.7725 -7476.9219 8892.8564 C
-7476.9219 8899.3203 L
-7476.2827 8899.3203 L
-7476.2827 8893.1758 L
-7469.5229 8893.1758 L
-7469.5229 8892.5391 L
-7476.6025 8892.5391 L
-7476.6865 8892.5391 -7476.7695 8892.5723 -7476.8281 8892.6309 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 161)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7482 8899.3203 m
-7470.0078 8899.3203 L
-7470.0078 8888.6836 L
-7482 8888.6836 L
-7482 8899.3203 L
n
-7481.0117 8888.6836 m
-7481.0117 8892.6328 L
-7481.0117 8893.668 L
-7481.0117 8894.3066 L
-7481.0117 8895.4053 L
-7481.0117 8899.3203 L
-7470.3765 8899.3203 L
-7470.3765 8895.4053 L
-7470.3765 8894.3066 L
-7470.3765 8893.668 L
-7470.3765 8892.6328 L
-7470.3765 8888.6836 L
-7481.0117 8888.6836 L
n
0 O
0.15 1 0.9 0.1 k
-7470.0078 8894.3721 m
-7482 8894.3721 L
-7482 8894.7617 L
-7470.0078 8894.7598 L
-7470.0078 8894.3721 L
f
-7470.0078 8893.668 m
-7470.0078 8893.3418 L
-7482 8893.3418 L
-7482 8893.668 L
-7482 8893.7324 L
-7470.0078 8893.7324 L
-7470.0078 8893.668 L
f
0 1 1 0 k
-7470.0078 8894.3066 m
-7470.0078 8893.7324 L
-7482 8893.7324 L
-7482 8894.3066 L
-7482 8894.3721 L
-7470.0078 8894.3721 L
-7470.0078 8894.3066 L
f
1 Ap
0.746094 0.675781 0.667969 0.898438 k
-7480.2715 8895.4707 m
-7482 8895.4707 L
-7482 8892.6328 L
-7480.2715 8892.6328 L
-7480.2715 8895.4707 L
f
0.15 1 0.9 0.1 k
-7479.5967 8895.4541 m
-7480.4492 8895.4541 L
-7480.4492 8892.6172 L
-7479.5967 8892.6172 L
-7479.5967 8895.4541 L
f
0 Ap
0.746094 0.675781 0.667969 0.898438 k
-7470.0078 8895.4053 m
-7470.0078 8894.7598 L
-7482 8894.7617 L
-7482 8895.4053 L
-7482 8895.4707 L
-7470.0078 8895.4697 L
-7470.0078 8895.4053 L
f
-7470.0078 8892.6328 m
-7482 8892.6328 L
-7482 8893.3418 L
-7470.0078 8893.3418 L
-7470.0078 8892.6328 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 162)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7482 8899.3203 m
-7470.6099 8899.3203 L
-7470.6099 8888.6836 L
-7482 8888.6836 L
-7482 8899.3203 L
n
-7481.2461 8895.4053 m
-7481.2461 8899.3203 L
-7470.6099 8899.3203 L
-7470.6099 8888.6836 L
-7481.2461 8888.6836 L
-7481.2461 8892.5752 L
-7481.2461 8895.4053 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-7475.6245 8895.3418 m
-7475.6245 8894.6973 L
-7482 8894.6973 L
-7482 8895.3418 L
-7482 8895.4053 L
-7475.6245 8895.4053 L
-7475.6245 8895.3418 L
f
-7475.6245 8892.5684 m
-7482 8892.5684 L
-7482 8893.2783 L
-7475.6245 8893.2783 L
-7475.6245 8892.5684 L
f
0.15 1 0.9 0.1 k
-7475.6245 8894.3066 m
-7482 8894.3066 L
-7482 8894.6973 L
-7475.6245 8894.6973 L
-7475.6245 8894.3066 L
f
-7475.6245 8893.6035 m
-7475.6245 8893.2783 L
-7482 8893.2783 L
-7482 8893.6035 L
-7482 8893.6689 L
-7475.6245 8893.6689 L
-7475.6245 8893.6035 L
f
0 1 1 0 k
-7475.6245 8894.2412 m
-7475.6245 8893.6689 L
-7482 8893.6689 L
-7482 8894.2412 L
-7482 8894.3066 L
-7475.6245 8894.3066 L
-7475.6245 8894.2412 L
f
U
-7481.2461 8899.3203 m
-7470.6099 8899.3203 L
-7470.6099 8888.6836 L
-7481.2461 8888.6836 L
-7481.2461 8899.3203 L
n
-7470.7241 8894.002 m
-7478.8125 8898.6719 L
N
0 O
0.746094 0.675781 0.667969 0.898438 k
-7478.4814 8893.2803 m
-7478.4814 8890.4609 L
-7472.3535 8893.998 L
-7478.4814 8897.5361 L
-7478.4814 8894.6973 L
-7478.8125 8894.6973 L
-7478.8125 8895.4053 L
-7478.8125 8898.6719 L
-7470.7241 8894.002 L
-7478.8125 8889.333 L
-7478.8125 8892.5713 L
-7478.8125 8893.2803 L
-7478.4814 8893.2803 L
f
0.15 1 0.9 0.1 k
-7478.4814 8897.5361 m
-7472.3535 8893.998 L
-7478.4814 8890.4609 L
-7478.4814 8893.2803 L
-7478.4814 8893.668 L
-7478.3472 8893.668 L
-7478.2148 8893.2959 -7477.8633 8893.0273 -7477.4453 8893.0273 c
-7476.9155 8893.0273 -7476.4849 8893.457 -7476.4849 8893.9873 c
-7476.4849 8894.5176 -7476.9155 8894.9473 -7477.4453 8894.9473 c
-7477.8633 8894.9473 -7478.2148 8894.6797 -7478.3472 8894.3066 C
-7478.4814 8894.3066 L
-7478.4814 8894.6973 L
-7478.4814 8897.5361 L
f
0 1 1 0 k
-7477.4453 8894.9473 m
-7476.9155 8894.9473 -7476.4849 8894.5176 -7476.4849 8893.9873 c
-7476.4849 8893.457 -7476.9155 8893.0273 -7477.4453 8893.0273 c
-7477.8633 8893.0273 -7478.2148 8893.2959 -7478.3472 8893.668 c
-7478.3828 8893.7676 -7478.4058 8893.874 -7478.4058 8893.9873 c
-7478.4058 8894.0996 -7478.3828 8894.2051 -7478.3472 8894.3066 c
-7478.2148 8894.6797 -7477.8633 8894.9473 -7477.4453 8894.9473 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7481.8833 8899.2754 m
-7390.0479 8899.2754 L
-7390.0479 8894.9961 L
-7481.8833 8894.9961 L
-7481.8833 8899.2754 L
n
0 O
0 0 0 1 k
-7481.6631 8896.5957 m
-7482 8896.6621 -7481.4814 8896.8516 -7481.8833 8896.709 C
-7481.8379 8896.5908 -7481.7725 8896.502 -7481.6631 8896.5957 C
f
-7391.1675 8896.7617 m
-7392.2524 8897.5244 -7393.6816 8896.7539 -7394.8701 8897.2402 C
-7395.0098 8897.2725 -7394.8345 8896.8223 -7395.1484 8896.9229 C
-7396.3008 8897.5156 -7398.1162 8897.1621 -7399.5195 8896.7051 C
-7399.4346 8896.5869 L
-7399.7017 8896.502 -7400.0283 8896.8926 -7400.3115 8896.8379 C
-7400.3135 8896.7598 -7400.2207 8896.7266 -7400.2861 8896.6191 C
-7400.3574 8896.8555 -7400.7983 8896.7285 -7400.9185 8896.9043 C
-7401.0303 8896.8125 -7401.0195 8896.625 -7401.1641 8896.5215 C
-7401.3262 8896.79 L
-7401.7769 8897.4297 -7402.4209 8896.7461 -7403.0361 8897.0762 C
-7403.0063 8897.0137 -7402.9453 8896.9648 -7402.9941 8896.9043 C
-7403.9814 8897.293 -7405.2168 8897.2207 -7406.3208 8897.3633 C
-7406.2769 8897.2686 -7406.2363 8897.0957 -7406.3008 8896.9883 C
-7406.3555 8897.2715 -7406.6963 8897.3428 -7406.9922 8897.3984 C
-7407.1255 8897.1074 -7407.4995 8897.6641 -7407.8467 8897.5039 C
-7407.8169 8897.4395 L
-7408.0732 8897.7441 -7408.1973 8897.2637 -7408.4053 8897.6289 C
-7408.5684 8897.4004 L
-7408.6807 8897.8105 -7408.9395 8897.1875 -7409.1514 8897.3965 C
-7409.1445 8897.4805 L
-7409.3442 8897.5801 -7409.4482 8897.374 -7409.6338 8897.4434 C
-7409.6514 8897.3965 L
-7410.0854 8897.5039 -7410.3379 8897.2754 -7410.3271 8897.5957 C
-7410.4795 8897.3389 -7409.9063 8897.4785 -7410.1455 8897.1055 C
-7411.5732 8897.4355 -7413.0459 8897.3711 -7414.4834 8897.377 C
-7414.6465 8897.248 -7414.7505 8897.209 -7414.7871 8897.0879 C
-7414.9307 8897.1523 -7415.3281 8897.1465 -7415.4585 8897.3105 C
-7415.4102 8897.3037 -7415.5513 8897.1465 -7415.6274 8897.1309 C
-7415.8887 8897.0098 -7415.9131 8897.4824 -7416.2002 8897.3389 C
-7416.0859 8897.2539 -7416.0469 8897.1504 -7416.0854 8897.0313 C
-7416.3301 8897.2813 -7416.6577 8897.2412 -7416.9473 8897.3223 C
-7416.9023 8897.2686 -7416.8325 8897.2363 -7416.8433 8897.1357 C
-7417.1602 8897.4189 -7417.4209 8897.0762 -7417.6982 8897.2549 C
-7417.5947 8897.0703 L
-7418.0415 8896.8457 -7417.7266 8897.457 -7418.1128 8897.3242 C
-7418.02 8897.2656 -7418.0527 8897.1934 -7418.0361 8897.1182 C
-7418.3965 8897.4541 -7418.9795 8897.3428 -7419.3389 8897.457 C
-7419.3174 8897.4316 -7419.3232 8897.3809 Y
-7419.7148 8897.4229 -7420.1245 8897.3184 -7420.5552 8897.4648 C
-7420.7119 8897.3828 -7420.5039 8897.0137 -7420.9185 8897.082 C
-7420.9033 8897.4531 -7421.6221 8897.2344 -7421.3779 8897.6543 C
-7421.7319 8897.5938 -7422.2925 8897.4541 -7422.5283 8897.5801 C
-7422.3691 8897.4395 -7422.7007 8897.127 -7422.4063 8897.0957 C
-7422.6289 8896.8701 L
-7422.5957 8896.7188 -7422.3999 8896.9219 -7422.4707 8896.7305 C
-7422.6182 8896.7461 -7423.0479 8896.8926 -7423.1797 8896.832 C
-7423.4531 8897.0596 -7423.7041 8897.4844 -7424.1465 8897.5313 C
-7423.9385 8897.3867 -7424.2646 8897.1221 -7424.1235 8897.0586 C
-7424.7407 8897.7695 L
-7424.8877 8897.7871 -7424.7725 8897.4766 -7424.9854 8897.5732 C
-7424.9746 8897.6719 -7425.0674 8897.7324 -7425.1318 8897.8125 C
-7425.1875 8897.7695 -7425.7441 8897.9043 -7425.8081 8897.5391 C
-7425.8735 8897.3965 -7425.5684 8897.4629 -7425.7314 8897.332 C
-7426.0029 8897.3359 -7426.0151 8897.4609 -7426.2871 8897.4668 C
-7426.2925 8897.418 L
-7426.4717 8897.3633 -7426.8213 8897.5732 -7426.6265 8897.7754 C
-7426.5015 8897.7871 -7426.6738 8897.5557 -7426.4888 8897.6621 C
-7426.6152 8897.874 -7426.9312 8897.9336 -7427.2031 8897.9375 C
-7427.1104 8897.8789 -7427.1216 8897.7813 -7427.0845 8897.6777 C
-7427.4497 8897.9648 -7427.8369 8898.0557 -7428.2451 8898.1758 C
-7428.2515 8898.3496 -7428.0928 8897.8594 -7428.0327 8897.9512 C
-7428.5557 8897.71 -7429.1128 8898.293 -7429.5479 8897.9404 C
-7429.4766 8897.9102 -7429.5098 8898.1875 -7429.5146 8898.1387 C
-7429.7666 8898.1172 -7429.7549 8897.8652 -7429.9189 8897.958 C
-7429.9355 8897.8105 -7430.1255 8898.0059 -7430.2944 8898.0508 C
-7430.3818 8898.1572 -7430.3384 8897.9785 -7430.1914 8897.9629 C
-7430.4268 8898.0879 -7431.3691 8898.3145 -7431.9131 8898.0996 C
-7431.9023 8898.1973 -7432.2471 8898.458 -7432.3721 8898.4473 C
-7432.3232 8898.2188 L
-7432.4375 8898.082 -7432.7422 8898.2383 -7432.7632 8898.043 C
-7433.0303 8898.3203 -7431.7344 8897.8066 -7432.0957 8898.0205 C
-7432.1895 8897.8301 -7432.5991 8898.3848 -7432.5215 8898.0732 C
-7432.7725 8898.082 -7433.0161 8898.3389 -7433.2559 8898.125 C
-7433.1865 8898.1621 -7433.0522 8897.8076 -7433.2549 8897.8242 C
-7433.6123 8897.8652 -7433.3564 8897.9336 -7433.6465 8898.0098 C
-7433.8281 8898.1035 L
-7433.8398 8898.3262 -7434.1475 8898.0732 -7434.0146 8898.3223 C
-7434.0586 8898.1387 -7434.5337 8898.4355 -7434.4971 8898.0664 C
-7434.4473 8897.7754 L
-7434.6016 8897.7969 -7434.7002 8898.082 -7434.8213 8898.21 C
-7434.8418 8898.1836 -7434.8823 8898.125 -7434.8745 8898.0781 C
-7434.8994 8898.5234 -7435.2432 8898.041 -7435.4268 8898.3848 C
-7435.7505 8898.2305 -7436.2495 8898.3711 -7436.4023 8898.0938 C
-7436.6514 8898.2285 -7436.8784 8898.3887 -7437.1621 8898.293 C
-7437.1055 8898.251 -7437.0283 8898.2383 -7437.0122 8898.1426 C
-7437.1904 8898.0117 -7437.2344 8898.1289 -7437.3975 8898.2012 C
-7437.3608 8898.1348 -7437.7539 8897.9404 -7437.9521 8897.7832 C
-7438.1992 8897.916 -7438.1143 8898.1563 -7438.1392 8898.3027 C
-7438.3652 8897.8633 -7438.8379 8898.5859 -7439.1211 8898.1875 C
-7439.0352 8898.127 -7438.7598 8897.9717 -7438.9658 8897.8613 C
-7439.1919 8897.4229 -7439.4219 8898.1855 -7439.7861 8897.9746 C
-7439.6968 8898.3389 L
-7439.8594 8898.1133 -7440.2334 8898.5508 -7440.1963 8898.1797 C
-7440.3184 8898.3105 -7440.6265 8898.0586 -7440.5859 8898.4141 C
-7441.1846 8898.1133 -7442.0425 8898.5957 -7442.4102 8897.958 C
-7442.4961 8898.0176 -7442.7104 8897.957 -7442.6665 8898.1396 C
-7442.5239 8898.3379 -7442.4673 8897.998 -7442.4141 8898.1328 C
-7442.4912 8898.1436 -7442.5078 8898.2412 -7442.5161 8898.29 C
-7442.7021 8898.209 -7442.8486 8898.1836 -7442.6729 8897.8877 C
-7443.0869 8897.668 -7443.1001 8898.4922 -7443.6274 8898.3535 C
-7443.6035 8898.2061 -7443.6436 8898.1504 -7443.7979 8898.1738 C
-7444.0903 8898.4258 L
-7444.4312 8898.3672 -7444.2842 8898.0908 -7444.2925 8897.8418 C
-7444.4746 8897.8848 -7444.6973 8897.873 -7444.7803 8898.0586 C
-7445.0015 8897.7461 L
-7444.8398 8897.9717 -7445.1514 8897.8965 -7445.2368 8897.957 C
-7445.1514 8897.8965 L
-7445.1846 8897.79 -7445.3955 8897.8555 -7445.5024 8897.8867 C
-7445.4766 8898.041 -7445.2617 8898.1035 -7445.1445 8898.1484 C
-7445.2373 8898.2578 -7445.3823 8898.2324 -7445.5059 8898.3613 C
-7445.4648 8898.1172 -7445.8027 8898.1875 -7445.9473 8898.1621 C
-7446.1133 8898.1094 -7446.1348 8898.3809 -7446.1831 8898.373 C
-7446.1875 8898.2461 -7446.4541 8898.3516 -7446.3247 8898.1738 C
-7446.2681 8898.1328 -7446.1953 8898.2969 -7446.1016 8898.1855 C
-7446.2109 8898.0908 -7446.1982 8897.8701 -7446.4258 8898.0313 C
-7446.5967 8898.1523 -7446.3818 8898.5137 -7446.7061 8898.3594 C
-7446.6211 8898.2988 -7446.6055 8898.2012 -7446.5391 8898.1133 C
-7446.8433 8897.9863 L
-7446.8564 8898.209 L
-7446.8975 8898.1523 -7446.8691 8898.1328 -7446.8877 8898.1035 C
-7446.9785 8898.3379 -7447.3521 8898.1758 -7447.4209 8898.4395 C
-7447.5742 8898.4629 -7447.7441 8898.2852 -7447.8906 8898.2598 C
-7447.8623 8898.2402 L
-7448.0415 8898.1094 -7448.2793 8898.1953 -7448.4297 8898.3457 C
-7448.4219 8898.2969 L
-7448.5195 8898.2793 -7448.7505 8898.3145 -7448.8735 8898.4453 C
-7449.1201 8898.2773 -7448.9561 8897.6045 -7449.2295 8897.8848 C
-7449.48 8897.8926 -7449.6221 8898.293 -7449.5215 8898.4355 C
-7449.9717 8898.2852 -7450.4834 8898.6484 -7450.9009 8898.3027 C
-7450.9658 8898.3926 -7450.9248 8898.4492 -7451.0586 8898.502 C
-7451.7197 8898.4141 -7452.4551 8898.7656 -7452.9814 8898.3281 C
-7452.79 8898.2344 -7452.9688 8898.1055 -7452.9727 8897.9785 C
-7453.1309 8898.1777 -7453.1631 8897.7715 -7453.2197 8898.1133 C
-7453.2041 8898.3145 -7453.2197 8898.4121 -7453.0337 8898.4932 C
-7453.4282 8898.6016 -7454.0283 8898.6016 -7454.2471 8898.4141 C
-7454.1377 8898.5068 -7454.2227 8898.5684 -7454.3086 8898.6289 C
-7454.2803 8898.3076 -7454.5713 8898.2598 -7454.7915 8898.373 C
-7454.8223 8898.5684 L
-7454.9658 8898.3672 L
-7455.0503 8898.4297 -7455.0591 8898.7773 -7455.2773 8898.5898 C
-7455.2891 8898.5137 -7455.3018 8898.4365 -7455.3418 8898.3809 C
-7455.5693 8898.541 -7455.8906 8898.8125 -7456.1377 8898.6465 C
-7456.3398 8898.3613 L
-7456.4453 8898.3926 -7456.6235 8898.5645 -7456.4375 8898.6465 C
-7456.8594 8898.4746 -7457.1309 8898.4531 -7457.2646 8898.2061 C
-7457.9912 8898.8076 -7459.0459 8898.832 -7459.8906 8898.7891 C
-7459.8652 8898.6426 L
-7460.0923 8898.5059 -7459.9834 8898.8984 -7460.1416 8898.7969 C
-7460.0684 8898.6572 -7460.3145 8898.4932 -7460.1362 8898.3223 C
-7460.4609 8898.168 -7460.5547 8898.5762 -7460.7656 8898.6426 C
-7460.7979 8898.835 -7460.5957 8898.5195 -7460.6367 8898.7637 C
-7460.6729 8898.832 -7461.0859 8898.6133 -7461.1362 8898.9043 C
-7461.2178 8898.79 -7461.1543 8898.5762 -7461.1104 8898.458 C
-7461.3086 8898.5996 L
-7461.5513 8898.2598 -7460.7559 8897.9922 -7461.0107 8897.5732 C
-7461.1934 8897.6191 L
-7461.3682 8897.3145 -7460.71 8897.2754 -7461.1689 8897.1709 C
-7461.3682 8897.3145 -7461.5381 8897.7363 -7461.3608 8897.8652 C
-7461.7754 8897.9453 -7461.5527 8898.5586 -7461.9985 8898.5342 C
-7462.1201 8898.3633 -7461.6416 8898.4932 -7461.7275 8898.2539 C
-7461.9375 8898.0195 -7462.1484 8898.3848 -7462.3354 8898.3027 C
-7462.1279 8898.4121 -7462.3032 8898.7061 -7462.4375 8898.7598 C
-7462.6641 8898.6221 -7462.29 8898.4844 -7462.6113 8898.4541 C
-7462.6641 8898.6221 -7462.9595 8898.748 -7462.7041 8898.8652 C
-7462.8203 8899.2461 -7463.0381 8898.7598 -7463.2129 8899.0547 C
-7463.3174 8898.7871 -7462.8823 8898.4355 -7463.2354 8898.3018 C
-7463.1792 8898.5596 -7463.6704 8898.6523 -7463.4839 8899.0352 C
-7463.6221 8898.9609 -7463.6367 8898.7578 -7463.5361 8898.5996 C
-7463.7334 8898.4404 -7464.0151 8899.0703 -7464.0801 8898.5586 C
-7464.1479 8898.8223 L
-7464.21 8898.7363 -7464.2983 8898.6719 -7464.3994 8898.5293 C
-7464.5732 8898.5244 -7464.96 8898.8867 -7464.9443 8898.4883 C
-7465 8898.5293 -7465.3975 8898.5117 -7465.2441 8898.7871 C
-7464.9971 8898.9551 -7464.96 8898.5859 -7464.8223 8898.958 C
-7464.9971 8898.6543 -7465.1787 8898.998 -7465.3213 8899.0996 C
-7465.3447 8898.9453 L
-7465.4297 8899.0059 -7465.6255 8898.9717 -7465.6787 8899.1387 C
-7465.6133 8899.0508 -7465.6475 8898.9453 -7465.7148 8898.9082 C
-7465.8042 8899.1426 L
-7466.1494 8899.2598 -7465.8857 8898.7305 -7466.2217 8898.7988 C
-7465.9663 8898.6172 L
-7466.0225 8898.6563 -7466.1367 8898.4365 -7466.2979 8898.5098 C
-7466.3604 8898.7236 -7466.4775 8898.9805 -7466.5313 8899.1465 C
-7466.7207 8899.2402 -7466.6162 8898.9053 -7466.8027 8899.125 C
-7466.5586 8898.8672 L
-7466.5215 8898.7969 -7466.7231 8898.5137 -7466.9761 8898.5195 C
-7467.1377 8898.5938 -7467.3887 8898.9023 -7467.1338 8899.0195 C
-7467.2607 8899.0234 -7467.4385 8898.8926 -7467.3379 8898.7363 C
-7467.6255 8898.8105 -7467.2998 8898.9668 -7467.5479 8899.0996 C
-7467.6494 8898.957 -7467.9658 8898.7539 -7468.1563 8898.5469 C
-7467.8975 8898.1885 L
-7468.0693 8898.1855 L
-7467.8467 8897.8984 -7468.1826 8897.9668 -7468.0566 8897.6641 C
-7468.1743 8897.6172 -7468.3169 8897.7197 -7468.4307 8897.7988 C
-7468.0864 8898.2832 -7468.8159 8898.4609 -7468.7158 8898.9023 C
-7469.1875 8899.0234 -7469.0107 8897.8281 -7469.5024 8898.5195 C
-7469.4219 8898.6348 -7469.6533 8898.9707 -7469.3564 8898.8428 C
-7469.6494 8898.7949 -7469.5557 8899.2861 -7469.9014 8899.1035 C
-7469.6455 8898.9219 -7470.1763 8898.6563 -7469.8066 8898.3926 C
-7469.8311 8898.5391 -7469.6001 8898.5039 -7469.5435 8898.4629 C
-7469.6641 8898.293 -7469.5186 8898.0176 -7469.8184 8898.0176 C
-7470.0015 8898.0596 -7470.2524 8898.0684 -7470.2158 8898.2988 C
-7470.2085 8898.5518 -7469.9365 8898.2715 -7470.0537 8898.5273 C
-7470.4185 8898.6152 -7470.4795 8898.2305 -7470.6304 8898.6797 C
-7470.3999 8898.6436 -7470.3423 8898.9043 -7470.3467 8899.0781 C
-7470.6143 8899.1836 L
-7470.5625 8899.0156 L
-7470.9922 8898.8945 -7470.6895 8899.3203 -7471.1055 8899.2754 C
-7471.3008 8898.9434 L
-7471.2017 8898.6572 -7470.6953 8899.0703 -7470.7695 8898.6045 C
-7471.04 8898.5859 -7471.1299 8898.8223 -7471.3848 8898.7021 C
-7471.3281 8898.6621 -7471.2505 8898.6504 -7471.1943 8898.6094 C
-7471.2915 8898.5938 -7471.3877 8897.9766 -7471.7734 8898.3379 C
-7471.9727 8898.4785 -7471.8262 8898.5039 -7471.8311 8898.6777 C
-7472.2656 8898.7305 -7472.3955 8898.9082 -7472.6753 8898.9355 C
-7472.6177 8898.5957 -7473.1699 8898.9023 -7472.8608 8898.5547 C
-7472.7188 8898.7539 -7472.0903 8898.7344 -7471.9365 8898.4102 C
-7472.0947 8898.0068 -7471.5952 8898.4668 -7471.5024 8898.0586 C
-7471.8506 8898.0488 -7471.8335 8897.6523 -7471.8896 8897.3926 C
-7471.9863 8897.374 -7472.0801 8897.4844 -7472.1377 8897.5244 C
-7472.1787 8897.7695 -7472.0522 8897.7656 -7472.0449 8898.0176 C
-7472.4336 8897.9512 -7472.8081 8898.0879 -7473.0225 8898.3262 C
-7473.1523 8898.2051 -7473.1113 8897.9609 -7472.9575 8897.9375 C
-7473.4199 8898.0098 -7473.9141 8897.9766 -7474.3535 8897.9023 C
-7474.0693 8898.3018 -7474.8433 8897.9961 -7474.6494 8898.3281 C
-7474.4141 8898.418 -7474.2119 8898.7021 -7474.3418 8898.8809 C
-7474.4888 8898.8555 -7474.3369 8898.7061 -7474.3984 8898.6211 C
-7474.5859 8898.8389 -7474.6895 8898.2715 -7474.8735 8898.6152 C
-7474.4512 8898.4863 -7474.7915 8898.1289 -7474.7139 8897.8164 C
-7475.0186 8897.9922 -7474.7007 8897.5938 -7475.0024 8897.5938 C
-7475.3057 8897.7676 -7475.6787 8897.9043 -7476.0161 8897.9717 C
-7476.4399 8897.6758 -7477.0898 8897.9668 -7477.4683 8897.9785 C
-7477.6665 8897.8203 -7477.5322 8897.4668 -7477.7471 8897.4053 C
-7477.9995 8897.4121 -7477.5601 8897.7871 -7477.9336 8897.625 C
-7477.8975 8897.5547 L
-7478.0107 8897.6367 -7478.5825 8897.3145 -7478.6929 8897.8223 C
-7478.5776 8897.4395 L
-7478.6475 8897.4043 -7478.7119 8897.4922 -7478.7695 8897.5332 C
-7478.7725 8897.4082 -7478.8535 8897.2949 -7478.7402 8897.2129 C
-7478.9707 8896.9492 -7479.2241 8897.2549 -7479.4746 8897.2656 C
-7479.3135 8897.4922 L
-7479.7422 8897.6699 -7480.0293 8897.4453 -7480.4443 8897.5244 C
-7480.4316 8897.3027 L
-7480.6787 8897.4355 L
-7480.6182 8897.2207 -7480.8447 8897.082 -7480.9751 8897.2617 C
-7480.3335 8896.7188 L
-7480.1553 8896.8496 -7480.5283 8896.9863 -7480.4165 8897.2051 C
-7480.3213 8897.3965 -7479.9375 8897.3359 -7479.8755 8897.1221 C
-7480.0225 8897.0977 -7480.0293 8897.1465 -7480.1436 8897.2266 C
-7480.1919 8896.918 -7479.9688 8896.9297 -7479.8584 8896.7236 C
-7479.9355 8896.7363 -7480.0449 8896.6426 -7480.0615 8896.7402 C
-7479.9102 8896.5898 -7479.7578 8896.5664 -7479.5059 8896.5586 C
-7479.6763 8896.6797 -7479.4131 8896.75 -7479.4775 8896.8379 C
-7479.4575 8896.5664 -7479.2168 8896.4824 -7478.9053 8896.5586 C
-7478.6831 8896.873 -7478.3208 8896.3564 -7477.96 8896.4434 C
-7478.1064 8896.7188 -7478.2935 8896.9395 -7478.5127 8897.0508 C
-7478.2861 8897.1885 -7478.2607 8897.043 -7478.0337 8897.1816 C
-7477.9238 8896.9766 -7477.8457 8896.6621 -7477.5503 8896.5371 C
-7477.5342 8896.7402 L
-7477.2666 8896.6367 -7477.2666 8896.3359 -7476.9258 8896.3926 C
-7476.3418 8896.4922 -7475.7407 8896.4922 -7475.2949 8896.5176 C
-7475.2783 8896.7197 L
-7475.0303 8896.2861 -7474.4521 8896.5596 -7474.1182 8896.3672 C
-7473.5503 8896.5625 -7472.8848 8896.1738 -7472.5938 8896.5234 C
-7471.5913 8896.3672 -7470.7148 8896.2148 -7469.6768 8896.2891 C
-7469.8516 8896.584 L
-7469.6655 8896.3672 -7469.7305 8896.7539 -7469.5479 8896.71 C
-7469.7578 8896.4746 -7469.2949 8896.4043 -7469.1665 8896.2236 C
-7468.7041 8896.4531 -7468.1104 8896.2031 -7467.7007 8895.9961 C
-7467.6846 8896.1992 L
-7467.2705 8895.8184 -7466.7759 8896.1523 -7466.2598 8896.2148 C
-7466.2007 8896.2988 -7466.1074 8896.4893 -7465.9536 8896.4668 C
-7465.6738 8896.1387 -7465.5273 8896.1621 -7465.1167 8895.957 C
-7464.8169 8895.957 -7464.3301 8896.0381 -7464.0254 8896.166 C
-7462.8975 8895.7051 -7461.7456 8896 -7460.5732 8895.7227 C
-7460.4888 8895.9609 L
-7459.3521 8895.4512 -7457.9541 8895.9141 -7456.9839 8895.6523 C
-7457.0776 8896.0596 L
-7456.7734 8896.1855 -7456.3843 8895.9531 -7456.4619 8895.6641 C
-7456.1567 8895.7891 -7455.7007 8895.4668 -7455.5068 8895.8018 C
-7455.1953 8895.877 -7455.1255 8895.6133 -7454.8662 8895.5586 C
-7454.2422 8895.7129 -7454.0107 8895.6777 -7453.4224 8895.6016 C
-7453.5684 8895.5762 L
-7453.6328 8895.666 -7453.6387 8895.8389 -7453.4922 8895.8652 C
-7453.2725 8895.752 -7452.6846 8895.9746 -7452.9033 8895.4883 C
-7452.2754 8895.7695 -7451.4385 8895.2598 -7450.8271 8895.6387 C
-7450.8789 8895.5059 -7450.7246 8895.4805 -7450.6602 8895.3906 C
-7450.1089 8895.3848 -7449.5293 8895.6563 -7449.0898 8895.4297 C
-7449.0024 8895.4961 -7449.2295 8895.6563 -7449.0049 8895.6699 C
-7448.8721 8895.6191 -7449.0024 8895.4961 -7448.8384 8895.4219 C
-7447.9453 8895.1738 -7447.0303 8895.6777 -7446.2188 8895.6133 C
-7444.7754 8895.3564 -7443.2695 8895.4863 -7441.8867 8895.4434 C
-7441.9023 8895.541 L
-7441.4395 8895.168 -7440.8159 8895.9229 -7440.4463 8895.3613 C
-7440.3369 8895.4541 -7440.0283 8895.4053 -7440.1094 8895.5938 C
-7439.7407 8895.3301 -7439.0771 8895.8418 -7438.5439 8895.5068 C
-7438.5928 8895.498 -7438.6211 8895.5176 -7438.6777 8895.5596 C
-7438.1392 8895.7754 -7437.6641 8895.4805 -7437.0957 8895.6758 C
-7437.1533 8895.7178 -7437.2583 8895.748 -7437.2754 8895.8457 C
-7437.0557 8896.0332 -7436.7549 8895.4336 -7436.6348 8895.9043 C
-7436.5088 8895.9004 -7436.5449 8895.668 -7436.6221 8895.6816 C
-7435.3779 8895.8652 -7434.0498 8895.5645 -7432.7549 8895.457 C
-7431.8271 8895.7383 -7432.6982 8896.25 -7431.9663 8895.8984 C
-7431.9063 8895.9893 -7431.9229 8895.7188 -7431.9131 8895.8164 C
-7431.6299 8895.6846 -7431.4717 8896.3418 -7431.2754 8896.0957 C
-7431.3564 8895.8066 -7431.1445 8895.9336 -7431.1387 8895.7578 C
-7430.5713 8895.9453 -7430.4575 8896.2061 -7430.0098 8895.9863 C
-7430.0435 8896.1387 L
-7429.5186 8895.709 -7428.9102 8895.9395 -7428.4673 8895.4434 C
-7425.5728 8895.3535 -7422.7983 8895.0781 -7419.9761 8895.0205 C
-7417.1865 8895.1152 -7414.4551 8894.8926 -7411.6221 8895.1563 C
-7410.9585 8895.5557 -7410.9087 8895.5449 -7410.1797 8895.3828 C
-7410.2095 8895.4473 -7410.2549 8895.4629 -7410.2061 8895.5234 C
-7410.1699 8895.1953 -7409.6929 8895.4922 -7409.6235 8895.1797 C
-7408.5762 8895.2402 -7407.6113 8895.1504 -7406.5337 8895.1484 C
-7406.7041 8895.1836 -7406.7896 8895.4512 -7406.5869 8895.4297 C
-7406.3755 8895.2207 L
-7406.3408 8895.3125 L
-7406.2021 8895.2637 -7406.0513 8895.1016 -7406.1943 8894.9961 C
-7403.4873 8894.7129 -7400.8242 8895.3711 -7398.1729 8895.29 C
-7397.5435 8895.4268 -7396.6475 8895.3018 -7395.9629 8895.2344 C
-7393.9355 8895.6719 -7392.1079 8896.0244 -7390.0479 8895.7188 C
-7390.3169 8896.5664 -7391.1675 8896.7617 V
f
-7481.2578 8896.5625 m
-7481.1855 8896.7266 -7480.9497 8896.8164 -7481.1377 8897.0352 C
-7481.1611 8896.8809 -7481.2822 8896.709 -7481.2578 8896.5625 C
f
-7474.9619 8898.25 m
-7474.9536 8898.2012 -7474.8721 8898.3164 -7474.8521 8898.3428 C
-7474.9297 8898.3555 -7475.0024 8898.4932 -7475.0645 8898.4082 C
-7474.9854 8898.3965 -7474.9976 8898.3184 -7474.9619 8898.25 C
f
-7473.3521 8898.3477 m
-7473.3765 8898.4932 -7473.7207 8898.6094 -7473.9238 8898.627 C
-7473.3521 8898.3477 L
f
-7471.8521 8898.9492 m
-7471.7227 8899.0723 -7471.7583 8899.1396 -7471.9326 8899.1357 C
-7471.9453 8899.0586 -7471.8877 8899.0195 -7471.8521 8898.9492 C
f
-7471.7456 8898.6172 m
-7471.6211 8898.6133 -7471.5591 8898.6992 -7471.4985 8898.7832 C
-7471.5029 8898.6572 -7471.7871 8898.8613 -7471.7456 8898.6172 C
f
-7468.4893 8899.041 m
-7468.4111 8899.0293 -7468.2417 8898.9082 -7468.1689 8899.0703 C
-7468.2505 8898.957 -7468.5498 8899.2549 -7468.4893 8899.041 C
f
-7466.9761 8898.8203 m
-7466.9272 8898.8301 -7466.9072 8898.8564 -7466.8506 8898.8164 C
-7466.7607 8898.8828 -7466.8555 8898.9893 -7466.9312 8899.0029 C
-7466.9761 8898.8203 L
f
-7439.4287 8898.2344 m
-7439.5923 8898.3066 L
-7439.5684 8898.1621 L
-7439.4287 8898.2344 L
f
-7427.3574 8898.2266 m
-7427.1943 8898.1348 -7427.2441 8898.3633 -7427.2168 8898.3848 C
-7427.3643 8898.4004 -7427.1621 8898.2051 -7427.3574 8898.2266 C
f
-7420.8486 8897.498 m
-7420.8984 8897.502 L
-7420.8818 8897.2031 L
-7420.8486 8897.498 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7455.9727 8899.3203 m
-7455.9727 8873.292 L
-7482 8873.292 L
-7482 8899.3203 L
-7455.9727 8899.3203 L
n
0 Ap
0 R
0.7084 0.636438 0.515526 0.381872 K
1.125 w-7482 8881.9668 m
-7455.9727 8881.9668 l
S
0.64 0.650477 0.701045 0.510735 K
-7482 8890.6445 m
-7455.9727 8890.6445 l
S
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7482 8886.3057 m
-7455.9727 8886.3057 l
S
0 O
0.597742 0.537865 0.64184 0.350469 k
1 w-7460.5742 8886.332 m
-7460.3442 8886.0605 -7460.6914 8885.7744 -7461 8885.5635 c
-7461.1118 8885.4863 -7461.5215 8885.6992 -7461.7466 8885.5332 c
-7462.0439 8885.3154 -7462.1826 8885.2285 -7462.4824 8885.2344 c
-7462.6455 8885.2383 -7463.0435 8885.3682 -7463.1895 8885.3984 c
-7463.5679 8885.4746 -7463.8022 8885.6719 -7464.3672 8885.5752 c
-7464.7344 8885.5117 -7464.8286 8885.4209 -7464.9233 8885.4688 c
-7465.1118 8885.6104 -7465.2202 8885.834 -7465.4258 8885.8828 c
-7465.9575 8886.0098 -7466.3535 8886.0537 -7466.8818 8886.043 c
-7467.3047 8886.0332 -7468.4185 8886.1016 -7469.2866 8886.002 c
-7469.6226 8885.9619 -7469.6025 8885.5371 -7469.7695 8885.5332 c
-7469.8618 8885.5313 -7469.7646 8885.8467 -7469.8306 8885.8672 c
-7470.1694 8885.9736 -7470.4702 8884.8232 -7470.6943 8884.8926 c
-7470.8047 8884.9277 -7470.5562 8885.4736 -7470.6729 8885.502 c
-7470.8975 8885.5576 -7471.2178 8884.5391 -7471.4321 8884.6016 c
-7471.5635 8884.6387 -7471.2886 8885.0586 -7471.4375 8885.127 c
-7471.6655 8885.2314 -7471.9087 8884.3555 -7472.1064 8884.4541 C
-7472.1543 8884.502 -7471.7295 8885.2578 -7472.1685 8885.1992 c
-7472.2871 8885.1816 -7472.5054 8884.6338 -7472.5801 8884.6602 c
-7472.6919 8884.7002 -7472.3535 8885.1221 -7472.4897 8885.248 C
-7472.7681 8885.4746 -7473.3711 8884.4834 -7473.4575 8884.5547 c
-7473.5791 8884.6563 -7473.1279 8885.418 -7473.2695 8885.4863 C
-7473.4497 8885.75 -7474.0142 8884.873 -7474.0889 8884.9219 c
-7474.1777 8884.9805 -7473.9058 8885.3584 -7473.8799 8885.5537 c
-7473.8545 8885.748 -7473.9966 8885.8818 -7474.2144 8885.8301 c
-7474.4736 8885.7676 -7474.8696 8884.9619 -7474.9727 8885.0557 C
-7475.0791 8885.1113 -7474.8682 8885.3984 -7474.7954 8885.6328 c
-7474.7583 8885.748 -7474.8882 8885.9219 -7475.0298 8885.9219 c
-7475.3135 8885.9697 -7475.6255 8885.3184 -7475.7065 8885.4229 c
-7475.7524 8885.4824 -7475.5898 8885.8105 -7475.7295 8885.9082 c
-7475.8994 8886.0264 -7476.3115 8885.5586 -7476.4521 8885.6133 C
-7476.5361 8885.6621 -7476.4126 8885.917 -7476.4927 8885.9736 c
-7476.7295 8886.1396 -7477.0039 8885.7412 -7477.0513 8885.7891 C
-7477.1167 8885.8115 -7477.1201 8885.8564 -7477.2793 8885.9609 c
-7477.4736 8886.0879 -7477.5254 8886.1689 -7477.5425 8886.2852 c
-7477.5654 8886.4033 -7477.3135 8886.6953 -7477.1655 8886.6699 c
-7476.8223 8886.6104 -7476.8662 8887.1699 -7476.6328 8887.0361 c
-7476.5679 8887 -7476.6592 8886.5791 -7476.4199 8886.5859 c
-7476.0488 8886.5986 -7475.9858 8887.1416 -7475.7817 8887.1309 c
-7475.6406 8887.124 -7475.8521 8886.5039 -7475.6328 8886.5811 c
-7475.4751 8886.6367 -7475.0063 8887.6221 -7474.9795 8887.5303 c
-7474.8975 8887.2627 -7475.0703 8886.7188 -7474.9409 8886.7285 c
-7474.7568 8886.7432 -7474.5078 8887.6377 -7474.2544 8887.7578 c
-7474.1826 8887.793 -7474.3774 8886.9209 -7474.1958 8886.917 C
-7474.0898 8886.9668 -7473.7578 8887.7695 -7473.6274 8887.8184 C
-7473.5591 8887.8027 -7473.5879 8887.4453 -7473.5176 8887.4248 c
-7473.4688 8887.4102 -7473.2817 8887.8857 -7473.21 8887.8438 c
-7473.1055 8887.7832 -7473.2471 8887.3125 -7473.0889 8887.2432 c
-7472.9175 8887.1689 -7472.4878 8888.2129 -7472.3486 8888.1182 c
-7472.2769 8888.0703 -7472.3574 8887.5303 -7472.21 8887.5664 c
-7472.0718 8887.5986 -7471.9414 8887.9346 -7471.8081 8887.9629 c
-7471.7295 8887.9785 -7471.7935 8887.5117 -7471.7495 8887.4941 c
-7471.5889 8887.4355 -7471.2329 8887.9922 -7471.0688 8887.8438 c
-7470.8584 8887.6553 -7470.9395 8887.29 -7470.8345 8887.3027 c
-7470.6274 8887.3262 -7470.4912 8887.5635 -7470.4146 8887.5039 c
-7470.2642 8887.3887 -7470.3281 8887.0996 -7470.0527 8887.0127 c
-7469.8975 8886.9629 -7469.7935 8887.2549 -7469.7495 8887.251 c
-7469.6738 8887.248 -7469.6782 8887.1504 -7469.6665 8887.0449 c
-7469.6328 8886.7813 -7469.6064 8886.7197 -7469.4878 8886.6973 c
-7469.0854 8886.6738 -7468.5625 8886.6045 -7468.1807 8886.5957 c
-7467.6274 8886.5811 -7466.2607 8886.5576 -7466.1182 8886.5576 c
-7466 8886.5332 -7465.7432 8886.7148 -7465.6689 8886.7813 c
-7465.4678 8886.9658 -7465.2998 8887.1797 -7464.9858 8887.4404 c
-7464.8906 8887.5215 -7464.8081 8887.501 -7464.7378 8887.4766 c
-7464.5249 8887.4053 -7464.4585 8887.3535 -7464.2202 8887.3223 c
-7463.9175 8887.2793 -7463.4272 8887.3691 -7463.1245 8887.4629 c
-7462.6035 8887.6221 -7462.5264 8887.6445 -7462.0977 8887.5957 c
-7461.6992 8887.5498 -7461.0586 8887.4785 -7461.0479 8887.1309 c
-7461.0415 8886.916 -7460.9414 8886.7637 -7460.5742 8886.332 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7455.9722 8899.3203 m
-7455.9722 8873.293 L
-7482 8873.293 L
-7482 8899.3203 L
-7455.9722 8899.3203 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7464.6455 8886.3096 m
-7455.9736 8886.3096 l
S
-7468.9839 8899.3203 m
-7468.9839 8890.6445 l
S
0.7084 0.636438 0.515526 0.381872 K
1.125 w-7464.7202 8881.9707 m
-7455.9727 8881.9707 l
S
-7473.3232 8899.3193 m
-7473.3232 8889.9658 l
S
0.64 0.650477 0.701045 0.510735 K
-7464.6504 8899.3193 m
-7464.6504 8896.9072 l
-7461.9937 8896.6836 -7460.3096 8894.9805 v
-7458.6064 8893.2539 -7458.3774 8890.6484 y
-7455.9727 8890.6484 l
S
*u
1 D
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-7472.8418 8883.5059 m
-7472.8418 8883.5703 -7472.8218 8883.6113 -7472.7783 8883.6113 c
-7472.6943 8883.6113 -7472.4634 8883.2744 -7472.3994 8883.2744 c
-7472.3154 8883.2744 -7472.2729 8883.3164 -7472.2729 8883.4219 c
-7472.2729 8883.5059 -7472.5264 8884.4131 y
-7472.5264 8884.4541 -7472.5264 8884.4541 -7472.5049 8884.4541 c
-7472.4414 8884.4541 -7472.0615 8883.9072 -7471.9351 8883.9072 c
-7471.9146 8883.9072 -7471.8936 8883.9277 -7471.8936 8883.9492 c
-7472.1675 8884.8555 -7472.1675 8885.0459 v
-7472.1675 8885.1094 -7472.1675 8885.1309 -7472.1465 8885.1309 c
-7472.1055 8885.1309 -7471.6826 8884.5605 -7471.5562 8884.5605 c
-7471.5352 8884.5605 -7471.5137 8884.5811 -7471.5137 8884.6025 c
-7471.5137 8884.666 -7471.7666 8885.4043 -7471.7666 8885.5723 c
-7471.7666 8885.6152 -7471.7666 8885.6152 -7471.7446 8885.6152 c
-7471.6826 8885.6152 -7471.4722 8885.4043 -7471.4297 8885.4043 c
-7471.4082 8885.4043 -7471.3882 8885.4258 -7471.3882 8885.4463 c
-7471.3882 8885.4668 -7471.4927 8885.8262 -7471.4927 8885.9102 c
-7471.4927 8885.9316 -7471.4927 8885.9316 -7471.4722 8885.9316 c
-7471.4297 8885.9316 -7471.0918 8885.5723 -7471.0078 8885.5723 c
-7470.9658 8885.5723 -7470.9233 8885.6152 -7470.9233 8885.6992 c
-7470.9233 8885.8477 -7471.1138 8886.5645 -7471.1138 8886.6064 c
-7471.1138 8886.6904 -7471.0918 8886.7324 -7471.0498 8886.7324 c
-7470.9658 8886.7324 -7470.7119 8886.416 -7470.6494 8886.416 c
-7470.5854 8886.416 -7470.5439 8886.4365 -7470.5439 8886.501 c
-7470.5854 8886.9219 L
-7470.5854 8886.9863 -7470.5854 8887.0059 -7470.5654 8887.0059 c
-7470.5225 8887.0059 -7470.2915 8886.7119 -7470.2065 8886.7119 c
-7470.1006 8886.7119 -7470.1006 8887.1973 -7470.1006 8887.2598 c
-7470.1006 8887.3652 -7470.0166 8887.4492 -7469.8896 8887.4492 c
-7469.8057 8887.4492 -7469.4678 8887.2178 -7469.4473 8887.2178 c
-7469.3623 8887.2178 -7469.3198 8887.6602 -7469.2568 8887.6602 c
-7469.1943 8887.6602 -7468.9199 8887.5332 -7468.8564 8887.5332 c
-7468.6455 8887.5332 -7468.6035 8887.6191 -7468.6035 8887.7871 c
-7468.6255 8887.9346 L
-7468.6255 8887.9766 -7468.6035 8887.9766 -7468.5835 8887.9766 c
-7468.4985 8887.9766 -7468.2241 8887.7021 -7468.1392 8887.7021 c
-7467.9287 8887.7021 -7465.8198 8889.7695 -7465.5454 8890.043 c
-7465.3984 8890.2109 -7465.3984 8890.5068 -7465.3984 8890.6338 c
-7465.3984 8891.498 -7465.3984 8891.582 -7465.2295 8891.666 c
-7464.5977 8891.9199 -7464.5127 8892.0674 -7463.7334 8893.3535 c
-7463.6479 8893.501 -7462.7407 8894.1133 -7462.5942 8894.1133 c
-7462.4878 8894.1133 -7462.1094 8893.8594 -7462.0239 8893.8594 c
-7461.9194 8893.8594 -7461.8135 8893.9229 -7461.8135 8894.0908 c
-7461.8135 8894.5342 -7462.3408 8895.041 -7462.9312 8895.041 c
-7463.7534 8895.041 -7464.0913 8894.3438 -7464.1338 8893.9453 c
-7464.1543 8893.7969 -7464.2393 8893.7119 -7464.3447 8893.7119 c
-7464.3862 8893.7119 -7464.4287 8893.7324 -7464.4702 8893.7969 c
-7464.9561 8894.5977 -7465.9473 8895.041 -7466.7065 8895.041 c
-7467.7393 8895.041 -7468.8774 8894.4082 -7469.3418 8894.1348 c
-7469.7842 8893.8818 -7470.4814 8893.7119 -7470.8809 8893.7119 c
-7471.3242 8893.7119 -7471.3662 8893.8594 -7471.3662 8894.1133 c
-7471.3662 8894.2607 -7470.9023 8894.7021 -7470.9023 8894.8301 c
-7470.9023 8894.9561 -7471.0498 8895.041 -7471.4082 8895.041 c
-7471.8936 8895.041 -7472.5679 8894.3232 -7472.5679 8893.5439 c
-7472.5679 8892.9316 -7471.7666 8892.4053 -7471.3022 8892.4053 c
-7470.3755 8892.4053 -7470.0942 8892.7637 -7469.5264 8893.2275 c
-7469.4414 8893.29 -7469.3774 8893.3125 -7469.3359 8893.3125 c
-7469.1895 8893.3125 -7469.1895 8892.2148 -7469.1895 8892.0898 c
-7469.1895 8891.9404 -7469.2729 8891.8779 -7469.3774 8891.8779 c
-7471.7822 8891.8779 -7476.6592 8890.6543 -7478.3672 8884.498 c
-7478.4297 8884.2861 -7478.5361 8884.1816 -7478.6406 8884.1816 c
-7478.7881 8884.1816 -7479.7793 8885.0244 -7479.7793 8886.6064 c
-7479.7793 8888.4404 -7478.5767 8889.4102 -7477.9873 8889.4102 c
-7477.8398 8889.4102 -7477.6494 8889.3896 -7477.6494 8889.2412 c
-7477.6494 8889.1787 -7477.6929 8889.1152 -7477.7759 8889.0098 c
-7478.1143 8888.6738 -7478.3672 8888.04 -7478.3672 8887.7236 c
-7478.3672 8887.5117 -7478.2607 8887.3438 -7478.1143 8887.3438 c
-7477.9033 8887.3438 -7477.5654 8888.293 -7477.46 8888.4404 c
-7477.3335 8888.6514 -7476.9546 8889.0313 -7476.2378 8889.5586 c
-7475.4995 8890.084 -7474.0654 8891.3926 -7474.0654 8892.6572 c
-7474.0654 8894.0293 -7475.1191 8894.9355 -7475.9209 8894.9355 c
-7476.7007 8894.9355 -7477.6714 8894.4082 -7478.0713 8893.9229 c
-7478.7041 8893.1855 -7479.3154 8892.6152 -7479.8218 8892.6152 c
-7480.1592 8892.6152 -7480.3066 8892.8262 -7480.3066 8893.0371 c
-7480.3066 8893.374 -7480.0537 8893.6064 -7479.5479 8893.6484 c
-7478.9575 8893.6914 -7478.8936 8894.1133 -7478.8936 8894.4492 c
-7478.8936 8894.7236 -7479.4209 8895.041 -7479.8433 8895.041 c
-7480.4751 8895.041 -7481.2974 8894.3438 -7481.2974 8892.5107 c
-7481.2974 8891.0127 -7480.0537 8890.5498 -7479.5679 8890.5498 c
-7479.1265 8890.5498 -7478.4722 8890.6338 -7478.0928 8890.9707 c
-7476.8066 8892.1738 -7476.1318 8892.3828 -7475.5835 8892.3828 c
-7475.3721 8892.3828 -7475.2881 8892.3828 -7475.2881 8892.5313 c
-7475.2881 8892.8477 -7476.0474 8893.0371 -7476.1318 8893.0586 c
-7476.3423 8893.1211 -7476.5103 8893.3535 -7476.5103 8893.5645 c
-7476.5103 8894.0498 -7476.2378 8894.0703 -7475.8774 8894.0703 c
-7475.5215 8894.0703 -7474.8042 8893.7119 -7474.8042 8892.5107 c
-7474.8042 8891.5195 -7475.9424 8890.3594 -7476.4058 8890.1279 c
-7476.7007 8889.958 -7477.5874 8889.9805 -7477.9458 8889.9375 c
-7478.6406 8889.8525 -7480.4121 8888.9053 -7480.4121 8886.416 c
-7480.4336 8885.0029 -7479.1265 8883.6758 -7478.8511 8883.4863 c
-7478.6826 8883.3789 -7478.5986 8883.2529 -7478.5986 8883.084 c
-7478.5986 8882.873 -7478.6626 8879.9424 -7478.9995 8879.9424 c
-7479.4424 8879.9424 -7479.5054 8879.9424 -7479.5054 8880.1338 c
-7479.21 8881.2285 -7479.21 8881.4609 v
-7479.21 8881.7773 -7479.4424 8883.2529 -7480.3066 8883.2529 c
-7480.5806 8883.2529 -7481.0449 8883.0205 -7481.0449 8882.7051 c
-7481.0449 8882.4102 -7480.3486 8881.208 -7480.3486 8880.9336 c
-7480.3486 8880.4482 -7480.3921 8880.4277 -7481.0654 8879.8164 c
-7481.2559 8879.6689 -7481.3193 8879.543 -7481.3193 8879.3516 c
-7481.3193 8879.1836 -7481.2134 8879.0557 -7481.0449 8879.0557 c
-7480.8975 8879.0557 -7480.3281 8879.332 -7480.2017 8879.3516 c
-7480.0752 8879.3516 -7479.8433 8879.373 -7479.6538 8879.373 c
-7479.2734 8879.373 -7479.0845 8879.2461 -7479.0845 8879.1201 c
-7479.0845 8878.8877 -7479.0845 8878.2139 -7479.9263 8876.7578 c
-7480.1167 8876.4209 -7481.2974 8875.0928 -7481.2974 8874.7549 c
-7481.2974 8874.5859 -7481.2134 8874.5664 -7481.1089 8874.5664 c
-7480.9185 8874.5664 -7480.4966 8874.9873 -7480.3706 8875.1348 c
-7479.1265 8876.4629 -7478.3042 8877.8965 -7477.9238 8879.1621 c
-7477.8398 8879.4785 -7477.7344 8879.3945 -7477.5654 8879.416 c
-7475.4155 8879.9219 -7473.3271 8882.4307 -7473.3271 8882.4521 c
-7473.4326 8882.7256 -7473.4326 8882.7891 v
-7473.4326 8882.916 -7473.3271 8882.9375 -7473.3057 8882.9375 c
-7473.2432 8882.9375 -7473.0527 8882.7256 -7473.0103 8882.7256 c
-7472.9058 8882.7256 -7472.7783 8882.8105 -7472.7783 8882.958 C
-7472.8418 8883.5059 l
f
0 D
-7476.1104 8882.0098 m
-7475.5215 8882.0098 -7475.0986 8882.1152 -7474.6982 8882.3887 c
-7474.6553 8882.4102 -7474.6138 8882.4307 -7474.5928 8882.4307 c
-7474.5498 8882.4307 -7474.5498 8882.4102 -7474.5498 8882.3672 c
-7474.5498 8881.9463 -7476.4272 8879.9863 -7477.5654 8879.9863 c
-7477.6289 8879.9863 -7477.6714 8880.0273 -7477.6714 8880.0898 c
-7477.6714 8880.2803 -7477.5874 8882.2832 -7477.2495 8882.2832 c
-7477.1865 8882.2832 -7477.1016 8882.2617 -7477.0386 8882.2207 c
-7476.7007 8882.0723 -7476.4902 8882.0098 -7476.1104 8882.0098 c
f
-7475.5835 8884.7715 m
-7475.5835 8884.3496 -7475.5625 8883.8857 -7474.8662 8883.8857 c
-7474.2334 8883.8857 -7473.6431 8884.54 -7473.4961 8884.6875 c
-7473.4326 8884.7295 -7473.3906 8884.75 -7473.3486 8884.75 c
-7473.3271 8884.75 -7473.2847 8884.708 -7473.2847 8884.666 c
-7473.2847 8884.2227 -7474.6553 8882.5576 -7476.0049 8882.5576 c
-7476.2578 8882.5576 -7477.2705 8882.7256 -7477.2705 8883.2744 c
-7477.2705 8883.5273 -7476.8906 8884.8984 -7476.2793 8885.9736 c
-7474.9087 8888.4619 -7470.7119 8890.0205 -7468.8145 8890.0205 c
-7467.9072 8890.043 -7467.6118 8889.7266 -7467.4863 8889.7051 c
-7467.4648 8889.7051 -7467.4438 8889.6846 -7467.4233 8889.6846 c
-7467.3174 8889.6846 -7467.1904 8889.748 -7467.1904 8889.8955 c
-7467.1904 8889.917 -7467.2119 8889.917 v
-7467.3594 8891.0547 -7467.4014 8891.4561 -7467.4014 8892.7197 c
-7467.4014 8894.1133 -7467.4014 8894.2393 -7466.4321 8894.2393 c
-7465.1455 8894.2393 -7464.8506 8893.1641 -7464.8506 8892.9316 c
-7464.8506 8892.5107 -7465.4399 8892.2148 -7465.5889 8892.2148 c
-7465.7358 8892.2148 -7465.9058 8892.3223 -7465.9058 8892.5107 c
-7465.9058 8892.8057 -7465.9473 8892.9531 -7466.2207 8892.9531 c
-7466.4951 8892.9531 -7466.4951 8892.5947 -7466.4951 8892.4883 c
-7466.4951 8892.2363 -7466.3896 8891.9834 -7466.1782 8891.8564 c
-7465.7998 8891.6035 -7465.7998 8891.2031 -7465.7998 8890.9922 c
-7465.7998 8890.8867 -7465.7998 8890.7598 -7465.8198 8890.6543 c
-7465.8418 8890.4863 -7467.7817 8888.4404 -7468.0977 8888.4404 c
-7468.2446 8888.4404 -7468.5615 8888.5869 -7469.4258 8888.5869 c
-7471.5767 8888.5869 -7472.5474 8886.8594 -7472.7378 8886.332 c
-7472.9897 8885.6152 -7473.7915 8885.3193 -7474.0225 8885.3193 c
-7474.2129 8885.3193 -7474.2129 8885.3623 -7474.2129 8885.7627 c
-7474.2129 8885.8477 -7474.4238 8886.1836 y
-7474.4238 8886.374 -7473.3906 8886.627 -7473.3906 8886.8164 c
-7473.3906 8886.9863 -7473.5801 8887.0059 -7473.7271 8887.0059 c
-7473.8115 8887.0059 -7474.8882 8887.0059 -7475.3306 8886.1836 c
-7475.5415 8885.7832 -7475.5835 8885.2148 -7475.5835 8884.7715 c
f
1 D
-7471.4927 8882.5156 m
-7471.4927 8882.4717 -7471.5137 8882.4521 -7471.5352 8882.4521 c
-7471.5986 8882.4521 -7471.7666 8882.7891 -7471.8506 8882.7891 c
-7471.9146 8882.7891 -7471.9995 8882.7051 -7472.0415 8882.5986 c
-7472.0615 8882.5156 -7472.1255 8882.0508 -7472.21 8882.0508 c
-7472.2524 8882.0508 -7472.4209 8882.2832 -7472.4634 8882.2832 c
-7472.6104 8882.2832 -7472.7158 8882.0508 -7472.7158 8881.8418 c
-7472.7158 8881.7354 -7472.7783 8881.7354 -7472.9263 8881.7354 c
-7473.5166 8881.7354 -7475.1406 8879.5635 -7475.5625 8877.8125 c
-7475.6055 8877.6445 -7475.5835 8877.4971 -7475.8994 8877.3906 c
-7478.0713 8876.6543 -7480.5176 8874.502 -7480.5176 8874.376 c
-7480.5176 8874.2285 -7480.4336 8874.1445 -7480.3066 8874.1445 c
-7480.2432 8874.1445 -7480.1592 8874.1445 -7479.6538 8874.4805 c
-7478.7681 8875.0713 -7476.7217 8876.3584 -7475.8994 8876.3584 c
-7475.6265 8876.3584 -7475.6055 8876 -7475.6055 8875.7461 c
-7475.6055 8875.5557 -7475.6265 8875.3242 -7475.6265 8875.1777 c
-7475.6465 8874.9033 -7475.9634 8874.5859 -7475.9634 8874.418 c
-7475.9634 8874.2705 -7475.8154 8874.165 -7475.6465 8874.165 c
-7475.4575 8874.165 -7475.3306 8874.1865 -7475.1606 8874.376 c
-7474.8662 8874.7129 -7474.7402 8874.8613 -7474.4238 8874.8613 c
-7474.1914 8874.8613 -7473.1377 8874.1445 -7472.8838 8874.1445 c
-7472.5679 8874.1445 -7472.1895 8874.6289 -7472.1895 8874.9248 c
-7472.1895 8875.6621 -7473.0942 8876.2529 -7473.6431 8876.2529 c
-7474.0225 8876.2529 -7474.4438 8876.127 -7474.6353 8875.8945 c
-7474.6982 8875.8301 -7474.7607 8875.7891 -7474.8242 8875.7891 c
-7474.9937 8875.7891 -7475.1191 8876.2529 -7475.1191 8876.2949 c
-7475.1191 8876.7178 -7472.2729 8876.7793 -7471.9146 8876.7793 c
-7471.7666 8876.7793 -7471.6401 8876.6953 -7471.5352 8876.5264 c
-7471.3447 8876.2324 -7470.1855 8875.0098 -7468.6255 8875.0098 c
-7466.79 8875.0098 -7465.0825 8876.2725 -7465.0825 8878.1709 c
-7465.0825 8878.2773 -7465.1245 8878.8242 -7465.1245 8878.8467 c
-7465.1245 8878.9102 -7464.0063 8880.6592 -7462.6782 8880.6592 c
-7461.6245 8880.6592 -7461.2656 8880.0703 -7461.2656 8879.584 c
-7461.2656 8879.3516 -7461.3711 8878.6992 -7461.8984 8878.6992 c
-7462.1094 8878.6992 -7462.2144 8878.9102 -7462.2144 8879.2891 c
-7462.2144 8879.373 -7462.0039 8879.7529 -7462.0039 8879.8584 c
-7462.0039 8879.9004 -7462.0239 8879.9219 -7462.0879 8879.9219 c
-7462.4258 8879.9219 -7462.9521 8879.5635 -7463.1846 8878.9102 c
-7463.4595 8878.1934 -7463.8594 8877.4971 -7464.1958 8877.0957 c
-7464.5127 8876.7383 -7464.6182 8876.1465 -7464.6182 8875.8096 c
-7464.6182 8875.3242 -7464.1338 8874.165 -7462.4878 8874.165 c
-7461.2871 8874.165 -7460.4434 8874.9033 -7460.4434 8875.5146 c
-7460.4434 8876.127 -7460.7598 8876.5059 -7461.2026 8876.5059 c
-7461.6455 8876.5059 -7461.9824 8876.168 -7461.9824 8875.8301 c
-7461.9824 8875.1563 -7462.1514 8875.0098 -7462.4878 8875.0098 c
-7462.6992 8875.0098 -7462.8896 8875.1348 -7462.8896 8875.4512 c
-7462.8896 8875.6836 -7462.8896 8876.0625 -7461.3711 8877.3281 c
-7460.8857 8877.7285 -7460.4214 8878.4258 -7460.4214 8879.2051 c
-7460.4214 8879.9648 -7461.4561 8881.165 -7462.6362 8881.165 c
-7463.8594 8881.165 -7464.6401 8880.3857 -7465.2515 8879.6689 c
-7465.5454 8879.332 -7466.9814 8877.6445 -7467.0439 8877.6221 c
-7467.2334 8877.4746 -7467.3174 8877.3496 -7467.3174 8877.2227 c
-7467.3174 8877.1172 -7467.2119 8877.0117 -7467.0854 8877.0117 c
-7466.8535 8877.0117 -7465.9058 8877.9609 -7465.8198 8877.9609 c
-7465.7568 8877.9609 -7465.7153 8877.8965 -7465.7153 8877.8125 c
-7465.7153 8877.0537 -7466.8535 8875.5781 -7468.6255 8875.5781 c
-7470.1006 8875.5781 -7470.9863 8876.6953 -7470.9863 8876.7383 c
-7470.9863 8876.8643 -7470.8394 8876.9893 -7470.5225 8877.0537 c
-7466.6426 8877.792 -7463.3955 8881.3418 -7463.3955 8885.958 c
-7463.3955 8886.0645 -7463.2256 8886.0908 -7463.0786 8886.0908 c
-7462.7202 8886.0908 -7462.0879 8886.1699 -7462.0879 8885.8965 c
-7462.0879 8885.79 -7462.1294 8885.6641 -7462.1934 8885.5371 c
-7462.5518 8884.9668 -7462.8682 8884.793 -7462.8682 8883.8418 c
-7462.8682 8883.3789 -7462.4878 8882.8525 -7461.8984 8882.8525 c
-7460.8657 8882.8525 -7460.4214 8883.8857 -7460.4214 8884.1172 c
-7460.4214 8884.2861 -7460.5073 8884.3496 -7460.5903 8884.3496 c
-7460.7178 8884.3496 -7461.2241 8883.8223 -7461.3711 8883.8223 c
-7461.5615 8883.8223 -7461.7085 8883.8643 -7461.7085 8884.3496 c
-7461.7085 8884.6875 -7460.4214 8888.3984 -7460.4214 8889.1992 c
-7460.4214 8889.7695 -7460.7598 8890.4658 -7461.6455 8890.9707 c
-7461.6875 8890.9922 -7461.7085 8891.0127 -7461.7085 8891.0547 c
-7461.7085 8891.1387 -7461.5615 8891.2451 -7461.4126 8891.2861 c
-7460.8018 8891.4561 -7460.4214 8891.5615 -7460.4214 8892.5107 c
-7460.4214 8892.8691 -7460.7598 8893.5439 -7461.0127 8893.5439 c
-7461.2026 8893.5439 -7461.2026 8893.501 -7461.2026 8893.1426 c
-7461.2026 8892.9951 -7461.2446 8892.8896 -7461.3926 8892.7842 c
-7461.7085 8892.5732 -7461.7295 8892.5313 -7461.8135 8892.0469 c
-7461.8774 8891.7305 -7462.0039 8891.6445 -7463.1426 8891.0127 c
-7463.5854 8890.7393 -7463.6904 8890.5068 -7463.7744 8890.2754 c
-7463.8594 8890.084 -7463.9233 8890.084 -7464.4287 8890.084 c
-7464.9561 8890.084 -7467.5073 8887.3652 -7467.5073 8887.2383 c
-7467.5073 8887.1758 -7467.3809 8886.8799 -7467.3809 8886.8164 c
-7467.3809 8886.7539 -7467.4014 8886.7119 -7467.4438 8886.7119 c
-7467.4863 8886.7119 -7467.6338 8886.9219 -7467.6758 8886.9219 c
-7467.7817 8886.9219 -7467.7817 8886.7324 -7467.7817 8886.584 c
-7467.7817 8886.4805 -7467.5703 8885.9102 -7467.5703 8885.7627 c
-7467.5703 8885.6787 -7467.5918 8885.6152 -7467.6338 8885.6152 c
-7467.7178 8885.6152 -7467.9072 8886.0781 -7467.9922 8886.0781 c
-7468.0342 8886.0781 -7468.0762 8886.0371 -7468.0762 8885.9102 c
-7468.0762 8885.7627 -7467.8862 8885.0459 y
-7467.8862 8884.9824 -7467.9072 8884.877 -7467.9502 8884.877 c
-7468.0342 8884.877 -7468.1826 8885.2773 -7468.2666 8885.2773 c
-7468.3286 8885.2773 -7468.3926 8885.1934 -7468.3926 8885.0459 c
-7468.3926 8884.9609 -7468.2446 8884.54 -7468.2446 8884.4346 c
-7468.2446 8884.3711 -7468.2666 8884.3066 -7468.3086 8884.3066 c
-7468.3506 8884.3066 -7468.5835 8884.9199 -7468.7095 8884.9199 c
-7468.7935 8884.9199 -7468.8994 8884.8125 -7468.8994 8884.708 c
-7468.8994 8884.624 -7468.7729 8884.2656 -7468.7729 8884.1816 c
-7468.7729 8884.1387 -7468.7729 8884.1172 -7468.7935 8884.1172 c
-7468.8774 8884.1172 -7469.0254 8884.6025 -7469.1104 8884.6025 c
-7469.3418 8884.6025 -7469.3623 8884.1816 -7469.3623 8883.9912 c
-7469.3623 8883.9072 -7469.2998 8883.5703 -7469.2998 8883.5059 c
-7469.2998 8883.4434 -7469.3198 8883.4219 -7469.3418 8883.4219 c
-7469.4897 8883.4219 -7469.6782 8884.2227 -7469.8271 8884.2227 c
-7470.0386 8884.2227 -7470.0386 8884.0332 -7470.0386 8883.8018 c
-7470.0166 8883.2744 L
-7470.0166 8883.2529 -7470.0386 8883.2324 y
-7470.0586 8883.2324 -7470.1006 8883.2529 -7470.1226 8883.3164 c
-7470.1855 8883.5273 -7470.3115 8883.9492 -7470.5225 8883.9492 c
-7470.6694 8883.9492 -7470.8174 8883.7803 -7470.8174 8883.6338 c
-7470.8174 8883.4004 -7470.7119 8883.0205 -7470.7119 8882.7891 c
-7470.7119 8882.7256 -7470.7334 8882.7051 -7470.7754 8882.7051 c
-7470.8608 8882.7051 -7470.9863 8883.1465 -7471.0278 8883.2324 c
-7471.0918 8883.3164 -7471.1553 8883.3379 -7471.2192 8883.3379 c
-7471.5352 8883.3379 -7471.5352 8883.0205 -7471.5352 8882.873 C
-7471.4927 8882.5156 l
f
0 D
-7472.8633 8878.1504 m
-7472.8633 8877.918 -7474.8042 8877.7285 -7474.8662 8877.7285 c
-7474.9722 8877.7285 -7475.0352 8877.792 -7475.0352 8877.8965 c
-7475.0352 8878.7617 -7473.2847 8880.9971 -7472.8633 8880.9971 c
-7472.7998 8880.9971 -7472.7783 8880.9766 -7472.7783 8880.9131 c
-7473.2002 8879.6689 -7473.2002 8879.416 v
-7473.2002 8879.0361 -7473.0942 8878.7832 -7472.9058 8878.3613 c
-7472.8838 8878.2773 -7472.8633 8878.2139 -7472.8633 8878.1504 c
f
-7464.1338 8889.5996 m
-7463.9858 8889.5996 -7463.4795 8889.0947 -7463.3325 8889.0947 c
-7463.2065 8889.0947 -7463.0791 8889.1787 -7463.0791 8889.3262 c
-7463.0791 8889.4102 -7463.2695 8889.8525 -7463.2695 8889.958 c
-7463.2695 8890.3164 -7462.8896 8890.6133 -7462.5098 8890.6133 c
-7462.1094 8890.6133 -7460.9702 8890.2959 -7460.9702 8889.0723 c
-7460.9702 8887.9766 -7461.3926 8887.9766 -7463.0366 8887.9766 c
-7463.3955 8887.9766 -7465.0615 8888.166 -7465.3145 8888.166 c
-7465.4399 8888.166 -7465.4834 8887.9971 -7465.4834 8887.8701 c
-7465.4834 8887.8291 -7465.4834 8887.7871 -7465.4614 8887.7656 c
-7465.3984 8887.3867 -7465.1675 8886.8379 -7465.1675 8886.458 c
-7465.1675 8882.0098 -7469.2998 8878.1504 -7471.7666 8878.1504 c
-7472.4209 8878.1504 -7472.6519 8878.9521 -7472.6519 8879.373 c
-7472.6519 8881.1025 -7470.6694 8882.1348 -7470.4175 8882.1348 c
-7470.3545 8882.1348 -7470.3335 8882.1152 -7470.3335 8882.0723 c
-7470.3335 8882.0303 -7470.3545 8881.9883 -7470.3975 8881.9463 c
-7470.5225 8881.7773 -7471.0498 8881.165 -7471.0498 8880.5332 c
-7471.0498 8880.1953 -7470.7554 8879.7529 -7469.9951 8879.7529 c
-7468.7305 8879.7529 -7468.1826 8881.1025 -7468.1826 8881.4609 c
-7468.1826 8881.6094 -7468.2446 8881.8193 -7468.4561 8881.8193 c
-7468.6035 8881.8193 -7469.0049 8881.165 -7469.1519 8881.165 c
-7469.2158 8881.165 -7469.4473 8881.292 -7469.5103 8881.292 c
-7469.5942 8881.292 -7469.6582 8881.2715 -7469.7422 8881.2715 c
-7469.8057 8881.2715 -7469.8481 8881.334 -7469.8481 8881.4395 c
-7469.8481 8881.7988 -7469.3623 8882.3672 -7468.8774 8882.6211 c
-7467.9722 8883.084 -7466.6226 8884.4131 -7466.6226 8885.8682 c
-7466.6226 8886.2891 -7466.6846 8886.6904 -7466.6846 8887.0273 c
-7466.6846 8887.5762 -7465.7568 8888.4404 -7464.8081 8889.3262 c
-7464.6401 8889.4736 -7464.3862 8889.5996 -7464.1338 8889.5996 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-7455.9722 8899.3203 m
-7455.9722 8873.293 L
-7482 8873.293 L
-7482 8899.3203 L
-7455.9722 8899.3203 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-7464.6455 8886.3096 m
-7455.9736 8886.3096 l
S
-7468.9839 8899.3203 m
-7468.9839 8890.6445 l
S
0.64 0.650477 0.701045 0.510735 K
1.125 w-7464.7202 8881.9707 m
-7455.9727 8881.9707 l
S
-7473.3232 8899.3203 m
-7473.3232 8889.9658 l
S
0.7084 0.636438 0.515526 0.381872 K
-7464.6504 8899.3203 m
-7464.6504 8896.9072 l
-7461.9937 8896.6836 -7460.3096 8894.9805 v
-7458.6064 8893.2539 -7458.3774 8890.6484 y
-7455.9727 8890.6484 l
S
*u
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-7472.7783 8882.958 m
-7472.7783 8882.8105 -7472.9058 8882.7256 -7473.0103 8882.7256 c
-7473.0527 8882.7256 -7473.2432 8882.9375 -7473.3057 8882.9375 c
-7473.3271 8882.9375 -7473.4326 8882.916 -7473.4326 8882.7891 c
-7473.4326 8882.7256 -7473.3271 8882.4521 y
-7473.3271 8882.4307 -7475.4155 8879.9219 -7477.5654 8879.416 c
-7477.7344 8879.3945 -7477.8398 8879.4785 -7477.9238 8879.1621 c
-7478.3042 8877.8965 -7479.1265 8876.4629 -7480.3706 8875.1348 c
-7480.4966 8874.9883 -7480.9185 8874.5664 -7481.1089 8874.5664 c
-7481.2134 8874.5664 -7481.2974 8874.5859 -7481.2974 8874.7549 c
-7481.2974 8875.0928 -7480.1167 8876.4209 -7479.9263 8876.7578 c
-7479.0845 8878.2139 -7479.0845 8878.8877 -7479.0845 8879.1201 c
-7479.0845 8879.2461 -7479.2734 8879.373 -7479.6538 8879.373 c
-7479.8433 8879.373 -7480.0752 8879.3516 -7480.2017 8879.3516 c
-7480.3281 8879.332 -7480.8975 8879.0557 -7481.0449 8879.0557 c
-7481.2134 8879.0557 -7481.3193 8879.1836 -7481.3193 8879.3516 c
-7481.3193 8879.543 -7481.2559 8879.6689 -7481.0654 8879.8164 c
-7480.3921 8880.4277 -7480.3486 8880.4482 -7480.3486 8880.9336 c
-7480.3486 8881.208 -7481.0449 8882.4102 -7481.0449 8882.7051 c
-7481.0449 8883.0205 -7480.5806 8883.2529 -7480.3066 8883.2529 c
-7479.4424 8883.2529 -7479.21 8881.7773 -7479.21 8881.4609 c
-7479.21 8881.2285 -7479.5054 8880.1338 y
-7479.5054 8879.9424 -7479.4424 8879.9424 -7478.9995 8879.9424 c
-7478.6626 8879.9424 -7478.5986 8882.873 -7478.5986 8883.084 c
-7478.5986 8883.2529 -7478.6826 8883.3789 -7478.8511 8883.4863 c
-7479.1265 8883.6758 -7480.4336 8885.0029 -7480.4121 8886.416 c
-7480.4121 8888.9053 -7478.6406 8889.8525 -7477.9458 8889.9375 c
-7477.5874 8889.9805 -7476.7007 8889.958 -7476.4058 8890.1279 c
-7475.9424 8890.3594 -7474.8042 8891.5195 -7474.8042 8892.5107 c
-7474.8042 8893.7119 -7475.5215 8894.0703 -7475.8774 8894.0703 c
-7476.2378 8894.0703 -7476.5103 8894.0498 -7476.5103 8893.5645 c
-7476.5103 8893.3535 -7476.3423 8893.1211 -7476.1318 8893.0586 c
-7476.0474 8893.0371 -7475.2881 8892.8477 -7475.2881 8892.5313 c
-7475.2881 8892.3828 -7475.3721 8892.3828 -7475.5835 8892.3828 c
-7476.1318 8892.3828 -7476.8066 8892.1738 -7478.0928 8890.9707 c
-7478.4722 8890.6338 -7479.1265 8890.5498 -7479.5679 8890.5498 c
-7480.0537 8890.5498 -7481.2974 8891.0127 -7481.2974 8892.5107 c
-7481.2974 8894.3438 -7480.4751 8895.041 -7479.8433 8895.041 c
-7479.4209 8895.041 -7478.8936 8894.7236 -7478.8936 8894.4492 c
-7478.8936 8894.1133 -7478.9575 8893.6914 -7479.5479 8893.6484 c
-7480.0537 8893.6064 -7480.3066 8893.374 -7480.3066 8893.0371 c
-7480.3066 8892.8262 -7480.1592 8892.6152 -7479.8218 8892.6152 c
-7479.3154 8892.6152 -7478.7041 8893.1855 -7478.0713 8893.9229 c
-7477.6714 8894.4082 -7476.7007 8894.9355 -7475.9209 8894.9355 c
-7475.1191 8894.9355 -7474.0654 8894.0293 -7474.0654 8892.6572 c
-7474.0654 8891.3926 -7475.4995 8890.084 -7476.2378 8889.5586 c
-7476.9546 8889.0313 -7477.3335 8888.6514 -7477.46 8888.4404 c
-7477.5654 8888.293 -7477.9033 8887.3438 -7478.1143 8887.3438 c
-7478.2607 8887.3438 -7478.3672 8887.5117 -7478.3672 8887.7236 c
-7478.3672 8888.04 -7478.1143 8888.6738 -7477.7759 8889.0098 c
-7477.6929 8889.1152 -7477.6494 8889.1787 -7477.6494 8889.2412 c
-7477.6494 8889.3896 -7477.8398 8889.4102 -7477.9873 8889.4102 c
-7478.5767 8889.4102 -7479.7793 8888.4404 -7479.7793 8886.6064 c
-7479.7793 8885.0244 -7478.7881 8884.1816 -7478.6406 8884.1816 c
-7478.5361 8884.1816 -7478.4297 8884.2861 -7478.3672 8884.498 c
-7476.6592 8890.6543 -7471.7822 8891.8779 -7469.3774 8891.8779 c
-7469.2729 8891.8779 -7469.1895 8891.9404 -7469.1895 8892.0898 c
-7469.1895 8892.2148 -7469.1895 8893.3125 -7469.3359 8893.3125 c
-7469.3774 8893.3125 -7469.4414 8893.29 -7469.5264 8893.2275 c
-7470.0942 8892.7637 -7470.3755 8892.4053 -7471.3022 8892.4053 c
-7471.7666 8892.4053 -7472.5679 8892.9316 -7472.5679 8893.5439 c
-7472.5679 8894.3232 -7471.8936 8895.041 -7471.4082 8895.041 c
-7471.0498 8895.041 -7470.9023 8894.9561 -7470.9023 8894.8301 c
-7470.9023 8894.7021 -7471.3662 8894.2607 -7471.3662 8894.1133 c
-7471.3662 8893.8594 -7471.3242 8893.7119 -7470.8809 8893.7119 c
-7470.4814 8893.7119 -7469.7842 8893.8818 -7469.3418 8894.1348 c
-7468.8774 8894.4082 -7467.7393 8895.041 -7466.7065 8895.041 c
-7465.9473 8895.041 -7464.9561 8894.5977 -7464.4702 8893.7969 c
-7464.4287 8893.7324 -7464.3862 8893.7119 -7464.3447 8893.7119 c
-7464.2393 8893.7119 -7464.1543 8893.7969 -7464.1338 8893.9453 c
-7464.0913 8894.3438 -7463.7534 8895.041 -7462.9312 8895.041 c
-7462.3408 8895.041 -7461.8135 8894.5342 -7461.8135 8894.0908 c
-7461.8135 8893.9229 -7461.9194 8893.8594 -7462.0239 8893.8594 c
-7462.1094 8893.8594 -7462.4878 8894.1133 -7462.5942 8894.1133 c
-7462.7407 8894.1133 -7463.6479 8893.501 -7463.7334 8893.3535 c
-7464.5127 8892.0674 -7464.5977 8891.9199 -7465.2295 8891.666 c
-7465.3984 8891.582 -7465.3984 8891.498 -7465.3984 8890.6338 c
-7465.3984 8890.5068 -7465.3984 8890.2109 -7465.5454 8890.043 c
-7465.8198 8889.7695 -7467.9287 8887.7021 -7468.1392 8887.7021 c
-7468.2241 8887.7021 -7468.4985 8887.9766 -7468.5835 8887.9766 c
-7468.6035 8887.9766 -7468.6255 8887.9766 -7468.6255 8887.9346 C
-7468.6035 8887.7871 l
-7468.6035 8887.6191 -7468.6455 8887.5332 -7468.8564 8887.5332 c
-7468.9199 8887.5332 -7469.1943 8887.6602 -7469.2568 8887.6602 c
-7469.3198 8887.6602 -7469.3623 8887.2178 -7469.4473 8887.2178 c
-7469.4678 8887.2178 -7469.8057 8887.4492 -7469.8896 8887.4492 c
-7470.0166 8887.4492 -7470.1006 8887.3652 -7470.1006 8887.2598 c
-7470.1006 8887.1973 -7470.1006 8886.7119 -7470.2065 8886.7119 c
-7470.2915 8886.7119 -7470.5225 8887.0059 -7470.5654 8887.0059 c
-7470.5854 8887.0059 -7470.5854 8886.9863 -7470.5854 8886.9219 C
-7470.5439 8886.501 l
-7470.5439 8886.4365 -7470.5854 8886.416 -7470.6494 8886.416 c
-7470.7119 8886.416 -7470.9658 8886.7324 -7471.0498 8886.7324 c
-7471.0918 8886.7324 -7471.1138 8886.6904 -7471.1138 8886.6064 c
-7471.1138 8886.5645 -7470.9233 8885.8477 -7470.9233 8885.6992 c
-7470.9233 8885.6152 -7470.9658 8885.5723 -7471.0078 8885.5723 c
-7471.0918 8885.5723 -7471.4297 8885.9316 -7471.4722 8885.9316 c
-7471.4927 8885.9316 -7471.4927 8885.9316 -7471.4927 8885.9102 c
-7471.4927 8885.8262 -7471.3882 8885.4668 -7471.3882 8885.4473 c
-7471.3882 8885.4258 -7471.4082 8885.4043 -7471.4297 8885.4043 c
-7471.4722 8885.4043 -7471.6826 8885.6152 -7471.7446 8885.6152 c
-7471.7666 8885.6152 -7471.7666 8885.6152 -7471.7666 8885.5723 c
-7471.7666 8885.4043 -7471.5137 8884.666 -7471.5137 8884.6025 c
-7471.5137 8884.5811 -7471.5352 8884.5605 -7471.5562 8884.5605 c
-7471.6826 8884.5605 -7472.1055 8885.1309 -7472.1465 8885.1309 c
-7472.1675 8885.1309 -7472.1675 8885.1094 -7472.1675 8885.0459 c
-7472.1675 8884.8555 -7471.8936 8883.9492 y
-7471.8936 8883.9277 -7471.9146 8883.9072 -7471.9351 8883.9072 c
-7472.0615 8883.9072 -7472.4414 8884.4541 -7472.5049 8884.4541 c
-7472.5264 8884.4541 -7472.5264 8884.4541 -7472.5264 8884.4131 c
-7472.2729 8883.5059 -7472.2729 8883.4219 v
-7472.2729 8883.3164 -7472.3154 8883.2744 -7472.3994 8883.2744 c
-7472.4634 8883.2744 -7472.6943 8883.6113 -7472.7783 8883.6113 c
-7472.8218 8883.6113 -7472.8418 8883.5703 -7472.8418 8883.5059 c
-7472.7783 8882.958 L
f
1 D
-7477.0386 8882.2207 m
-7477.1016 8882.2617 -7477.1865 8882.2832 -7477.2495 8882.2832 c
-7477.5874 8882.2832 -7477.6714 8880.2803 -7477.6714 8880.0898 c
-7477.6714 8880.0273 -7477.6289 8879.9863 -7477.5654 8879.9863 c
-7476.4272 8879.9863 -7474.5498 8881.9473 -7474.5498 8882.3672 c
-7474.5498 8882.4102 -7474.5498 8882.4307 -7474.5928 8882.4307 c
-7474.6138 8882.4307 -7474.6553 8882.4102 -7474.6982 8882.3887 c
-7475.0986 8882.1152 -7475.5215 8882.0098 -7476.1104 8882.0098 c
-7476.4902 8882.0098 -7476.7007 8882.0723 -7477.0386 8882.2207 c
f
-7475.3306 8886.1836 m
-7474.8882 8887.0059 -7473.8115 8887.0059 -7473.7271 8887.0059 c
-7473.5801 8887.0059 -7473.3906 8886.9863 -7473.3906 8886.8164 c
-7473.3906 8886.627 -7474.4238 8886.374 -7474.4238 8886.1836 c
-7474.2129 8885.8477 -7474.2129 8885.7627 v
-7474.2129 8885.3633 -7474.2129 8885.3203 -7474.0225 8885.3203 c
-7473.7915 8885.3203 -7472.9897 8885.6152 -7472.7378 8886.332 c
-7472.5474 8886.8594 -7471.5767 8888.5869 -7469.4258 8888.5869 c
-7468.5615 8888.5869 -7468.2446 8888.4404 -7468.0977 8888.4404 c
-7467.7817 8888.4404 -7465.8418 8890.4863 -7465.8198 8890.6543 c
-7465.7998 8890.7598 -7465.7998 8890.8867 -7465.7998 8890.9922 c
-7465.7998 8891.2031 -7465.7998 8891.6035 -7466.1782 8891.8564 c
-7466.3896 8891.9834 -7466.4951 8892.2363 -7466.4951 8892.4883 c
-7466.4951 8892.5947 -7466.4951 8892.9531 -7466.2207 8892.9531 c
-7465.9473 8892.9531 -7465.9058 8892.8057 -7465.9058 8892.5107 c
-7465.9058 8892.3223 -7465.7358 8892.2148 -7465.5889 8892.2148 c
-7465.4399 8892.2148 -7464.8506 8892.5107 -7464.8506 8892.9316 c
-7464.8506 8893.1641 -7465.1455 8894.2393 -7466.4321 8894.2393 c
-7467.4014 8894.2393 -7467.4014 8894.1133 -7467.4014 8892.7197 c
-7467.4014 8891.4561 -7467.3594 8891.0547 -7467.2119 8889.917 c
-7467.1904 8889.917 -7467.1904 8889.8955 y
-7467.1904 8889.748 -7467.3174 8889.6846 -7467.4233 8889.6846 c
-7467.4438 8889.6846 -7467.4648 8889.7051 -7467.4863 8889.7051 c
-7467.6118 8889.7266 -7467.9072 8890.043 -7468.8145 8890.0205 c
-7470.7119 8890.0205 -7474.9087 8888.4619 -7476.2793 8885.9736 c
-7476.8906 8884.8984 -7477.2705 8883.5273 -7477.2705 8883.2744 c
-7477.2705 8882.7256 -7476.2578 8882.5576 -7476.0049 8882.5576 c
-7474.6553 8882.5576 -7473.2847 8884.2227 -7473.2847 8884.666 c
-7473.2847 8884.708 -7473.3271 8884.75 -7473.3486 8884.75 c
-7473.3906 8884.75 -7473.4326 8884.7295 -7473.4961 8884.6875 c
-7473.6431 8884.54 -7474.2334 8883.8857 -7474.8662 8883.8857 c
-7475.5625 8883.8857 -7475.5835 8884.3496 -7475.5835 8884.7715 c
-7475.5835 8885.2148 -7475.5415 8885.7832 -7475.3306 8886.1836 c
f
0 D
-7471.5352 8882.873 m
-7471.5352 8883.0205 -7471.5352 8883.3379 -7471.2192 8883.3379 c
-7471.1553 8883.3379 -7471.0918 8883.3164 -7471.0278 8883.2324 c
-7470.9863 8883.1465 -7470.8608 8882.7051 -7470.7754 8882.7051 c
-7470.7334 8882.7051 -7470.7119 8882.7256 -7470.7119 8882.7891 c
-7470.7119 8883.0205 -7470.8174 8883.4004 -7470.8174 8883.6338 c
-7470.8174 8883.7803 -7470.6694 8883.9492 -7470.5225 8883.9492 c
-7470.3115 8883.9492 -7470.1855 8883.5273 -7470.1226 8883.3164 c
-7470.1006 8883.2529 -7470.0586 8883.2324 -7470.0386 8883.2324 c
-7470.0166 8883.2529 -7470.0166 8883.2744 V
-7470.0386 8883.8018 l
-7470.0386 8884.0332 -7470.0386 8884.2227 -7469.8271 8884.2227 c
-7469.6782 8884.2227 -7469.4897 8883.4219 -7469.3418 8883.4219 c
-7469.3198 8883.4219 -7469.2998 8883.4434 -7469.2998 8883.5059 c
-7469.2998 8883.5703 -7469.3623 8883.9072 -7469.3623 8883.9912 c
-7469.3623 8884.1816 -7469.3418 8884.6025 -7469.1104 8884.6025 c
-7469.0254 8884.6025 -7468.8774 8884.1172 -7468.7935 8884.1172 c
-7468.7729 8884.1172 -7468.7729 8884.1387 -7468.7729 8884.1816 c
-7468.7729 8884.2656 -7468.8994 8884.624 -7468.8994 8884.708 c
-7468.8994 8884.8125 -7468.7935 8884.9199 -7468.7095 8884.9199 c
-7468.5835 8884.9199 -7468.3506 8884.3066 -7468.3086 8884.3066 c
-7468.2666 8884.3066 -7468.2446 8884.3711 -7468.2446 8884.4346 c
-7468.2446 8884.54 -7468.3926 8884.9609 -7468.3926 8885.0459 c
-7468.3926 8885.1934 -7468.3286 8885.2773 -7468.2666 8885.2773 c
-7468.1826 8885.2773 -7468.0342 8884.877 -7467.9502 8884.877 c
-7467.9072 8884.877 -7467.8862 8884.9824 -7467.8862 8885.0459 c
-7468.0762 8885.7627 -7468.0762 8885.9102 v
-7468.0762 8886.0371 -7468.0342 8886.0781 -7467.9922 8886.0781 c
-7467.9072 8886.0781 -7467.7178 8885.6152 -7467.6338 8885.6152 c
-7467.5918 8885.6152 -7467.5703 8885.6787 -7467.5703 8885.7627 c
-7467.5703 8885.9102 -7467.7817 8886.4805 -7467.7817 8886.584 c
-7467.7817 8886.7324 -7467.7817 8886.9219 -7467.6758 8886.9219 c
-7467.6338 8886.9219 -7467.4863 8886.7119 -7467.4438 8886.7119 c
-7467.4014 8886.7119 -7467.3809 8886.7539 -7467.3809 8886.8164 c
-7467.3809 8886.8799 -7467.5073 8887.1758 -7467.5073 8887.2383 c
-7467.5073 8887.3652 -7464.9561 8890.084 -7464.4287 8890.084 c
-7463.9233 8890.084 -7463.8594 8890.084 -7463.7744 8890.2754 c
-7463.6904 8890.5068 -7463.5854 8890.7393 -7463.1426 8891.0127 c
-7462.0039 8891.6445 -7461.8774 8891.7305 -7461.8135 8892.0469 c
-7461.7295 8892.5313 -7461.7085 8892.5732 -7461.3926 8892.7842 c
-7461.2446 8892.8896 -7461.2026 8892.9951 -7461.2026 8893.1426 c
-7461.2026 8893.501 -7461.2026 8893.5439 -7461.0127 8893.5439 c
-7460.7598 8893.5439 -7460.4214 8892.8691 -7460.4214 8892.5107 c
-7460.4214 8891.5615 -7460.8018 8891.4561 -7461.4126 8891.2861 c
-7461.5615 8891.2451 -7461.7085 8891.1387 -7461.7085 8891.0547 c
-7461.7085 8891.0127 -7461.6875 8890.9922 -7461.6455 8890.9707 c
-7460.7598 8890.4658 -7460.4214 8889.7695 -7460.4214 8889.1992 c
-7460.4214 8888.3984 -7461.7085 8884.6875 -7461.7085 8884.3496 c
-7461.7085 8883.8643 -7461.5615 8883.8223 -7461.3711 8883.8223 c
-7461.2241 8883.8223 -7460.7178 8884.3496 -7460.5903 8884.3496 c
-7460.5073 8884.3496 -7460.4214 8884.2861 -7460.4214 8884.1172 c
-7460.4214 8883.8857 -7460.8657 8882.8525 -7461.8984 8882.8525 c
-7462.4878 8882.8525 -7462.8682 8883.3789 -7462.8682 8883.8418 c
-7462.8682 8884.793 -7462.5518 8884.9668 -7462.1934 8885.5371 c
-7462.1294 8885.6641 -7462.0879 8885.79 -7462.0879 8885.8965 c
-7462.0879 8886.1699 -7462.7202 8886.0908 -7463.0786 8886.0908 c
-7463.2256 8886.0908 -7463.3955 8886.0645 -7463.3955 8885.958 c
-7463.3955 8881.3418 -7466.6426 8877.792 -7470.5225 8877.0537 c
-7470.8394 8876.9893 -7470.9863 8876.8643 -7470.9863 8876.7383 c
-7470.9863 8876.6953 -7470.1006 8875.5781 -7468.6255 8875.5781 c
-7466.8535 8875.5781 -7465.7153 8877.0537 -7465.7153 8877.8125 c
-7465.7153 8877.8965 -7465.7568 8877.9609 -7465.8198 8877.9609 c
-7465.9058 8877.9609 -7466.8535 8877.0117 -7467.0854 8877.0117 c
-7467.2119 8877.0117 -7467.3174 8877.1172 -7467.3174 8877.2227 c
-7467.3174 8877.3496 -7467.2334 8877.4746 -7467.0439 8877.6221 c
-7466.9814 8877.6445 -7465.5454 8879.332 -7465.2515 8879.6689 c
-7464.6401 8880.3857 -7463.8594 8881.165 -7462.6362 8881.165 c
-7461.4561 8881.165 -7460.4214 8879.9648 -7460.4214 8879.2051 c
-7460.4214 8878.4258 -7460.8857 8877.7285 -7461.3711 8877.3281 c
-7462.8896 8876.0625 -7462.8896 8875.6836 -7462.8896 8875.4512 c
-7462.8896 8875.1348 -7462.6992 8875.0098 -7462.4878 8875.0098 c
-7462.1514 8875.0098 -7461.9824 8875.1563 -7461.9824 8875.8301 c
-7461.9824 8876.168 -7461.6455 8876.5059 -7461.2026 8876.5059 c
-7460.7598 8876.5059 -7460.4434 8876.127 -7460.4434 8875.5146 c
-7460.4434 8874.9043 -7461.2871 8874.165 -7462.4878 8874.165 c
-7464.1338 8874.165 -7464.6182 8875.3242 -7464.6182 8875.8096 c
-7464.6182 8876.1465 -7464.5127 8876.7383 -7464.1958 8877.0957 c
-7463.8594 8877.4971 -7463.4595 8878.1934 -7463.1846 8878.9102 c
-7462.9521 8879.5635 -7462.4258 8879.9219 -7462.0879 8879.9219 c
-7462.0239 8879.9219 -7462.0039 8879.9004 -7462.0039 8879.8584 c
-7462.0039 8879.7529 -7462.2144 8879.373 -7462.2144 8879.2891 c
-7462.2144 8878.9102 -7462.1094 8878.6992 -7461.8984 8878.6992 c
-7461.3711 8878.6992 -7461.2656 8879.3516 -7461.2656 8879.584 c
-7461.2656 8880.0703 -7461.6245 8880.6592 -7462.6782 8880.6592 c
-7464.0063 8880.6592 -7465.1245 8878.9102 -7465.1245 8878.8467 c
-7465.1245 8878.8242 -7465.0825 8878.2773 -7465.0825 8878.1709 c
-7465.0825 8876.2725 -7466.79 8875.0098 -7468.6255 8875.0098 c
-7470.1855 8875.0098 -7471.3447 8876.2324 -7471.5352 8876.5264 c
-7471.6401 8876.6953 -7471.7666 8876.7793 -7471.9146 8876.7793 c
-7472.2729 8876.7793 -7475.1191 8876.7178 -7475.1191 8876.2949 c
-7475.1191 8876.2529 -7474.9937 8875.7891 -7474.8242 8875.7891 c
-7474.7607 8875.7891 -7474.6982 8875.8301 -7474.6353 8875.8945 c
-7474.4438 8876.127 -7474.0225 8876.2529 -7473.6431 8876.2529 c
-7473.0942 8876.2529 -7472.1895 8875.6621 -7472.1895 8874.9248 c
-7472.1895 8874.6289 -7472.5679 8874.1445 -7472.8838 8874.1445 c
-7473.1377 8874.1445 -7474.1914 8874.8613 -7474.4238 8874.8613 c
-7474.7402 8874.8613 -7474.8662 8874.7129 -7475.1606 8874.376 c
-7475.3306 8874.1865 -7475.4575 8874.165 -7475.6465 8874.165 c
-7475.8154 8874.165 -7475.9634 8874.2705 -7475.9634 8874.418 c
-7475.9634 8874.5859 -7475.6465 8874.9043 -7475.6265 8875.1777 c
-7475.6265 8875.3242 -7475.6055 8875.5557 -7475.6055 8875.7461 c
-7475.6055 8876 -7475.6265 8876.3584 -7475.8994 8876.3584 c
-7476.7217 8876.3584 -7478.7681 8875.0723 -7479.6538 8874.4805 c
-7480.1592 8874.1445 -7480.2432 8874.1445 -7480.3066 8874.1445 c
-7480.4336 8874.1445 -7480.5176 8874.2285 -7480.5176 8874.376 c
-7480.5176 8874.502 -7478.0713 8876.6543 -7475.8994 8877.3906 c
-7475.5835 8877.4971 -7475.6055 8877.6445 -7475.5625 8877.8125 c
-7475.1406 8879.5635 -7473.5166 8881.7363 -7472.9263 8881.7363 c
-7472.7783 8881.7363 -7472.7158 8881.7363 -7472.7158 8881.8418 c
-7472.7158 8882.0508 -7472.6104 8882.2832 -7472.4634 8882.2832 c
-7472.4209 8882.2832 -7472.2524 8882.0508 -7472.21 8882.0508 c
-7472.1255 8882.0508 -7472.0615 8882.5156 -7472.0415 8882.5986 c
-7471.9995 8882.7051 -7471.9146 8882.7891 -7471.8506 8882.7891 c
-7471.7666 8882.7891 -7471.5986 8882.4521 -7471.5352 8882.4521 c
-7471.5137 8882.4521 -7471.4927 8882.4717 -7471.4927 8882.5156 c
-7471.5352 8882.873 L
f
1 D
-7472.9058 8878.3613 m
-7473.0942 8878.7832 -7473.2002 8879.0361 -7473.2002 8879.416 c
-7473.2002 8879.6689 -7472.7783 8880.9131 y
-7472.7783 8880.9766 -7472.7998 8880.9971 -7472.8633 8880.9971 c
-7473.2847 8880.9971 -7475.0352 8878.7617 -7475.0352 8877.8965 c
-7475.0352 8877.792 -7474.9722 8877.7285 -7474.8662 8877.7285 c
-7474.8042 8877.7285 -7472.8633 8877.918 -7472.8633 8878.1504 c
-7472.8633 8878.2139 -7472.8838 8878.2773 -7472.9058 8878.3613 c
f
-7464.8081 8889.3262 m
-7465.7568 8888.4404 -7466.6846 8887.5762 -7466.6846 8887.0273 c
-7466.6846 8886.6904 -7466.6226 8886.2891 -7466.6226 8885.8682 c
-7466.6226 8884.4131 -7467.9722 8883.084 -7468.8774 8882.6211 c
-7469.3623 8882.3672 -7469.8481 8881.7988 -7469.8481 8881.4395 c
-7469.8481 8881.334 -7469.8057 8881.2715 -7469.7422 8881.2715 c
-7469.6582 8881.2715 -7469.5942 8881.292 -7469.5103 8881.292 c
-7469.4473 8881.292 -7469.2158 8881.165 -7469.1519 8881.165 c
-7469.0049 8881.165 -7468.6035 8881.8203 -7468.4561 8881.8203 c
-7468.2446 8881.8203 -7468.1826 8881.6094 -7468.1826 8881.4609 c
-7468.1826 8881.1025 -7468.7305 8879.7529 -7469.9951 8879.7529 c
-7470.7554 8879.7529 -7471.0498 8880.1953 -7471.0498 8880.5332 c
-7471.0498 8881.165 -7470.5225 8881.7773 -7470.3975 8881.9473 c
-7470.3545 8881.9883 -7470.3335 8882.0303 -7470.3335 8882.0723 c
-7470.3335 8882.1152 -7470.3545 8882.1348 -7470.4175 8882.1348 c
-7470.6694 8882.1348 -7472.6519 8881.1025 -7472.6519 8879.373 c
-7472.6519 8878.9521 -7472.4209 8878.1504 -7471.7666 8878.1504 c
-7469.2998 8878.1504 -7465.1675 8882.0098 -7465.1675 8886.458 c
-7465.1675 8886.8379 -7465.3984 8887.3867 -7465.4614 8887.7656 c
-7465.4834 8887.7871 -7465.4834 8887.8291 -7465.4834 8887.8701 c
-7465.4834 8887.9971 -7465.4399 8888.166 -7465.3145 8888.166 c
-7465.0615 8888.166 -7463.3955 8887.9766 -7463.0366 8887.9766 c
-7461.3926 8887.9766 -7460.9702 8887.9766 -7460.9702 8889.0723 c
-7460.9702 8890.2959 -7462.1094 8890.6133 -7462.5098 8890.6133 c
-7462.8896 8890.6133 -7463.2695 8890.3164 -7463.2695 8889.958 c
-7463.2695 8889.8525 -7463.0791 8889.4102 -7463.0791 8889.3262 c
-7463.0791 8889.1787 -7463.2065 8889.0947 -7463.3325 8889.0947 c
-7463.4795 8889.0947 -7463.9858 8889.5996 -7464.1338 8889.5996 c
-7464.3862 8889.5996 -7464.6401 8889.4736 -7464.8081 8889.3262 c
f
*U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 \357\362., \356\342\340\353\374\355\340\377/ Adobe Calligr) -
(aphic Brush Tool/ 5 \357\362., \356\342\340\353\374\355\340\377/ Adobe Calligraphic Brush To) -
(ol/ 5 \357\362., \357\353\356\361\352\340\377/ Adobe Calligraphic Brush Tool/ 3 \357\362., \352\360\363\343) -
(\353\340\377/ Adobe Calligraphic Brush Tool/ 7 \357\362., \352\360\363\343\353\340\377/ Adobe Call) -
(igraphic Brush Tool/ 15 \357\362., \352\360\363\343\353\340\377/ Adobe ArtOnPath Brush To) -
(ol/ \323\343\356\353\374\355\373\351 \352\340\360\340\355\344\340\370/ Adobe ArtOnPath Brush Tool/ \316\341\342\356\344\352\340 \361 \347) -
(\340\356\361\362\360\345\355\350\345\354/ Adobe ArtOnPath Brush Tool/ \321\357\350\366\340 \342 \342\350\344\345 \366\342\345\362\356\367\355\356\343) -
(\356 \361\362\345\341\353\377/ Adobe PatternOnPath Brush Tool/ \312\350\361\362\374 \361 \352\360\340\361\355\356\351 \361\362\360\345) -
(\353\352\356\351 / Adobe PatternOnPath Brush Tool/ \303\356\362\350\367\355\373\351/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 \757\762., \752\760\763\743\753\740\777)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 \757\762., \756\742\740\753\774\755\740\777)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 \757\762., \752\760\763\743\753\740\777)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 \757\762., \756\742\740\753\774\755\740\777)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 \757\762., \757\753\756\761\752\740\777)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 \757\762., \752\760\763\743\753\740\777)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\716\741\742\756\744\752\740 \761 \747\740\756\761\762\760\745\755\750\745\754)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\721\757\750\766\740 \742 \742\750\744\745 \766\742\745\762\756\767\755\756\743\756 \761\762\745\741\753\777)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\723\743\756\753\774\755\773\751 \752\740\760\740\755\744\740\770)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(\703\756\762\750\767\755\773\751)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(\712\750\761\762\774 \761 \752\760\740\761\755\756\751 \761\762\760\745\753\752\756\751 )
(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -
(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -
(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\721\756\742\754\745\771\745\755\750\745]) 0 Xs
([\721\756\742\754\745\771\745\755\750\745])
Pc
0 0 0 0 k
(\701\745\753\773\751)
Pc
0 0 0 1 k
(\727\745\760\755\773\751)
Pc
0 1 1 0 k
(CMYK \752\760\740\761\755\773\751)
Pc
0 0 1 0 k
(CMYK \746\745\753\762\773\751)
Pc
1 0 1 0 k
(CMYK \747\745\753\745\755\773\751)
Pc
1 0 0 0 k
(CMYK \743\756\753\763\741\756\751)
Pc
1 1 0 0 k
(CMYK \761\750\755\750\751)
Pc
0 1 0 0 k
(CMYK \757\763\760\757\763\760\755\773\751)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (\713\750\755\745\751\755\773\751 \743\760\740\744\750\745\755\762) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\713\750\755\745\751\755\773\751 \743\760\740\744\750\745\755\762)
Pc
Bb
2 (\707\740\762\745\754\755\745\755\750\745) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\707\740\762\745\754\755\745\755\750\745)
Pc
Bb
0 0 0 0 Bh
2 (\720\740\744\750\740\753\774\755\773\751 \743\760\740\744\750\745\755\762) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\720\740\744\750\740\753\774\755\773\751 \743\760\740\744\750\745\755\762)
Pc
Bb
0 0 0 0 Bh
2 (\714\777\743\752\756\745 \767\745\760\755\756\745 \742\750\755\774\745\762\750\760\756\742\740\755\750\745) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\714\777\743\752\756\745 \767\745\760\755\756\745 \742\750\755\774\745\762\750\760\756\742\740\755\750\745)
Pc
Bb
2 (\707\740\752\740\762 \742 \757\763\761\762\773\755\745) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\707\740\752\740\762 \742 \757\763\761\762\773\755\745)
Pc
Bb
0 0 0 0 Bh
2 (\714\745\744\755\773\751 \760\740\744\750\740\753\774\755\773\751) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\714\745\744\755\773\751 \760\740\744\750\740\753\774\755\773\751)
Pc
(\723\747\756\760 "\720\773\741\740") 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\723\747\756\760 "\720\773\741\740")
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0)
Pc
0 0.75 1 0 k
(C=0 M=75 Y=100 K=0)
Pc
0 0.1 0.95 0 k
(C=0 M=10 Y=95 K=0)
Pc
0.85 0.1 1 0 k
(C=85 M=10 Y=100 K=0)
Pc
1 0.9 0 0 k
(C=100 M=90 Y=0 K=0)
Pc
0.6 0.9 0.000031 0.000031 k
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(\321\353\356\351 1) Ln
0 A
0 D
0 O
0.2 0.34 0.77 0 k
0 J 0 j 1 w 4 M []0 d0 XR
578.2432 1347.2324 m
550.3101 1367.0288 536.8135 1293.0552 v
523.3149 1219.0835 542.8867 1210.5923 516.752 1183.7622 c
506.4692 1173.208 465.209 1170.8394 y
519.4253 1112.0039 590.166 1150.7661 v
608.6528 1160.8945 578.2432 1347.2324 y
f
0.269993 0.553307 0.835203 0.097688 k
556.5 1159.5303 m
573.1875 1177.0073 618.1577 1290.9111 y
683.4609 1270.3174 678.582 1204.9351 v
674.2729 1147.1914 606.1909 1094.4155 y
510.5142 1143.2295 l
547.165 1149.7529 556.5 1159.5303 v
f
0.105837 0.434485 0.644587 0.000488 k
665.3799 1216.8682 m
637.3408 1069.9824 653.293 1056.1582 v
669.2451 1042.3335 547.165 1089.02 y
566.3213 1079.4453 574.7769 1140.6318 v
576.8149 1155.3809 578.8076 1184.5903 y
665.3799 1216.8682 l
f
0.119234 0.530938 0.757046 0.006317 k
639.501 1177.7651 m
638.2212 1177.4209 609.9482 1099.4805 609.1465 1092.3125 c
608.0947 1082.9272 636.0415 1076.4727 y
661.9854 1218.5859 l
639.501 1177.7651 l
f
u
0.22 0.84 0.81 0.3 k
940.5059 497.5801 m
936.2842 534.8877 916.8594 543.8965 889.1514 544.8906 c
857.7178 546.0156 301.4536 544.8906 273.9033 544.8906 c
250.4023 544.8906 227.1172 528.4453 221.7168 498.3662 C
221.7495 497.5801 L
222.0454 361.6084 222.1201 281.5771 v
222.0454 201.5537 221.8721 120.2881 221.7939 84.5039 c
221.7788 83.665 223.042 65.5811 Y
225.0449 32.0488 250.4023 18.2705 273.9033 18.2705 c
301.4536 18.2705 857.7178 17.1445 889.1514 18.2705 c
916.8594 19.2666 937.1201 26.2549 941.3438 63.5635 C
941.3799 65.5811 L
941.3799 71.6328 941.3799 82.2324 v
941.3799 154.0498 940.5059 497.5801 Y
f
0.22 0.84 1 0.11 k
921.625 482.2236 m
917.5957 517.2988 899.041 525.7637 872.5762 526.6963 c
842.5596 527.751 311.3062 526.6963 284.9937 526.6963 c
262.5508 526.6963 241.5752 510.499 236.4219 482.2236 C
235.186 482.2236 L
235.1987 477.2188 235.2183 468.4102 v
235.2183 467.7881 235.1699 467.2051 235.186 466.5781 c
235.1987 465.9482 235.2144 465.2305 235.2256 464.4395 c
235.3042 430.8008 235.4678 354.418 235.5391 279.1895 c
235.4678 203.9678 236.4219 76.1582 Y
235.1836 44.1738 249.7554 22.8682 276.2695 22.5127 c
302.7593 22.1543 842.5928 18.4053 872.6113 19.4629 c
899.0752 20.3955 924.4453 26.6104 928.4805 61.6729 C
926.332 82.2891 926.332 92.249 v
926.332 159.7539 922.457 424.4697 922.457 466.5781 c
922.457 476.5381 921.625 482.2236 Y
f
u
u
0.03946 0.641749 0.484382 0.000275 k
346.0015 300.0557 m
308.6069 312.9619 282.4727 297.3164 269.4053 277.376 c
253.6138 253.2793 255.5752 223.3809 274.3066 202.9854 c
291.5513 184.2109 319.8887 186.7842 338.1558 197.9736 c
363.4634 213.4707 357.416 246.6406 Y
357.3418 238.8848 354.8735 220.8691 330.3799 209.7246 c
318.6621 204.3906 302.8384 205.1279 286.521 218.6445 c
275.2197 228.0059 266.5547 250.3535 279.4102 270.8232 c
289.6948 287.2129 308.5674 304.4932 344.6968 291.9043 c
412.7529 268.2021 372.0986 149.7129 374.043 154.5811 c
393.9507 204.3936 401.6909 280.8506 346.0015 300.0557 c
f
U
342.686 226.9453 m
337.4985 219.3789 320.8447 210.2656 303.2695 217.7871 c
286.9209 224.7822 278.1968 240.7129 283.0293 260.5283 c
288.043 281.0723 308.0923 290.9453 321.29 291.2188 c
341.5264 291.6436 354.9883 284.0938 362.8896 273.9346 c
364.8569 271.4043 333.8369 298.335 308.105 274.5518 c
288.6392 256.5576 303.0479 235.0801 315.7959 233.9307 c
326.7905 232.958 335.71 242.5479 327.1475 254.0459 c
320.7588 262.626 306.8579 257.5654 y
315.1016 274.2725 333.3223 266.9609 v
354.3511 258.5215 348.8623 235.9668 342.686 226.9453 c
f
u
u
383.8159 142.8193 m
403.2446 201.9922 453.373 214.8145 490.5166 209.3867 c
535.4043 202.8252 569.1709 170.0947 569.1416 126.5117 c
569.1113 83.4189 552.5195 57.3877 516.2617 48.2764 c
458.2651 33.7031 437.2407 81.5771 Y
446.4722 73.5693 473.4155 53.2598 506.5547 66.9189 c
525.291 74.6406 541.3228 88.2598 541.8438 127.8994 c
542.147 150.9971 525.335 184.5303 487.793 190.7559 c
457.7422 195.7383 412.4043 193.4414 394.7852 135.8613 c
367.4497 46.5303 450.5273 21.2891 443.0635 22.1855 c
423.4341 24.5361 357.4697 62.5664 383.8159 142.8193 c
f
/BBAccumRotation (0.569864) XT
U
480.7119 73.5049 m
495.0503 71.7227 522.8955 80.0273 532.3916 108.5898 c
541.2139 135.1494 531.5581 162.0684 503.1753 177.0596 c
473.7305 192.6084 445.7427 177.1641 430.7427 162.7842 c
410.415 143.291 404.2319 111.9951 405.3916 94.9941 c
406.3896 80.3184 405.5747 156.6846 460.4639 162.1631 c
501.9941 166.2979 512.2617 126.9033 500.2974 110.7002 c
489.9644 96.7178 469.3564 96.2334 464.7397 118.3154 c
461.3066 134.8096 481.7788 145.8887 y
454.8711 150.3799 444.7915 124.1211 v
431.978 90.7305 463.6367 75.6416 480.7119 73.5049 c
f
/BBAccumRotation (0.569864) XT
U
u
290.0479 131.7197 m
277.9253 130.2559 261.4253 117.5576 258.1655 102.1846 c
254.6484 85.5908 262.9268 75.5391 277.8525 67.9131 c
294.6665 59.3193 309.8262 59.6641 310.9746 59.4502 c
314.1729 58.8545 284.3145 68.3545 278.457 88.5957 c
272.9629 107.5957 290.0479 131.7197 y
f
290.8218 132.2227 m
291.3203 129.2012 284.689 120.1777 282.3921 110.7578 c
280.0815 101.3447 279.1636 90.7803 287.6416 78.9063 c
297.1167 65.6416 335.1982 50.5908 y
318.9204 62.0195 315.2969 84.7188 v
311.1919 110.377 290.8218 132.2227 y
f
292.6426 132.4492 m
295.2319 130.6348 309.6074 116.4824 314.5586 100.375 c
319.5225 84.2646 320.3833 61.5098 340.6655 49.3252 c
343.9097 47.376 346.0879 46.7988 349.5166 46.4336 c
336.0728 50.5244 342.1421 89.7979 v
346.0044 114.7861 332.9277 128.4922 322.9712 132.333 c
308.7827 137.8115 292.6426 132.4492 y
f
290.8174 132.9785 m
289.877 135.167 287.2139 136.0879 285.8721 137.9883 c
283.8311 140.8701 285.0962 144.6875 288.416 146.0313 c
292.3423 147.6318 295.3682 144.2871 294.1299 140.3291 c
292.7939 136.0645 290.8174 132.9785 y
f
284.0347 138.6943 m
282.5693 140.623 282.2837 148.1572 289.8721 148.5146 c
297.3501 148.8672 297.4629 140.6328 296.5225 139.1436 c
296.0562 138.3896 310.7119 149.3594 298.4727 159.0947 c
288.7573 166.8252 279.2036 157.832 278.311 151.292 c
277.1592 142.873 284.0347 138.6943 y
f
U
u
u
321.6479 381.875 m
318.501 415.6709 343.6841 446.0732 385.6382 457.416 C
392.3882 459.2051 L
413.6401 464.7412 440.4697 476.4141 440.8105 491.1963 c
441.0229 500.3984 436.7363 506.1748 430.1602 507.7646 c
423.3594 509.4131 417.8628 503.708 416.3086 499.5439 c
413.0977 490.9502 420.1567 485.4941 Y
416.2925 487.8271 410.9854 492.9209 412.1079 500.6592 c
413.1304 507.7158 419.6729 515.0508 429.9888 513.9941 c
440.3906 512.9277 447.5962 505.875 447.5679 490.71 c
447.5313 471.7764 416.9492 460.0664 393.1587 453.8545 C
386.4683 452.0869 L
368.2744 447.1689 329.4307 431.2197 329.2007 384.2363 c
328.98 338.0977 374.6509 287.0664 Y
356.6006 301.7461 324.9951 345.9941 321.6479 381.875 c
f
U
u
358.1387 432.1289 m
386.1484 454.21 418.6943 451.5342 437.8535 437.3438 c
461.0054 420.1934 468.1958 389.0439 458.9834 365.8486 c
450.3062 343.9961 421.3618 336.0889 400.9355 339.916 c
370.5098 345.6191 370.0664 381.4492 Y
372.8213 374.1982 374.9927 356.3838 401.8306 354.3994 c
414.6709 353.4453 431.4722 357.9893 442.1094 376.3154 c
449.4736 389.0078 449.874 412.9697 430.7349 427.7334 c
415.4141 439.5547 389.0459 446.9346 362.1821 424.9346 c
306.4287 379.2725 382.8228 278.5879 379.4653 282.6152 c
344.1851 324.9336 311.8765 395.6611 358.1387 432.1289 c
f
U
386.5366 364.6787 m
394.0239 359.3721 412.8008 356.584 426.689 369.7168 c
439.6074 381.9375 442.2837 399.9023 430.897 416.8213 c
419.0859 434.3652 397.0234 434.208 384.2437 430.8936 c
368.8296 426.8926 357.2261 413.5977 353.5679 401.2598 c
350.8003 391.9229 365.0522 438.4766 404.8457 422.9531 c
429.5435 413.3184 424.6816 387.042 409.3525 380.5352 c
399.1929 376.2227 387.688 381.7324 391.7437 395.4814 c
394.77 405.7393 409.563 405.8018 y
395.1226 415.9941 382.3218 404.7178 v
367.3394 391.5254 377.623 371.0098 386.5366 364.6787 c
f
U
u
535.8608 188.5977 m
565.2979 172.0391 588.8916 144.6357 578.6011 95.3516 C
576.9941 88.5938 L
571.8525 67.3486 567.2266 37.4219 580.5205 29.3926 c
588.3604 24.6582 597.437 24.7627 603.3252 32.0801 c
607.6899 37.501 605.5938 45.8701 602.939 49.4063 c
596.7827 57.6152 586.4985 54.1055 Y
590.3604 56.3945 598.3613 57.0684 604.0752 51.7988 c
610.0244 46.3154 611.4551 36.4854 606.2759 29.6172 c
600.0059 21.3125 589.083 19.6475 578.8462 26.249 c
564.2827 35.6377 566.1934 66.6484 571.9351 90.4316 C
573.5342 97.1299 L
577.7803 115.3975 580.5596 154.5723 542.8188 182.1729 c
524.8877 195.2871 503.7441 200.1055 Y
508.2939 199.8369 518.7314 198.2314 535.8608 188.5977 c
f
/BBAccumRotation (1.905302) XT
U
506.8857 287.4805 m
503.2856 294.1455 492.8369 304.7939 480.7212 309.6973 c
468.479 314.6504 455.209 313.0459 447.46 298.1279 c
438.5825 281.0303 445.002 261.3701 444.9224 260.3613 c
444.7163 257.7051 447.4253 284.3379 468.7334 292.0586 c
484.8535 297.9004 506.8857 287.4805 y
f
/BBAccumRotation (0.057346) XT
509.0093 283.9004 m
506.3994 283.3857 498.4019 288.8955 490.1729 290.6328 c
481.9526 292.3799 472.6909 292.9951 462.709 285.2256 c
448.1201 273.8633 439.8545 240.7002 y
454.1069 256.2773 469.3486 260.1943 v
502.2012 268.6406 509.0093 283.9004 y
f
/BBAccumRotation (0.057346) XT
510.2578 280.9404 m
508.7554 278.6504 496.877 266.5098 483.0493 261.7793 c
469.2231 257.0449 450.9995 254.1748 440.6523 236.4561 c
435.0229 226.8076 433.459 219.4189 433.5537 216.0986 c
440.896 226.0977 473.9287 231.2813 v
502.562 235.7783 508.2007 246.5195 510.9751 255.3516 c
514.5015 266.5664 510.2578 280.9404 y
f
/BBAccumRotation (0.057346) XT
507.9707 283.8369 m
509.6792 284.9922 510.0308 287.4121 511.4331 288.8652 c
513.5571 291.0693 516.3154 290.9131 518.2139 288.46 c
520.1865 285.9111 518.3413 281.8027 514.7671 282.2119 c
510.9185 282.6563 507.9707 283.8369 y
f
509.9297 289.1436 m
510.5361 291.1582 515.8916 294.7871 519.7939 290.0635 c
523.9282 285.0596 518.1416 280.7188 516.6196 280.6152 c
515.856 280.5596 531.0234 275.8877 531.6001 289.4326 c
532.061 300.1914 520.8809 302.2959 515.8418 299.5869 c
509.3472 296.0957 509.9297 289.1436 y
f
578.0708 139.3496 m
589.6646 48.8936 648.2935 29.0166 v
695.1216 13.1436 717.7129 49.4795 715.4893 74.6543 c
712.499 108.5361 682.7573 108.8076 Y
684.0469 108.9443 L
714.4082 109.1758 717.4785 74.8232 v
719.8223 48.6221 696.6592 10.21 647.9131 26.7324 c
586.8848 47.4248 576.9546 140.415 Y
578.0708 139.3496 L
f
/BBAccumRotation (1.725575) XT
677.1885 77.0361 m
677.2407 64.7695 660.7803 59.9717 654.2822 73.8027 c
648.9146 85.2354 661.1655 106.5469 681.8735 100.5693 c
707.4937 93.1797 709.207 68.5928 697.9097 53.333 c
688.646 40.8154 673.1187 38.8672 655.3486 43.1875 c
593.3022 58.2881 576.9009 143.6699 Y
574.6128 148.8262 L
590.751 56.7275 656.1279 40.8125 v
674.853 36.2578 689.5298 38.9414 699.2896 52.1328 c
711.1924 68.2119 709.0571 95.7188 681.7402 102.2412 c
660.3994 107.3359 645.9917 84.249 651.6475 72.2031 c
658.4961 57.627 678.7544 61.4951 678.4609 75.75 C
677.1885 77.0361 L
f
/BBAccumRotation (0.068612) XT
327.7197 413.5166 m
353.3965 448.9902 339.022 475.7314 v
327.543 497.084 307.501 492.042 299.9976 482.5068 c
289.8975 469.6748 300.4214 459.5342 Y
299.918 459.9229 L
289.0059 470.0967 299.2314 483.1182 v
307.0313 493.0518 327.9604 498.6279 339.9126 476.3975 c
354.8726 448.5654 327.7651 412.7695 Y
327.7197 413.5166 L
f
312.8828 468.7363 m
316.9067 473.0352 324.3623 469.1455 322.1245 462.1279 c
320.2705 456.3262 308.8735 453.0293 303.4531 462.1104 c
296.7451 473.3438 304.2378 482.498 313.3003 484.0078 c
320.7314 485.2441 327.3574 481.4951 332.0083 473.8174 c
346.8716 449.2803 326.7119 411.6152 Y
325.8301 409.043 L
349.1406 447.5488 332.897 474.7568 v
328.0488 482.8779 321.0342 486.1973 313.2026 484.8906 c
303.6538 483.3018 295.3506 472.9844 302.9507 461.4805 c
308.8872 452.4951 321.6406 455.6826 323.5908 461.7969 c
325.9507 469.1973 317.4482 474.6885 312.8521 469.6162 C
312.8828 468.7363 L
f
436.1978 269.7959 m
437.1592 275.2803 438.0425 281.2344 438.8228 287.7129 C
438.8228 287.7129 L
439.0962 289.9736 439.4185 292.1484 439.7842 294.2402 C
439.7842 294.2402 L
447.6714 339.0371 476.0161 346 488.6279 349.5859 C
488.6279 349.5859 L
495.5483 351.5371 504.1831 351.8545 512.9922 350.3096 C
512.9922 350.3096 L
530.3403 347.2686 548.312 337.0566 555.5205 318.168 C
555.5205 318.168 L
557.8828 311.9834 558.2734 305.8594 557.2793 300.1846 C
557.2793 300.1846 L
555.4521 289.7285 548.8896 280.8076 541.3081 276.0264 C
541.3081 276.0264 L
536.0786 272.7275 530.2725 271.8545 524.8989 272.7939 C
524.8989 272.7939 L
518.002 274.001 511.8394 278.2148 508.6304 284.1211 C
508.6304 284.1211 L
506.4336 288.1504 503.9028 296.5654 505.2559 304.2295 C
505.2559 304.2295 L
506.2397 309.7891 509.1787 314.9404 515.7529 317.9834 C
515.7529 317.9834 L
519.1011 319.5293 522.4023 319.877 525.396 319.3516 C
525.396 319.3516 L
532.8008 318.0566 538.3018 311.3906 537.5728 304.0361 C
537.5728 304.0361 L
537.5303 303.5801 537.4702 303.1455 537.397 302.7305 C
537.397 302.7305 L
536.0952 295.4014 530.7485 294.3262 528.0664 294.1563 C
528.0664 294.1563 L
527.1816 294.1123 526.6362 294.1797 Y
526.6353 294.1816 L
526.6343 294.1816 L
526.5142 293.2129 L
526.5571 293.21 529.0044 292.8994 531.7295 293.9102 C
531.7295 293.9102 L
534.4575 294.9111 537.457 297.334 538.3579 302.5615 C
538.3579 302.5615 L
538.4351 303.001 538.498 303.4619 538.5449 303.9443 C
538.5449 303.9443 L
539.3149 311.8525 533.4404 318.9355 525.5645 320.3145 C
525.5645 320.3145 L
522.3789 320.8721 518.8628 320.4951 515.3452 318.8701 C
515.3452 318.8701 L
508.4648 315.7031 505.2969 310.1826 504.293 304.3975 C
504.293 304.3975 L
502.9028 296.4023 505.4829 287.8848 507.7725 283.6572 C
507.7725 283.6572 L
511.1465 277.4619 517.5547 273.0908 524.731 271.832 C
524.731 271.832 L
530.3203 270.8506 536.3882 271.7676 541.8286 275.2012 C
541.8286 275.2012 L
549.6499 280.1396 556.353 289.2656 558.2407 300.0156 C
558.2407 300.0156 L
559.2637 305.8496 558.8608 312.1621 556.4316 318.5176 C
556.4316 318.5176 L
549.0537 337.8242 530.7393 348.1953 513.1602 351.2705 C
513.1602 351.2705 L
504.2217 352.8379 495.46 352.5264 488.3638 350.5264 C
488.3638 350.5264 L
475.7559 347.0068 446.7129 339.6553 438.8232 294.4082 C
438.8232 294.4082 L
438.4551 292.2988 438.1294 290.1084 437.8535 287.8301 C
437.8535 287.8301 L
437.0742 281.3672 436.1948 275.4346 435.2363 269.9629 C
435.2363 269.9629 L
427.9722 228.541 416.3247 213.9941 410.4097 199.7715 C
410.4097 199.7715 L
411.3096 199.3994 L
417.1362 213.4268 428.9263 228.2549 436.1978 269.7959 C
436.1978 269.7959 L
f
*u
258.2974 263.0684 m
257.8218 263.0293 L
257.8218 263.0293 L
257.8184 263.0439 255.1831 271.3926 255.1831 281.8691 C
255.1831 281.8691 L
255.1812 292.0283 257.6621 304.2109 267.48 312.6885 C
267.48 312.6885 L
274.8926 319.084 284.2856 321.3633 294.2012 321.876 C
294.2012 321.876 L
297.9561 322.0703 301.1172 322.1436 303.7549 322.1436 C
303.7549 322.1436 L
308.9316 322.1436 312.0967 321.8594 313.7881 321.6338 C
313.7881 321.6338 L
311.479 322.6602 306.1172 324.501 296.5308 325.0166 C
296.5308 325.0166 L
273.0757 326.2422 272.7095 344.2373 272.2798 345.9316 C
272.2798 345.9316 L
272.2676 345.9834 272.2617 346.0283 272.2617 346.0752 C
272.2617 346.0752 L
272.293 346.5469 272.7041 346.9229 273.3516 347.3896 C
273.3516 347.3896 L
275.3198 348.7422 279.8364 350.4287 285.3076 350.4316 C
285.3076 350.4316 L
291.8896 350.4346 299.8496 347.957 306.2139 339.4219 C
306.2139 339.4219 L
309.5288 334.9795 312.5698 332.2998 314.7754 330.7314 C
314.7754 330.7314 L
315.8184 329.9883 316.6743 329.4941 317.2871 329.1807 C
317.2871 329.1807 L
314.1196 332.7451 302.3423 346.7617 298.6338 362.2676 C
298.6338 362.2676 L
297.3662 367.5859 296.8208 372.4346 296.8208 376.8389 C
296.8208 376.8389 L
296.8232 403.3027 316.4873 413.6309 316.5166 413.6436 C
317.0728 413.9346 L
316.8579 413.3457 L
316.8579 413.3457 L
316.8579 413.3398 316.2261 411.6055 315.5879 408.2393 C
315.5879 408.2393 L
314.9507 404.8711 314.313 399.8887 314.313 393.4355 C
314.313 393.4355 L
314.313 384.5967 315.5107 372.998 319.5566 359.0205 C
319.5566 359.0205 L
324.5278 341.8457 333.96 327.2852 342.1543 317.0264 C
342.1543 317.0264 L
346.2505 311.8955 350.0356 307.8398 352.7954 305.0654 C
352.7954 305.0654 L
355.5557 302.2939 357.2827 300.8125 357.2856 300.8076 C
356.999 300.4131 L
356.999 300.4131 L
356.9961 300.415 356.1406 300.9453 354.4971 301.748 C
354.4971 301.748 L
349.5659 304.1563 337.6309 308.9863 321.2036 308.9844 C
321.2036 308.9844 L
314.3584 308.9844 306.7358 308.1465 298.5083 305.9463 C
298.5083 305.9463 L
280.7417 301.1973 270.6992 290.4805 265.0835 280.9443 C
265.0835 280.9443 L
262.2754 276.1748 260.5776 271.7002 259.5835 268.4209 C
259.5835 268.4209 L
258.5884 265.1436 258.2998 263.0732 258.2974 263.0684 C
258.2974 263.0684 L
f
1 D
298.3828 306.4189 m
306.6509 308.6299 314.3198 309.4736 321.2036 309.4736 C
321.2036 309.4736 L
338.6016 309.4717 350.9878 304.0928 355.4399 301.8223 C
355.4399 301.8223 L
349.4766 307.3809 327.6816 329.2109 319.0884 358.8848 C
319.0884 358.8848 L
315.0298 372.9072 313.8252 384.5518 313.8252 393.4355 C
313.8252 393.4355 L
313.8252 404.2178 315.6006 410.9326 316.2021 412.9053 C
316.2021 412.9053 L
315.6821 412.5918 314.8125 412.0371 313.7183 411.2188 C
313.7183 411.2188 L
308.251 407.1201 297.3101 396.4863 297.3086 376.8389 C
297.3086 376.8389 L
297.3086 372.4736 297.8491 367.665 299.1099 362.3809 C
299.1099 362.3809 L
301.2319 353.4863 306.063 345.0439 310.3647 338.835 C
310.3647 338.835 L
312.5166 335.7275 314.5347 333.1797 316.0132 331.4063 C
316.0132 331.4063 L
317.4932 329.6367 318.4297 328.6484 318.4316 328.6465 C
318.1772 328.2471 L
318.1772 328.2471 L
318.1357 328.2598 312.5098 330.1709 305.8242 339.1299 C
305.8242 339.1299 L
299.5464 347.5352 291.7734 349.9414 285.3076 349.9434 C
285.3076 349.9434 L
281.729 349.9434 278.5557 349.2021 276.2852 348.3232 C
276.2852 348.3232 L
275.1514 347.8838 274.2417 347.4102 273.6294 346.9883 C
273.6294 346.9883 L
273.0054 346.5762 272.7197 346.1572 272.75 346.0752 C
272.75 346.0752 L
272.75 346.0645 272.75 346.0557 272.7524 346.0469 C
272.7524 346.0469 L
273.2642 344.1777 273.4263 326.7822 296.5571 325.5029 C
296.5571 325.5029 L
310.2085 324.7695 315.4009 321.3594 315.4385 321.332 C
315.2451 320.8936 L
315.2412 320.8936 L
314.5049 321.082 312.6885 321.2725 V
312.6885 321.2725 L
310.873 321.4639 307.9941 321.6572 303.7549 321.6572 C
303.7549 321.6572 L
301.1255 321.6572 297.9746 321.584 294.2266 321.3887 C
294.2266 321.3887 L
284.3652 320.877 275.0947 318.6162 267.7979 312.3174 C
267.7979 312.3174 L
258.1343 303.9785 255.6714 291.9561 255.6714 281.8691 C
255.6714 281.8691 L
255.6699 276.6719 256.3257 271.9951 256.9805 268.6182 C
256.9805 268.6182 L
257.3647 266.6377 257.748 265.1074 257.999 264.1826 C
257.999 264.1826 L
259.147 269.9434 266.3047 297.8369 298.3828 306.4189 C
298.3828 306.4189 L
f
356.9688 300.4375 m
357.1284 300.623 L
356.9688 300.4375 L
356.9688 300.4375 L
f
*U
0 D
349.2549 306.376 m
324.1646 328.0781 314.3789 356.6436 v
304.5933 385.209 309.731 400.2393 y
294.9849 385.625 305.2578 358.0645 v
315.062 331.7695 334.7119 317.4717 y
310.853 325.3184 303.3594 335.9658 v
294.5557 348.4717 278.0435 344.8496 278.2954 343.6963 c
278.625 342.1943 281.6602 329.2422 296.9453 329.1787 c
311.981 329.1143 332.8823 314.6318 y
310.291 319.4258 297.9902 319.2002 v
290.7349 319.0684 277.5737 316.2168 270.8838 309.293 c
261.4849 299.5635 261.5244 286.1221 y
273.3633 306.4658 303.1943 311.5488 v
327.709 315.7275 349.2549 306.376 y
f
354.377 57.7002 m
339.2827 97.8994 372.5288 146.9219 y
354.7939 75.208 389.0049 44.876 v
405.4106 30.333 428.3184 22.3828 y
273.8271 22.5508 l
272.2651 40.4971 303.0488 43.5156 v
322.1782 45.3916 383.2456 26.043 387.0625 26.1064 c
397.3755 26.2715 361.0659 39.8896 354.377 57.7002 c
f
360.439 147.4932 m
360.439 153.4756 360.0234 159.1514 358.9883 164.0566 C
358.9883 164.0566 L
352.0459 197.1084 330.062 202.5566 319.3994 204.541 C
319.3994 204.541 L
312.4839 205.8496 306.4951 206.3545 301.3726 206.3545 C
301.3726 206.3545 L
284.4453 206.3545 276.9956 200.8477 276.9248 200.793 C
276.9248 200.793 L
276.9248 200.793 L
277.5068 200.0098 L
277.5078 200.0078 277.6035 200.0811 277.8281 200.2256 C
277.8281 200.2256 L
278.0508 200.3682 278.3921 200.5762 278.856 200.8252 C
278.856 200.8252 L
279.7847 201.3252 281.2026 202 283.146 202.6719 C
283.146 202.6719 L
287.0313 204.0195 293.0156 205.377 301.3726 205.3789 C
301.3726 205.3789 L
306.4297 205.377 312.3589 204.8809 319.2168 203.5811 C
319.2168 203.5811 L
329.8096 201.5449 351.124 196.4521 358.0342 163.8545 C
358.0342 163.8545 L
359.0493 159.0488 359.4639 153.4297 359.4624 147.4932 C
359.4624 147.4932 L
359.4639 128.666 355.3057 106.6533 353.2246 96.8379 C
353.2246 96.8379 L
352.5317 93.5635 352.0713 91.6553 352.0698 91.6494 C
352.0698 91.6494 L
353.0195 91.4229 L
353.0225 91.4414 360.4355 122.2109 360.439 147.4932 C
360.439 147.4932 L
f
518.6826 201.21 m
539.0068 188.8506 584.2646 185.5186 v
619.7939 182.8994 633.5469 196.2529 y
619.9082 164.4941 573.6914 165.1875 v
541.1606 165.6748 518.6826 201.21 y
f
379.4307 452.1055 m
400.021 454.4189 429.3374 464.0498 v
448.8022 470.4463 455.1265 488.3086 451.835 500.7881 c
447.8213 516.001 428.2461 525.5176 413.1997 513.5977 c
398.9858 502.3389 406.8911 483.0029 416.812 480.5938 c
432.3701 476.8164 435.9731 493.5586 427.563 498.8164 C
427.5332 499.1094 L
436.8384 493.502 433.7358 475.8916 416.4443 480.0449 c
406.1182 482.5225 397.7441 502.5479 412.5386 513.9844 c
428.2017 526.0898 448.5918 516.4082 452.7778 500.9443 c
456.2139 488.2559 449.6362 470.1064 429.3691 463.6162 c
398.8472 453.8438 377.4053 451.502 Y
379.4307 452.1055 L
f
/BBAccumRotation (0.021661) XT
315.1597 200.8018 m
288.6606 210.6035 266.7148 194.7119 260.2446 178.1279 c
252.3613 157.915 266.4463 131.4063 292.9004 132.4688 c
317.8848 133.4707 324.7803 161.4404 315.6821 172.1855 c
301.4102 189.0352 283.7959 173.2998 288.897 160.6104 C
288.6929 160.2588 L
282.877 174.0674 300.6396 191.1758 316.5361 172.499 c
326.0342 161.3516 319.1011 132.2285 293.3228 131.501 c
266.0308 130.7305 251.1719 158.085 259.0654 178.7207 c
265.543 195.6543 288.0122 211.6455 315.4771 201.3096 c
323.3892 198.3311 319.917 199.042 315.1597 200.8018 c
f
378.0313 456.2305 m
400.4941 469.8145 401.6465 494.9648 393.3379 509.2686 c
383.2109 526.6973 355.7915 531.8037 341.2524 511.9609 c
327.5181 493.2197 343.854 472.0195 356.9307 472.4131 c
377.4375 473.0342 376.1973 494.9453 364.0229 498.5811 C
363.8853 498.9336 L
377.2891 495.168 379.4399 472.3555 356.665 471.6123 c
343.0645 471.1611 325.9102 493.0576 340.3037 512.2148 c
355.5415 532.4971 384.022 527.4619 394.4517 509.7803 c
403.0088 495.2705 401.626 469.6855 378.2178 455.7061 c
371.4727 451.6787 373.9995 453.792 378.0313 456.2305 c
f
U
0.2 1 1 0.6 k
443.0635 526.8789 m
443.0635 21.0732 L
393.377 21.0732 L
393.377 526.8789 L
443.0635 526.8789 L
f
/BBAccumRotation (1.570796) XT
u
*u
1 D
0.25333 0.467018 0.855314 0.054414 k
449.6865 101.8193 m
449.6152 112.957 450.1895 140.8496 449.9565 153.8584 c
449.9043 156.6875 447.1582 161.5625 441.8335 160.8555 C
398.5825 160.5439 394.5068 160.5645 v
390.4287 160.5869 387.5586 157.8926 386.3579 154.0098 c
385.1567 150.123 384.8477 112.3691 384.75 104.7256 c
384.667 98.0693 386.7305 91.2676 393.2432 91.0176 c
395.686 90.9248 440.0981 91.3926 441.8916 91.3682 c
445.2041 91.3232 449.7314 94.5547 449.6865 101.8193 c
f
/BBAccumRotation (1.657011) XT
0 D
438.3193 101.2158 m
431.1904 99.5107 401.8179 100.084 400.3262 100.2607 c
397.8071 100.5508 394.9829 101.7676 395.1055 106.6563 c
395.2437 112.2744 394.9614 140.4893 395.7441 143.3555 c
396.52 146.2178 397.3662 147.5645 399.8799 147.5801 c
402.3892 147.6016 431.1172 147.9102 437.1323 147.8359 c
440.1816 147.7979 440.1265 144.4072 440.1519 142.3447 c
440.2783 131.9004 439.8882 111.1553 439.855 105.9473 c
439.8516 105.3447 440.0938 101.6416 438.3193 101.2158 c
f
/BBAccumRotation (1.657011) XT
*U
/BBAccumRotation (1.657011) XT
417.3809 114.5479 m
414.6865 114.5479 413.4058 112.9346 y
413.8853 76.1895 l
421.3901 76.1895 l
422.0659 113.4668 l
420.0757 114.5479 417.3809 114.5479 v
f
/BBAccumRotation (1.668578) XT
U
0.005615 0.195407 0.424414 0.000031 k
394.9829 158.29 m
440.3564 158.7188 442.3096 158.29 v
443.4771 158.0303 443.7227 154.9639 442.6455 154.9639 c
441.5693 154.9639 393.9316 154.7959 391.6455 155.3174 c
389.3599 155.8408 394.9829 158.29 y
f
0 0 0 0 k
391.0898 158.7393 m
383.9692 162.7754 L
390.3027 157.5469 L
385.7583 152.3125 L
391.21 156.4297 L
398.6538 137.3945 L
392.5405 156.9473 L
399.3232 158.3438 L
392.4644 158.3809 L
393.3682 163.5518 L
391.0898 158.7393 L
f
/BBAccumRotation (0.596095) XT
u
0.2 1 1 0.6 k
719.4541 526.2656 m
719.4541 18.6768 L
769.873 18.6768 L
769.873 526.2656 L
719.4541 526.2656 L
f
/BBAccumRotation (1.570796) XT
U
u
u
*u
1 D
0.25333 0.467018 0.855314 0.054414 k
718.2344 93.8145 m
720.0273 93.8418 764.3906 93.373 766.832 93.4658 c
773.3379 93.7148 775.3984 100.5166 775.3145 107.1729 c
775.2168 114.8174 774.9092 152.5693 773.708 156.458 c
772.5078 160.3398 769.6445 163.0342 765.5693 163.0117 c
761.4961 162.9922 718.2949 163.3057 Y
712.9746 164.0107 710.2314 159.1377 710.1787 156.3057 c
709.9468 143.2988 710.5205 115.4072 710.4482 104.2676 c
710.4063 97.002 714.9268 93.7705 718.2344 93.8145 c
f
/BBAccumRotation (1.657011) XT
0 D
720.2705 108.3965 m
720.2373 113.6025 719.8477 134.3496 719.9736 144.793 c
719.999 146.8535 719.9404 150.248 722.9893 150.2832 c
728.9971 150.3574 757.6943 150.0518 760.2021 150.0283 c
762.7129 150.0107 763.5566 148.667 764.335 145.8037 c
765.1162 142.9385 764.835 114.7217 764.9736 109.1025 c
765.0908 104.2158 762.2744 102.998 759.7559 102.71 c
758.2666 102.5313 728.9248 101.959 721.8027 103.6641 c
720.0322 104.0889 720.2725 107.7949 720.2705 108.3965 c
f
/BBAccumRotation (1.657011) XT
*U
/BBAccumRotation (1.657011) XT
742.7197 116.9951 m
745.4121 116.9951 746.6914 115.3828 y
746.2109 78.6387 l
738.7148 78.6387 l
738.04 115.9141 l
740.0264 116.9951 742.7197 116.9951 v
f
/BBAccumRotation (1.668578) XT
U
0.005615 0.195407 0.424414 0.000031 k
765.0908 160.7373 m
719.7666 161.167 717.8193 160.7373 v
716.6504 160.4785 716.4063 157.4111 717.4844 157.4111 c
718.5586 157.4111 761.6318 156.8135 763.918 157.3359 c
766.2012 157.8594 765.0908 160.7373 y
f
0 0 0 0 k
766.4424 160.373 m
772.8555 164.4082 L
767.1523 159.1826 L
771.2461 153.9453 L
766.334 158.0635 L
759.6318 139.0303 L
765.1357 158.5811 L
759.0273 159.9785 L
765.207 160.0156 L
764.3906 165.1855 L
766.4424 160.373 L
f
/BBAccumRotation (0.596095) XT
U
U
u
0.139925 0.672297 0.824338 0.020142 k
927.8711 748.4004 m
694.3955 551.2607 584.9683 564.4209 v
461.4292 579.2793 550.6641 670.2891 y
605.5884 687.498 901.96 825.3247 925.0967 829.1528 c
955.6904 834.2148 983.3174 820.0801 987.6084 797.0029 C
927.8711 748.4004 L
f
/BBAccumRotation (0.702644) XT
0.219608 0.835294 0.807843 0.113725 k
926.252 731.4375 m
928.3818 744.814 925.0146 743.7642 v
921.6465 742.7095 894.8828 721.104 881.7354 708.8896 c
858.6152 687.418 819.9658 661.8896 y
813.0557 666.4785 l
912.0508 740.2905 927.8711 748.4004 v
934.7266 751.9121 926.252 731.4375 y
f
/BBAccumRotation (0.163944) XT
U
0 0.35 0.58 0 k
608.6978 681.3457 m
972.7656 696.627 996.0391 667.1699 v
1004.7002 656.207 1011.2715 637.2549 1022.2725 593.6074 C
1025.2002 588.4541 1176.5195 225.3457 1182.1445 194.4912 c
1200.0352 96.3701 1222.8857 62.2939 1250.8164 57.0566 c
1261.9082 54.9775 1266.5264 32.6172 1259.5264 23.0674 c
1258.749 22.0088 1192.8086 15.5156 1183.7148 36.5313 c
1159.3594 92.8193 1173.542 108.168 1131.9316 113.3203 c
1097.1436 117.626 1105.2344 150.082 1122.1768 178.2773 c
1132.2705 195.0791 1103.6211 261.0195 1082.3408 297.5146 c
1043.5205 364.0811 970.5342 411.4453 947.499 482.3633 c
935.666 518.791 930.4053 554.1191 928.4063 583.7793 C
900.3359 612.9404 728.5625 546.5195 608.7515 560.0439 c
485.5537 573.9492 608.6978 681.3457 Y
f
0.000031 0.226108 0.340124 0.000031 k
997.041 663.1641 m
1003.9922 657.6104 1019.2324 596.1846 v
1029.1494 556.2021 1136.0889 307.4512 y
1025.0869 530.6465 1008.0635 578.3477 v
979.3818 658.7148 984.0674 656.9863 997.041 663.1641 c
f
991.0771 667.1699 m
1002.7676 660.2754 1001.1553 654.5957 1000.0195 654.6152 c
997.3799 654.6602 990.334 649.584 968.4063 655.9863 c
931.3184 666.8164 721.0771 680.5732 723.4248 681.3457 c
735.1699 685.2109 956.6074 687.498 991.0771 667.1699 c
f
0.2 1 1 0.6 k
1237.2813 65.1426 m
1221.7529 108.3564 L
1215.0303 140.0205 1185.9727 193.1162 Y
1176.8545 214.2246 L
1117.5303 205.959 L
1117.5303 188.1572 L
1083.585 153.5068 1101.6807 127.4053 v
1102.4619 126.2783 1115.9336 124.3438 1130.0361 122.6035 C
1194.9199 14.751 L
1237.2813 65.1426 L
f
u
u
u
0.119234 0.530938 0.757046 0.006317 k
363.4336 625.5049 m
334.9482 579.4863 l
350.4858 557.2441 l
363.4336 625.5049 l
f
u
0 0.35 0.58 0 k
344.7036 557.7539 m
362.5908 624.0654 l
412.1475 576.042 430.8276 568.5234 v
449.5015 561.0137 448.1836 543.3672 439.5674 542.2715 c
420.6729 539.8662 402.6685 536.4717 397.3745 556.7324 c
394.3779 568.1953 365.3916 589.625 364.1519 582.874 c
362.8843 575.9453 361.2007 564.4951 y
372.6611 567.1855 379.2544 562.7344 v
384.519 559.1816 386.7339 554.0381 y
344.7036 557.7539 l
f
U
0.119234 0.530938 0.757046 0.006317 k
363.4336 625.5049 m
394.7915 595.6621 407.2881 586.6563 v
419.7827 577.6514 437.979 564.7393 y
415.605 573.8828 403.3726 582.7461 v
373.9775 604.0479 358.6289 614.8291 y
363.4336 625.5049 l
f
U
0 0.35 0.58 0 k
416.5649 540.5879 m
392.3047 543.957 374.5601 541.3779 v
358.4561 539.0381 347.2095 532.4209 347.1714 533.2461 c
346.6729 544.2646 352.7612 548.5879 368.2534 551.7383 c
379.4727 554.0186 396.2827 557.2441 391.1133 566.5801 c
387.3252 573.4238 416.5649 540.5879 y
f
U
0.011765 0.74902 0.584314 0 k
358.0186 537.3584 m
346.2271 531.9492 l
346.7676 536.3799 351.0068 538.5674 v
355.2451 540.7539 358.0186 537.3584 y
f
383.3857 555.7676 m
381.7773 557.4385 378.7637 557.5322 v
377.479 557.5732 375.3003 555.1484 y
379.6714 554.4727 l
383.3857 555.7676 l
f
U
0.15 0.55 0.7 0 k
708.8433 984.9395 m
930.1924 988.2344 l
848.3584 1029.3184 l
717.3057 1050.1123 l
708.8433 984.9395 l
f
0 0.35 0.58 0 k
616.5581 1349.4209 m
662.8008 1300.8364 665.3799 1276.1104 v
673.8833 1194.5762 635.4385 1160.2813 587.1216 1162.623 c
557.4805 1164.0596 559.3516 1180.0112 547.1602 1199.4751 c
524.1274 1236.2485 526.4658 1275.6826 536.7373 1311.6304 c
553.7515 1371.1836 581.4673 1351.5469 616.5581 1349.4209 c
f
617.8096 1351.6084 m
659.3647 1332.7607 663.4136 1273.125 v
664.5103 1256.9741 669.2188 1227.8896 662.9658 1215.7524 c
644.8286 1180.543 615.6177 1161.6846 579.7324 1164.1748 c
571.8887 1164.7178 560.0757 1164.6655 556.5767 1176.1655 c
552.6904 1188.9336 546.5601 1195.8691 540.1328 1205.1626 c
520.4395 1233.6436 519.5732 1275.6826 529.8438 1311.6304 c
546.8584 1371.1836 582.7148 1353.7358 617.8096 1351.6084 c
f
538.8081 943.6279 m
576.3442 943.4702 642.5537 957.3145 685.0962 952.7729 c
706.6577 950.4712 720.7607 1049.5664 717.3057 1050.1123 c
637.5127 1064.834 591.9932 1105.9092 v
547.165 1146.3643 520.124 1154.293 498.0928 1139.5972 c
481.376 1128.4512 480.2583 1061.7847 482.3369 1021.3276 c
514.0723 943.7324 538.8081 943.6279 v
f
0.067475 0.082734 0.446967 0.000031 k
546.3418 1364.5894 m
515.5635 1338.1309 520.772 1298.4873 y
577.7427 1294.7412 l
576.5459 1330.1133 590.3013 1350.9521 v
597.4658 1361.8047 562.7056 1378.6523 546.3418 1364.5894 c
f
670.9863 1271.4033 m
692.9736 1222.0444 629.8315 1110.6855 y
676.3721 1109.0762 717.5801 1162.7061 v
735.835 1186.4639 750.0625 1234.5859 739.8018 1269.6821 c
729.5439 1304.7803 636.7271 1348.2969 670.9863 1271.4033 c
f
0.049165 0.671534 0.763088 0.000549 k
574.4106 1243.5557 m
580.3398 1242.7065 579.6455 1237.1665 y
566.166 1235.0293 l
559.728 1237.1665 l
553.1104 1248.2461 556.6621 1248.2461 v
562.332 1248.248 563.6855 1245.0918 574.4106 1243.5557 c
f
0.000031 0.503105 0.504295 0.000031 k
662.3442 1267.6357 m
607.1484 1243.5039 606.2739 1232.21 v
605.4023 1220.9141 607.6299 1202.9043 621.4648 1202.4253 c
631.5269 1202.0806 662.7363 1243.5557 y
662.3442 1267.6357 l
f
0.065675 0.85687 0.937377 0.006134 k
599.6563 1217.0557 m
573.8013 1217.3281 568.8896 1217.3032 v
563.9785 1217.2808 561.9063 1211.3779 y
553.438 1215.9585 556.6621 1223.5371 v
558.3003 1227.3848 566.6216 1221.5918 577.3398 1224.7881 c
586.8911 1227.6367 599.6563 1217.0557 y
f
0.000031 0.000031 0.000031 0.000031 k
592.9468 1211.4629 m
577.3638 1209.8872 561.9063 1211.3779 y
560.6641 1217.7881 570.0894 1218.4453 v
588.7363 1219.7485 592.9468 1211.4629 y
f
0.065675 0.85687 0.937377 0.006134 k
586.8911 1201.1235 m
595.7515 1205.9688 600.7998 1212.7627 y
585.2031 1209.9951 559.5693 1211.1616 y
555.6157 1197.6943 570.0493 1199.3989 v
572.0317 1199.6333 578.9214 1196.7676 586.8911 1201.1235 c
f
0.132357 0.903471 1 0.030671 k
583.2778 1215.7383 m
578.4951 1217.998 572.3555 1218.7285 y
597.4902 1218.1934 l
602.875 1216.1758 601.0444 1213.1143 v
600.2769 1211.8311 589.9175 1211.9077 y
587.0435 1213.96 583.2778 1215.7383 v
f
0.211887 0.476387 1 0.030701 k
591.1592 1339.9531 m
549.2671 1342.7563 534.3076 1334.8364 v
519.3472 1326.916 519.0156 1301.2988 y
527.6455 1313.04 547.1479 1317.4199 v
566.6509 1321.7988 583.3423 1320.251 y
583.9419 1329.9238 591.1592 1339.9531 v
f
0.199252 0.915526 1 0.104097 k
667.7002 1250.3345 m
674.0713 1173.7715 629.8315 1110.6855 y
643.6743 1136.1689 651.4063 1169.2769 v
658.7246 1200.6152 661.2979 1213.9766 660.2832 1273.7324 c
659.8096 1301.6162 661.9248 1319.7422 667.7002 1250.3345 c
f
0.15 0.8 0.87 0.01 k
661.9854 1218.5859 m
655.0537 1197.2822 637.002 1187.9907 v
620.4995 1179.4961 601.0518 1175.2295 591.6191 1170.7876 c
581.2378 1165.8984 566.2412 1166.2783 y
576.6328 1160.7393 588.0791 1162.981 v
595.3784 1164.4092 637.0391 1175.1924 645.25 1183.4097 c
653.46 1191.6299 657.9072 1198.6885 661.9854 1218.5859 c
f
0 0.35 0.58 0 k
571.6768 1124.8872 m
639.501 1177.7651 l
609.6411 1089.605 l
571.6768 1124.8872 l
f
0.295354 0.815763 0.962798 0.287877 k
665.3799 1297.1621 m
665.3799 1307.7554 594.8394 1302.1729 585.3618 1288.5811 c
580.0127 1280.9102 585.8208 1251.3945 596.5503 1247.3457 c
606.5176 1243.5859 621.6982 1243.2695 642.7256 1243.7065 c
656.2705 1243.9839 665.3799 1263.3872 665.3799 1297.1621 c
f
/BBAccumRotation (0.203498) XT
0 0.7 1 0 k
571.6768 1124.4648 m
571.6768 1106.9683 583.5044 1070.5903 590.0708 1052.5806 c
601.96 1019.9736 634.5796 970.7832 y
539.6616 949.7036 l
565.5684 1127.8472 l
571.6768 1124.6973 571.6768 1124.4648 v
f
0.15 0.8 0.87 0.01 k
644.5898 1183.4097 m
614.9551 1163.416 595.7393 1146.7783 v
586.874 1139.0986 574.4507 1122.2588 y
571.6768 1124.8872 l
577.2725 1163.6675 l
644.5898 1183.4097 l
f
0.2 1 1 0.55 k
588.8945 1266.3975 m
585.146 1282.6416 587.6016 1286.4072 v
590.0566 1290.1729 599.1982 1295.3486 623.8936 1298.1221 c
648.5879 1300.8945 661.166 1301.8408 662.1763 1295.8765 c
663.188 1289.9131 664.4019 1272.8984 650.3789 1268.8818 c
596.124 1253.3389 588.8945 1266.3975 y
f
0.295354 0.815763 0.962798 0.287877 k
586.0386 1264.7944 m
579.2393 1269.2739 570.4717 1269.3203 v
564.4556 1269.353 562.7837 1266.5605 y
563.9443 1276.9482 l
566.373 1273.125 570.4717 1273.125 v
579.5479 1273.125 583.772 1277.2573 y
586.0386 1264.7944 l
f
0.3 1 1 0.5 k
647.3174 1270.6299 m
627.5835 1274.1572 610.4521 1277.8545 v
599.1201 1280.3008 595.5762 1277.9766 596.8169 1269.9219 c
598.0566 1261.8687 603.3096 1264.1851 621.9482 1265.7427 c
638.9683 1267.1655 647.3174 1270.6299 y
f
0.283726 0.583764 0.608637 0.082948 k
652.4526 1272.4463 m
654.3999 1286.8188 649.5059 1295.9629 654.9297 1299.2852 c
656.083 1299.9912 662.8467 1299.668 663.2231 1296.54 c
664.0532 1289.6592 662.1973 1274.7764 656.8008 1264.1919 c
649.2251 1249.3257 644.5898 1246.8442 y
649.8223 1253.0454 652.4526 1272.4463 v
f
0.3 1 1 0.5 k
560.4351 1268.8818 m
540.5273 1283.1338 533.8145 1280.0532 v
527.1001 1276.9746 530.8281 1268.0063 y
530.7725 1266.2671 542.1455 1265.7144 v
553.519 1265.1631 560.4351 1268.8818 y
f
0.3 1 1 0.6 k
599.6563 1261.7568 m
597.1851 1262.2012 598.6392 1265.6592 y
644.5898 1268.8818 L
605.4521 1260.7178 599.6563 1261.7568 v
f
0.251255 0.987854 1 0.231723 k
600.4746 1217.1719 m
596.0195 1213.2754 591.2402 1212.1313 v
585.3374 1210.7207 573.6958 1211.272 570.2295 1211.0259 c
566.7607 1210.7793 560.7275 1211.3638 559.728 1212.9868 c
557.4829 1216.6284 554.9253 1210.9917 561.4521 1210.7207 c
567.9805 1210.4507 587.4902 1210.6113 591.8481 1211.0811 c
595.3838 1211.4629 602.4575 1211.4155 603.2729 1214.6055 c
604.0571 1217.6719 600.4746 1217.1719 y
f
0.3 1 1 0.6 k
648.1543 1271.0249 m
611.0273 1276.2876 606.1909 1276.2168 v
601.3545 1276.146 599.4058 1276.854 597.9946 1274.8613 c
596.5845 1272.8652 596.5811 1271.4863 y
593.8784 1276.5776 598.5674 1279.5771 v
608.6841 1286.0464 648.1543 1271.0249 y
f
621.1216 1275.541 m
618.5527 1267.6357 612.4072 1265.7368 v
603.4482 1262.9678 597.7949 1272.8579 598.1797 1276.2168 c
598.5674 1279.5771 621.1216 1275.541 y
f
0.004669 0.022919 0.280735 0.000031 k
653.1807 1372.6973 m
702.9365 1344.5659 718.4277 1277.5527 v
727.2871 1239.2251 717.6475 1206.5171 y
730.4336 1255.9502 725.4775 1288.667 v
721.8525 1312.6001 711.9463 1333.3188 705.3975 1339.7026 c
685.0952 1359.4912 653.1807 1372.6973 y
f
0.211887 0.476387 1 0.030701 k
680.9502 1282.1836 m
691.5762 1239.7715 684.1929 1211.7188 672.1411 1177.7651 c
664.1865 1155.3525 640.8047 1128.061 y
678.582 1200.5166 673.2734 1255.9292 v
668.248 1308.3926 670.3213 1324.5942 680.9502 1282.1836 c
f
587.6479 1337.1152 m
580.5571 1320.4043 577.7427 1294.7412 y
586.7671 1320.5088 591.2617 1327.9346 v
598.3721 1339.6846 594.7368 1353.8301 587.6479 1337.1152 c
f
0.004669 0.022919 0.280735 0.000031 k
582.3594 1320.3369 m
578.9199 1306.0151 577.9355 1294.7412 y
571.189 1311.3174 574.603 1320.5088 v
582.3594 1320.3369 l
f
567.96 1320.2876 m
562.3877 1301.9551 567.2979 1295.4321 y
553.7432 1304.647 559.2207 1319.6577 v
567.96 1320.2876 l
f
1 Ap
0.223301 0.470405 0.431495 0.006195 k
657.3164 1300.1348 m
653.9009 1299.6631 651.5132 1296.5088 651.9844 1293.0942 c
652.4551 1289.6758 655.6084 1287.2876 659.0254 1287.7612 c
662.4438 1288.2339 664.8296 1291.3853 664.3564 1294.7998 c
663.8853 1298.2183 660.7344 1300.6069 657.3164 1300.1348 c
f
0.108614 0.33341 0.300114 0.000031 k
658.4619 1299.2412 m
655.9175 1298.8906 654.1382 1296.5425 654.4917 1293.999 c
654.8423 1291.4526 657.1899 1289.6758 659.7344 1290.0288 c
662.2808 1290.3799 664.0576 1292.7266 663.7061 1295.271 c
663.354 1297.8154 661.0054 1299.5947 658.4619 1299.2412 c
f
0.04181 0.237308 0.184482 0.000031 k
660.7612 1298.1304 m
659.2705 1297.9258 658.2285 1296.5459 658.4336 1295.0566 c
658.6406 1293.5645 660.0161 1292.5234 661.5078 1292.7295 c
662.999 1292.9351 664.0391 1294.3101 663.8345 1295.8027 c
663.6279 1297.2939 662.2529 1298.335 660.7612 1298.1304 c
f
0 Ap
0.108614 0.33341 0.300114 0.000031 k
663.0127 1286.373 m
660.1978 1267.7227 655.3672 1257.7988 v
650.4697 1247.7368 645.4487 1246.1792 y
647.4336 1251.6396 l
650.3574 1253.312 655.001 1261.2891 v
659.6426 1269.2646 663.0127 1286.373 y
f
0.2 1 1 0.55 k
665.0444 1286.373 m
670.2339 1280.7788 l
670.627 1274.7275 l
663.4136 1273.125 l
665.0444 1286.373 l
f
0.223301 0.470405 0.431495 0.006195 k
645.4487 1246.1792 m
631.6401 1245.21 622.7666 1245.5015 v
613.8955 1245.7915 608.0767 1246.8442 y
623.3184 1246.4678 629.4033 1246.8442 v
643.769 1247.7368 647.4336 1251.6396 y
645.4487 1246.1792 l
f
0.01 0.27 0.55 0 k
612.02 1070.79 m
613.1929 1070.2339 609.7705 1085.1362 609.1177 1085.9351 c
606.1348 1089.585 575.1899 1116.0078 y
585.9819 1102.4038 601.9111 1085.125 v
606.7134 1079.9155 610.873 1071.334 612.02 1070.79 c
f
621.6694 1067.1553 m
634.3828 1074.5898 638.6099 1072.9482 v
642.8364 1071.3081 687.541 1052.5806 y
642.5146 1064.877 636.5278 1066.7295 v
630.3433 1068.6465 621.6694 1067.1553 y
f
0 0 0 0 k
657.2539 1290.2412 m
661.5405 1296.1753 L
652.9536 1298.7002 L
661.9497 1297.3301 L
662.9395 1311.3174 L
663.2056 1297.3267 L
678.582 1297.4888 L
663.5664 1296.1572 L
671.2998 1284.3354 L
662.5278 1295.4375 L
657.2539 1290.2412 L
f
/BBAccumRotation (0.018228) XT
661.1348 1288.0742 m
661.3428 1295.7021 L
653.1807 1294.7412 L
661.3311 1296.9185 L
658.4214 1303.5771 L
662.5195 1297.3145 L
674.5513 1305.2573 L
663.2847 1296.3535 L
674.7549 1287.8306 L
662.561 1295.3413 L
661.1348 1288.0742 L
f
/BBAccumRotation (0.368864) XT
0.004669 0.022919 0.280735 0.000031 k
553.2549 1318.624 m
554.666 1307.8965 565.4004 1295.4302 y
546.4233 1305.3218 546.4819 1317.2666 v
546.4854 1317.9297 553.2549 1318.624 y
f
0.199252 0.915526 1 0.104097 k
659.3599 1269.1152 m
662.5684 1232.1714 658.7212 1218.7285 v
654.875 1205.2847 650.1689 1195.3398 639.0815 1189.1289 c
627.9941 1182.918 597.1851 1173.0415 y
632.1709 1180.7358 645.4487 1191.4639 v
660.1631 1203.3579 663.9336 1221.4243 664.103 1236.0986 c
664.271 1250.7729 659.3599 1269.1152 y
f
0.000031 0.757259 0.717616 0.000031 k
592.0205 1208.9199 m
585.2544 1206.4419 579.936 1205.7256 v
575.2065 1205.0884 577.7935 1201.0273 580.998 1202.0483 c
584.6226 1203.2046 592.0205 1208.9199 y
f
1 Ap
0.000031 0.398016 0.22855 0.000031 k
581.3706 1203.751 m
581.3706 1204.7031 580.5972 1205.4766 579.6445 1205.4766 c
578.6924 1205.4766 577.9189 1204.7031 577.9189 1203.751 c
577.9189 1202.7964 578.6924 1202.0244 579.6445 1202.0244 c
580.5972 1202.0244 581.3706 1202.7964 581.3706 1203.751 c
f
0 Ap
0.000031 0.698878 0.566308 0.000031 k
593.5059 1212.8706 m
586.8896 1217.7788 581.3706 1218.3262 v
577.5186 1218.708 579.3232 1223.6655 583.2437 1222.4775 c
589.1919 1220.6753 594.105 1213.126 y
593.5059 1212.8706 l
f
0 0.7 1 0 k
653.6362 1069.4243 m
712.8535 997.3779 l
687.541 987.8472 l
648.9634 1071.334 l
653.6362 1069.4243 l
f
533.626 922.6787 m
572.9258 848.9258 562.4756 807.0244 v
552.0244 765.124 496.0796 746.3975 463.6201 698.2852 c
431.1636 650.1709 443.7622 601.0293 447.8184 575.377 c
451.875 549.7207 499.3633 402.5176 y
552.1099 522.5576 655.6021 535.626 v
742.1924 546.5596 718.0273 739.7031 y
605.2344 696.9834 615.6938 704.9961 v
621.5474 709.481 644.2539 773.8022 651.6924 793.0747 c
662.2617 820.4614 705.7744 924.7686 y
684.2485 933.0664 650.4868 938.9521 v
616.7246 944.835 533.626 922.6787 y
f
0 0.35 0.85 0 k
587.2261 934.4697 m
620.5122 836.1685 593.6426 772.542 v
561.6641 696.8184 494.6602 685.3154 503.335 604.0742 c
512.0132 522.834 524.6685 445.7646 y
536.9717 462.0811 l
516.0005 546.5205 510.8584 600.0889 v
502.584 686.2637 574.3569 698.0449 601.7544 785.2158 c
625.313 860.1719 604.8481 937.2954 y
587.2261 934.4697 l
f
0.2 0.3 0.8 0 k
680.9077 1256.8867 m
684.2319 1221.0781 676.498 1190.5166 v
673.52 1178.748 672.1318 1160.2153 670.9863 1150.5918 c
697.4438 1181.5859 l
695.1636 1157.0928 698.0244 1158.8408 v
704.0234 1162.5073 720.709 1170.6641 732.3789 1192.6636 c
754.6113 1234.5718 742.8271 1241.6772 y
680.9077 1256.8867 l
f
0.5 0 1 0 k
535.3955 1210.8613 m
497.9258 1211.0586 465.209 1225.2749 v
416.8711 1246.2769 426.6714 1335.4209 479.5532 1361.876 c
578.1763 1411.2134 694.3154 1285.9702 y
647.9775 1327.1567 570.0493 1328.0195 v
519.3608 1328.5801 517.1758 1300.0581 517.7065 1287.7012 c
518.2354 1275.3438 535.3955 1210.8613 y
f
0.295354 0.815763 0.962798 0.287877 k
509.0039 1297.4775 m
514.25 1309.3267 554.2212 1297.2295 561.6289 1288.8311 c
567.8125 1281.8174 561.6289 1253.9092 555.3154 1251.0259 c
545.6226 1246.5957 536.8037 1247.2642 524.7739 1246.1909 c
515.5718 1245.3682 504.064 1286.3135 509.0039 1297.4775 c
f
/BBAccumRotation (0.203498) XT
0.2 1 1 0.55 k
560.8223 1266.8154 m
563.6855 1270.5498 563.6255 1281.8672 560.8223 1287.208 c
558.0176 1292.5479 542.0107 1299.4141 526.1021 1301.0142 c
511.0771 1302.5205 509.9214 1297.6636 509.2476 1295.311 c
508.5737 1292.9546 509.0742 1277.0049 511.7681 1271.7568 c
514.4634 1266.5083 556.9756 1261.8057 560.8223 1266.8154 c
f
0.283726 0.583764 0.608637 0.082948 k
520.626 1300.7998 m
520.3018 1300.6187 515.2505 1301.688 510.7905 1298.4116 c
508.1416 1296.4648 508.978 1282.3291 511.2109 1273.0742 c
517.5278 1246.9155 524.5474 1247.374 y
523.377 1258.7886 526.063 1272.1978 v
527.5449 1279.6079 520.626 1300.7998 y
f
0.3 1 1 0.6 k
557.3076 1267.5635 m
547.2544 1267.4629 540.498 1267.436 v
535.7764 1267.4165 529.0708 1267.4912 y
526.6064 1264.4121 l
535.9639 1264.9712 557.3076 1267.5635 v
f
560.4351 1270.3174 m
541.021 1277.1953 535.5151 1277.2236 v
528.6699 1277.2573 529.272 1272.7026 y
522.3008 1283.2471 535.4121 1282.0957 v
549.4048 1280.8667 560.4351 1270.3174 y
f
530.6382 1277.2573 m
531.604 1267.4688 540.3594 1267.0513 v
547.1929 1266.7271 549.9639 1275.1377 y
540.9761 1277.9043 537.9663 1278.3057 v
534.959 1278.7051 530.6382 1277.2573 y
f
0.140139 0.399878 0.337591 0.000031 k
547.6064 1249.3613 m
527.6704 1250.7871 523.9546 1252.3018 v
520.2397 1253.8213 519.6172 1247.8013 524.5474 1247.374 c
533.7002 1246.582 547.6064 1249.3613 y
f
0.05 0 0.9 0 k
542.3213 1367.6328 m
588.5679 1412.6499 608.0347 1412.4365 v
627.5024 1412.2246 690.3574 1391.8125 697.5977 1383.3896 c
704.8354 1374.9688 726.5244 1299.2544 y
685.7192 1326.6436 638.6504 1342.3564 v
591.5825 1358.0674 542.3213 1367.6328 y
f
592.0205 1364.5371 m
650.0112 1233.5947 735.835 1197.0249 v
849.373 1148.6445 867.3809 1226.6294 857.2783 1257.7334 c
847.1729 1288.8379 728.7012 1307.6079 y
592.0205 1364.5371 l
f
0.580987 0.262638 1 0.07129 k
477.2798 1360.2773 m
547.6064 1413.5776 603.3843 1351.0308 v
646.1401 1303.0864 656.7422 1263.521 680.8223 1240.7622 c
708.436 1214.6621 722.8779 1203.3579 y
655.002 1241.5923 609.9941 1300.7378 v
561.8525 1364.0029 477.2798 1360.2773 y
f
0.000031 0.503105 0.504295 0.000031 k
532.085 1246.708 m
545.813 1239.1665 546.0957 1228.8633 v
546.4253 1216.7573 542.459 1209.2183 537.5913 1212.1782 c
532.7256 1215.1401 525.5547 1236.4087 524.959 1246.1792 c
524.9434 1246.4482 532.085 1246.708 y
f
0.15 0.8 0.87 0.01 k
651.5845 1201.1646 m
660.6133 1227.4102 648.1543 1222.6982 v
645.8184 1221.8145 638.6875 1215.4468 636.7944 1215.3296 c
626.0088 1214.6621 631.6631 1243.916 640.8574 1243.9185 c
651.9248 1243.9209 655.9902 1252.0586 y
660.3779 1248.2461 l
661.9507 1233.0327 660.5107 1223.8389 v
658.6001 1211.6377 651.5845 1201.1646 y
f
0 0.35 0.85 0 k
643.6973 935.4658 m
638.1182 827.4331 621.6694 777.7588 v
605.2197 728.085 548.897 657.4463 545.0249 633.9014 c
541.1533 610.3535 568.2661 494.582 y
581.3721 503.874 l
546.084 594.7051 553.7485 631.373 v
561.4116 668.042 612.8867 720.1084 628.7666 777.7588 c
644.647 835.4126 655.6021 934.0366 y
643.6973 935.4658 l
f
684.6836 931.6563 m
658.1699 818.8564 641.8955 773.2192 v
627.1865 731.9717 590.46 646.1914 585.5317 637.4326 c
580.603 628.6699 623.769 527.9033 y
640.3008 533.1611 l
599.3921 610.9609 593.6426 635.6582 v
591.7188 643.9229 640.7231 760.3701 645.7422 773.2192 c
652.5063 790.5361 695.5459 928.2188 y
684.6836 931.6563 l
f
561.9028 929.2471 m
589.4448 849.7822 580.2075 802.9604 v
569.019 746.2471 514.917 715.0239 y
518.6118 735.2383 l
573.8477 769.748 578.1797 801.9468 v
587.2856 869.6289 544.8628 925.7783 y
561.9028 929.2471 l
f
0 0.7 1 0 k
560.7275 1013.291 m
538.9844 931.6563 l
537.5381 919.4404 l
619.0908 936.4409 653.9883 934.2305 v
694.5938 931.6563 705.7744 924.7686 y
717.0508 925.9775 728.4082 935.4658 v
738.1768 943.6265 740.6182 959.0786 y
712.8535 997.3779 l
684.4258 994.1313 l
699.0869 962.5576 664.1147 959.7188 v
629.1426 956.8774 609.7388 1007.6069 y
560.7275 1013.291 l
f
0.15 0.8 0.87 0.01 k
525.5547 1241.6772 m
528.1641 1226.7935 534.7759 1214.4224 v
541.3906 1202.0483 547.7422 1196.5522 553.6597 1184.9146 c
557.3862 1177.5874 558.3574 1171.9443 562.6772 1169.4131 c
567.6587 1166.4937 575.3882 1166.021 y
569.2046 1163.1006 560.7988 1168.7314 v
556.9551 1171.3066 555.7769 1179.5762 552.1826 1185.9023 c
548.5879 1192.2305 536.3672 1209.6714 533.6406 1215.3179 c
527.3721 1228.3076 525.5547 1241.6772 y
f
498.4048 1139.8037 m
512.1201 1148.1226 524.4585 1146.208 v
540.7285 1143.6812 566.8208 1126.917 y
541.624 1146.208 524.3394 1147.3096 v
508.8662 1148.2959 498.4048 1139.8037 y
f
578.9033 1128.061 m
576.7974 1124.4004 579.8008 1119.4736 v
582.8052 1114.5459 608.4648 1088.0679 y
571.9028 1122.2588 l
571.6768 1124.8872 l
578.9033 1128.061 l
f
u
u
0.02359 0.394873 0.573388 0.000031 k
754.9453 1109.1348 m
746.5684 1114.7773 750.0811 1132.4736 v
752.6924 1145.6123 757.7012 1175.0488 y
743.8076 1191.6543 l
732.3945 1198.9902 723.5537 1208.9644 v
720.0469 1212.9219 719.9277 1220.1924 y
758.9727 1206.4487 l
792.7344 1177.2324 l
780.748 1138.0845 772.1279 1110.9023 v
769.7314 1103.3486 754.9453 1109.1348 y
f
/BBAccumRotation (2.362211) XT
950.7598 1027.748 m
916.2852 1042.9229 882.7764 1056.9849 v
836.3408 1076.4727 762.668 1107.0181 776.3145 1128.3433 c
783.8438 1140.1104 754.9453 1109.1348 y
892.8867 983.1289 930.1924 988.2344 v
963.5264 992.7974 950.7598 1027.748 y
f
/BBAccumRotation (0.678692) XT
0.219608 0.835294 0.807843 0.113725 k
719.9277 1220.1924 m
758.9727 1206.4487 l
792.7344 1177.2324 l
784.626 1170.6641 l
759.3525 1201.0366 755.8311 1201.9185 v
752.3115 1202.8022 721.7305 1213.6392 719.9277 1220.1924 c
f
/BBAccumRotation (3.058724) XT
774.4521 1116.5615 m
792.7344 1177.2324 l
784.626 1170.6641 l
774.4521 1116.5615 l
f
/BBAccumRotation (3.058724) XT
0.139925 0.672297 0.824338 0.020142 k
784.626 1170.6641 m
779.1621 1168.5981 l
755.3203 1198.3936 l
756.335 1202.2295 l
778.4229 1180.6812 784.626 1170.6641 v
f
/BBAccumRotation (3.058724) XT
U
0.219608 0.835294 0.807843 0.113725 k
945.6729 1033.4922 m
855.3398 1070.2974 l
793.4844 1100.7515 783.3789 1109.2627 v
776.8281 1114.7837 775.5117 1122.1914 y
774.4521 1116.5615 l
776.1289 1111.4795 784.1074 1105.5542 v
805.376 1089.7593 952.7939 1019.2158 y
953.2666 1028.3042 945.6729 1033.4922 v
f
0.139925 0.672297 0.824338 0.020142 k
774.0264 1166.3018 m
773.8896 1166.6025 753.168 1195.1572 751.0391 1197.4619 c
748.7734 1199.9136 751.8848 1201.5781 754.9453 1199.7246 c
758.0039 1197.8726 783.5938 1170.2729 y
774.0264 1166.3018 l
f
0.219608 0.835294 0.807843 0.113725 k
755.4727 1232.6377 m
782.2617 1216.4526 l
792.7344 1177.2324 l
780.4023 1181.6167 l
776.1104 1213.458 775.2168 1213.5708 v
774.3232 1213.6831 762.457 1220.5835 760.042 1222.5264 c
754.0303 1227.3628 755.4727 1232.6377 y
f
0.139925 0.672297 0.824338 0.020142 k
784.626 1170.6641 m
774.0264 1167.2324 l
772.0107 1126.5483 772.4922 1123.1753 v
772.9746 1119.8047 774.4521 1116.5615 y
784.626 1170.6641 l
f
753.2148 1200.4204 m
724.1348 1208.3193 l
725.4121 1206.8525 727.1211 1205.2007 v
728.8301 1203.5464 750.6426 1197.9692 y
753.2148 1200.4204 l
f
U
u
u
0.580987 0.262638 1 0.07129 k
380.3916 1053.0791 m
157.6553 860.3667 199.1406 805.9697 v
208.3594 793.8823 234.9448 769.4653 282.0073 740.3813 c
346.9512 700.2461 398.064 674.3906 429.5879 668.9355 c
477.5986 660.627 380.3916 1053.0791 y
f
0.5 0 1 0 k
380.3916 1053.0791 m
166.2231 860.3667 207.709 805.9697 v
216.9268 793.8823 243.5127 769.4653 290.5747 740.3813 c
355.5186 700.2461 401.8403 675.6533 433.3643 670.1982 c
481.3745 661.8896 581.7363 929.3955 563.0767 939.6538 c
544.4224 949.9141 380.3916 1053.0791 y
f
0 0 0 1 k
551.0234 945.6904 m
414.7944 675.0127 l
431.9751 669.2588 l
563.0767 939.6538 l
551.0234 945.6904 l
f
384.8608 1050.4912 m
281.7056 911.5244 258.5142 878.9346 v
235.3213 846.3442 212.1768 799.9839 y
221.6992 790.5361 l
246.98 833.3149 270.9644 869.7339 v
294.9429 906.1567 397.4893 1042.7031 Y
384.8608 1050.4912 L
f
0.05 0 0.9 0 k
397.4893 1042.7031 m
270.9644 869.7339 l
259.46 851.9648 221.6992 790.5361 y
245.4492 771.0479 l
286.436 844.7563 294.5347 854.9971 v
302.6318 865.2402 417.0049 1029.1406 y
397.4893 1042.7031 l
f
550.6641 946.9951 m
417.0049 674.2979 l
391.2676 684.3037 l
526.1724 962.0093 l
550.6641 946.9951 l
f
0 0.5 1 0 k
422.2573 1025.4927 m
300.519 848.105 295.665 841.0781 v
290.8115 834.0532 250.9453 767.2266 y
274.6787 750.7334 l
306.2939 807.4238 319.2017 828.0068 v
332.1084 848.5894 442.6641 1014.0186 y
422.2573 1025.4927 l
f
514.917 968.9731 m
384.3613 687.498 l
357.6904 698.3418 351.812 704.2578 v
345.9321 710.1724 492.1021 983.1489 y
514.917 968.9731 l
f
0.063172 0.070192 0.132418 0.000031 k
458.3223 1004.2241 m
295.229 737.5122 l
328.1094 717.7417 l
475.5122 993.4888 l
458.3223 1004.2241 l
f
0 0 0 1 k
358.3472 1032.5029 m
380.2729 1017.7656 385.2896 1015.4766 v
390.3086 1013.1904 398.897 1003.0996 389.3096 987.3477 c
379.7236 971.5962 360.2627 971.0303 356.3232 976.1675 c
352.3877 981.3066 329.4976 1004.2241 y
358.3472 1032.5029 l
f
561.1968 902.8105 m
536.5303 918.4976 526.3423 925.877 v
521.0283 929.7217 507.9063 930.4634 499.6147 912.9111 c
494.7251 902.5625 490.3955 886.1113 501.7227 880.4849 c
525.3926 868.7358 547.7793 861.5439 y
561.1968 902.8105 l
f
U
U
0 0.35 0.58 0 k
481.3745 1046.1299 m
480.6426 1018.665 493.0664 918.499 494.5596 825.3228 c
494.7295 814.6582 482.6802 785.9063 470.6743 735.6523 c
453.1099 662.1289 433.3643 561.6465 y
444.5229 546.6064 l
492.9956 652.5596 508.8652 695.5645 v
528.5122 748.8057 526.0078 835.3232 y
539.6616 1051.9126 l
482.4917 1088.0654 481.3745 1046.1299 v
f
0.01 0.27 0.55 0 k
493.3154 1071.334 m
494.8843 1104.7632 510.5142 1137.1533 500.4258 1137.5493 c
474.5557 1140.1582 490.0435 966.3657 v
492.2148 941.9995 490.6729 1015.0176 493.3154 1071.334 c
f
0 0 0 1 k
397.4893 1042.7031 m
484.6563 1102.3647 l
486.0957 1112.8691 l
384.8608 1050.4912 l
397.4893 1042.7031 l
f
563.0767 939.6538 m
564.7549 1128.061 l
550.6641 944.9233 l
563.0767 939.6538 l
f
0.119234 0.530938 0.757046 0.006317 k
548.5098 1025.4927 m
541.4365 1083.5313 526.7485 1066.3945 v
518.1431 1056.3545 524.9712 972.291 526.7065 897.0156 c
527.9331 843.8081 523.3555 790.5361 y
548.5098 1025.4927 l
f
0 0.35 0.58 0 k
717.3057 1050.1123 m
852.6211 1028.4155 l
863.9336 1020.2681 l
713.7402 1022.6514 l
717.3057 1050.1123 l
f
u
0.049042 0.499184 0.592065 0.000031 k
944.7725 829.7402 m
975.3486 824.5703 996.873 802.2158 993.4199 778.9985 c
989.9688 755.7759 977.0811 342.5088 975.0166 301.7471 c
972.9609 260.9824 961.2881 230.1816 953.3398 209.6836 c
944.0322 185.6816 953.8428 153.7969 y
946.3145 144.208 936.2021 147.9023 v
924.6865 152.1143 911.6631 163.3008 902.9521 188.7559 c
891.9883 220.7822 940.877 249.0967 905.834 291.2178 c
884.1504 317.2881 894.1797 328.3936 920.6289 347.0283 c
968.3359 380.6279 924.5566 464.2148 900.4873 581.8848 c
882.334 670.6357 921.1211 752.4785 y
921.6504 833.6484 944.7725 829.7402 v
f
/BBAccumRotation (0.371212) XT
U
u
0.2 1 1 0.6 k
980.2373 367.6406 m
933.3203 375.0186 L
925.8525 358.5459 L
873.5283 351.6602 892.0205 302.707 v
893.0557 299.9678 908.4658 247.4072 Y
908.4658 247.4072 L
892.1953 174.6758 L
950.126 182.6455 L
960.1055 222.3887 L
984.1709 304.9434 978.7627 338.874 Y
980.2373 367.6406 L
f
0 0.35 0.85 0 k
948.5957 147.6924 m
947.0791 137.5869 935.2871 139.8057 v
928.3682 141.1074 837.9453 206.0537 y
823.6494 215.832 l
888.0635 320.6797 l
911.8037 295.5986 915.4219 279.7041 v
924.8174 238.4717 909.2598 222.6973 904.9746 207.5771 c
896.7686 178.6309 948.5957 147.6924 y
f
U
0.2 1 1 0.6 k
444.5229 546.6064 m
628.4224 539.6572 l
422.8491 527.6436 l
444.5229 546.6064 l
f
0 0.35 0.85 0 k
602.6138 633.6611 m
685.7324 549.8154 l
695.5459 561.3438 l
602.6138 641.749 l
602.6138 633.6611 l
f
608.8975 661.8896 m
717.0898 624.0654 l
718.9092 638.0732 l
608.8975 667.5752 l
608.8975 661.8896 l
f
614.6992 681.3457 m
720.9268 696.9834 l
720.4463 709.4346 l
614.6992 681.3457 l
f
1264.6152 30.1758 m
1267.166 19.0703 1262.8467 16.21 v
1256.7363 12.1543 1135.5615 15.5449 y
1117.1016 17.6064 l
1101.6807 127.4053 l
1134.2383 127.3564 1148.3271 117.8936 v
1184.877 93.3506 1190.4004 60.0322 1197.4004 46.2334 c
1210.8057 19.8154 1264.6152 30.1758 y
f
/BBAccumRotation (0.243523) XT
0.22 0.9 0.8 0.15 k
449.625 546.4131 m
485.6509 626.3379 497.9829 657.2617 v
510.3145 688.1846 516.3447 700.4316 519.2075 728.0254 c
522.0713 755.6191 523.4922 792.1729 y
518.0918 747.9453 509.7441 708.6738 v
501.396 669.4023 440.4146 543.0107 y
449.625 546.4131 l
f
0.139925 0.672297 0.824338 0.020142 k
925.7676 828.3101 m
937.4854 832.9326 954.4775 828.0586 v
955.7002 827.708 943.9053 778.6943 937.8115 735.582 c
931.7178 692.4688 939.7578 445.9453 y
878.3301 574.3174 896.7852 656.1699 v
915.2393 738.021 922.3291 775.9697 y
925.7676 828.3101 l
f
0.004669 0.022919 0.280735 0.000031 k
530.0806 1224.3506 m
528.5786 1199.606 516.3564 1188.7529 v
504.1382 1177.9053 465.209 1170.8394 y
502.4624 1164.9043 522.3784 1180.1187 v
538.5371 1192.4668 535.3955 1210.8613 y
530.0806 1224.3506 l
f
0.110628 0.809201 1 0.0206 k
471.627 595.7813 m
476.7305 575.457 494.9775 567.5186 v
525.6362 554.1797 594.1606 541.4434 y
516.8008 542.8672 484.2456 545.1055 v
460.6792 546.7256 454.6167 557.5322 y
471.627 595.7813 l
f
563.8535 1026.8496 m
572.4424 969.1533 593.7236 952.8301 v
615.0049 936.5068 658.3896 933.9248 y
580.1865 911.2871 568.2749 930.6631 v
561.187 942.1919 563.8535 1026.8496 y
f
0.211887 0.476387 1 0.030701 k
672.7065 1238.0674 m
692.9375 1222.9761 701.0347 1217.2021 v
714.9424 1207.2856 735.835 1197.0249 y
731.8252 1188.8062 l
705.6567 1200.0684 692.604 1200.5166 v
673.75 1201.1646 667.5586 1197.2358 y
670.8501 1208.416 671.9106 1220.1924 v
672.9712 1231.9678 672.7065 1238.0674 y
f
0.18 0.9 1 0.31 k
634.938 527.6289 m
585.1396 510.3057 542.1758 461.0762 v
521.8857 437.8252 502.5664 356.6172 499.3633 402.5176 c
495.5859 456.6523 554.811 493.5234 581.9092 507.5049 c
609.0078 521.4863 623.769 527.9033 y
634.938 527.6289 l
f
460.1479 527.6436 m
499.3633 402.5176 l
500.2935 394.5527 l
457.1885 527.6924 l
460.1479 527.6436 l
f
0.000031 0.286778 0.670863 0.000031 k
894.0801 313.9082 m
888.0635 321.3721 l
823.6494 215.832 l
826.4141 213.9414 l
894.0801 313.9082 l
f
1104.7803 126.8467 m
1123.8018 16.8584 l
1129.5215 16.8584 l
1131.7383 123.0967 1124.8311 125.4873 v
1117.9248 127.8779 1104.7803 126.8467 y
f
0.219608 0.835294 0.807843 0.113725 k
695.0781 560.7949 m
690.7466 554.1738 685.7324 549.8154 y
742.3828 564.6406 794.6855 574.0918 v
846.9883 583.542 895.4258 590.9941 y
894.6094 598.1289 l
704.2471 577.1123 l
699.4097 567.416 695.0781 560.7949 v
f
0.139925 0.672297 0.824338 0.020142 k
987.6084 661.3398 m
991.5586 659.5645 l
987.8535 475.1396 987.6084 455.3936 v
987.3623 435.6484 989.584 399.8359 y
979.0713 413.2432 l
987.6084 661.3398 l
f
0.199252 0.915526 1 0.104097 k
548.5098 1025.4927 m
537.2388 920.2144 535.5591 904.5288 v
533.8804 888.8438 530.668 864.0181 y
539.5991 1037.6147 544.0728 1039.9409 v
546.5649 1041.2373 548.5098 1025.4927 y
f
0.15 0.8 0.87 0.01 k
583.8833 1311.3174 m
588.7192 1322.9375 l
598.3086 1314.334 601.0513 1311.3174 v
603.7939 1308.3008 611.0591 1299.3501 y
603.2388 1297.8262 l
599.7666 1302.1602 594.6782 1306.3853 v
589.5898 1310.6104 583.8833 1311.3174 y
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
